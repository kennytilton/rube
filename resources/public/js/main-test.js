if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.define("goog.DEBUG", true);
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (!goog.isString(name) || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw Error("Invalid module identifier");
  }
  if (!goog.isInModuleLoader_()) {
    throw Error("Module " + name + " has been loaded incorrectly.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return name in goog.loadedModules_ ? goog.loadedModules_[name] : goog.getObjectByName(name);
    } else {
      return null;
    }
  }
};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.moduleLoaderState_ != null;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_isModule) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      deps.pathIsModule[path] = !!opt_isModule;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER && goog.IS_OLD_IE_) {
      goog.maybeProcessDeferredDep_(name);
    }
    if (goog.isProvided_(name)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(name);
      } else {
        return null;
      }
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return null;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    goog.logToConsole_(errorMessage);
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathIsModule:{}, nameToPath:{}, requires:{}, visited:{}, written:{}, deferred:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.isDef(goog.global.CLOSURE_BASE_PATH)) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("SCRIPT");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var script = (scripts[i]);
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src, opt_sourceText) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (importScript(src, opt_sourceText)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document.all);
  goog.importModule_ = function(src) {
    var bootstrap = 'goog.retrieveAndExecModule_("' + src + '");';
    if (goog.importScript_("", bootstrap)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.queuedModules_ = [];
  goog.wrapModule_ = function(srcUrl, scriptText) {
    if (!goog.LOAD_MODULE_USING_EVAL || !goog.isDef(goog.global.JSON)) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + scriptText + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + srcUrl + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(scriptText + "\n//# sourceURL\x3d" + srcUrl + "\n") + ");";
    }
  };
  goog.loadQueuedModules_ = function() {
    var count = goog.queuedModules_.length;
    if (count > 0) {
      var queue = goog.queuedModules_;
      goog.queuedModules_ = [];
      for (var i = 0;i < count;i++) {
        var path = queue[i];
        goog.maybeProcessDeferredPath_(path);
      }
    }
  };
  goog.maybeProcessDeferredDep_ = function(name) {
    if (goog.isDeferredModule_(name) && goog.allDepsAreAvailable_(name)) {
      var path = goog.getPathFromDeps_(name);
      goog.maybeProcessDeferredPath_(goog.basePath + path);
    }
  };
  goog.isDeferredModule_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && goog.dependencies_.pathIsModule[path]) {
      var abspath = goog.basePath + path;
      return abspath in goog.dependencies_.deferred;
    }
    return false;
  };
  goog.allDepsAreAvailable_ = function(name) {
    var path = goog.getPathFromDeps_(name);
    if (path && path in goog.dependencies_.requires) {
      for (var requireName in goog.dependencies_.requires[path]) {
        if (!goog.isProvided_(requireName) && !goog.isDeferredModule_(requireName)) {
          return false;
        }
      }
    }
    return true;
  };
  goog.maybeProcessDeferredPath_ = function(abspath) {
    if (abspath in goog.dependencies_.deferred) {
      var src = goog.dependencies_.deferred[abspath];
      delete goog.dependencies_.deferred[abspath];
      goog.globalEval(src);
    }
  };
  goog.loadModule = function(moduleDef) {
    var previousState = goog.moduleLoaderState_;
    try {
      goog.moduleLoaderState_ = {moduleName:undefined};
      var exports;
      if (goog.isFunction(moduleDef)) {
        exports = moduleDef.call(goog.global, {});
      } else {
        if (goog.isString(moduleDef)) {
          exports = goog.loadModuleFromSource_.call(goog.global, moduleDef);
        } else {
          throw Error("Invalid module definition");
        }
      }
      var moduleName = goog.moduleLoaderState_.moduleName;
      if (!goog.isString(moduleName) || !moduleName) {
        throw Error('Invalid module name "' + moduleName + '"');
      }
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal) {
          Object.seal(exports);
        }
      }
      goog.loadedModules_[moduleName] = exports;
    } finally {
      goog.moduleLoaderState_ = previousState;
    }
  };
  goog.loadModuleFromSource_ = function(source) {
    var exports = {};
    eval(arguments[0]);
    return exports;
  };
  goog.writeScriptSrcNode_ = function(src) {
    goog.global.document.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
  };
  goog.appendScriptSrcNode_ = function(src) {
    var doc = goog.global.document;
    var scriptEl = doc.createElement("script");
    scriptEl.type = "text/javascript";
    scriptEl.src = src;
    scriptEl.defer = false;
    scriptEl.async = false;
    doc.head.appendChild(scriptEl);
  };
  goog.writeScriptTag_ = function(src, opt_sourceText) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      var isOldIE = goog.IS_OLD_IE_;
      if (opt_sourceText === undefined) {
        if (!isOldIE) {
          if (goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
            goog.appendScriptSrcNode_(src);
          } else {
            goog.writeScriptSrcNode_(src);
          }
        } else {
          var state = " onreadystatechange\x3d'goog.onScriptLoad_(this, " + ++goog.lastNonModuleScriptIndex_ + ")' ";
          doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"' + state + "\x3e\x3c/" + "script\x3e");
        }
      } else {
        doc.write('\x3cscript type\x3d"text/javascript"\x3e' + opt_sourceText + "\x3c/" + "script\x3e");
      }
      return true;
    } else {
      return false;
    }
  };
  goog.lastNonModuleScriptIndex_ = 0;
  goog.onScriptLoad_ = function(script, scriptIndex) {
    if (script.readyState == "complete" && goog.lastNonModuleScriptIndex_ == scriptIndex) {
      goog.loadQueuedModules_();
    }
    return true;
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      goog.dependencies_.written[path] = true;
    }
    var moduleState = goog.moduleLoaderState_;
    goog.moduleLoaderState_ = null;
    var loadingModule = false;
    for (var i = 0;i < scripts.length;i++) {
      var path = scripts[i];
      if (path) {
        if (!deps.pathIsModule[path]) {
          goog.importScript_(goog.basePath + path);
        } else {
          loadingModule = true;
          goog.importModule_(goog.basePath + path);
        }
      } else {
        goog.moduleLoaderState_ = moduleState;
        throw Error("Undefined script input");
      }
    }
    goog.moduleLoaderState_ = moduleState;
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    var xhr = new goog.global["XMLHttpRequest"];
    xhr.open("get", src, false);
    xhr.send();
    return xhr.responseText;
  }
};
goog.retrieveAndExecModule_ = function(src) {
  if (!COMPILED) {
    var originalPath = src;
    src = goog.normalizePath_(src);
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    var scriptText = goog.loadFileSync_(src);
    if (scriptText != null) {
      var execModuleScript = goog.wrapModule_(src, scriptText);
      var isOldIE = goog.IS_OLD_IE_;
      if (isOldIE) {
        goog.dependencies_.deferred[originalPath] = execModuleScript;
        goog.queuedModules_.push(originalPath);
      } else {
        importScript(src, execModuleScript);
      }
    } else {
      throw new Error("load of " + src + "failed");
    }
  }
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return (fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _evalTest_ \x3d 1;");
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("SCRIPT");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2;i < arguments.length;i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1;i < arguments.length;i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2;i < arguments.length;i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0;i < b.length + 1;i++) {
    v0[i] = i;
  }
  for (var i = 0;i < a.length;i++) {
    v1[0] = i + 1;
    for (var j = 0;j < b.length;j++) {
      var cost = a[i] != b[j];
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0;j < v0.length;j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  var val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (var k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (var k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return (value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0;j < len2;j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0;c < element.length;c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0;r < recurseResult.length;r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.provide("cljs.core");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.7.48";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_target_STAR_ = "default";
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function cljs$core$_STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
if (typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = function cljs$core$_STAR_print_err_fn_STAR_(_) {
    throw new Error("No *print-err-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core._STAR_print_fn_STAR_ = function() {
    var G__8924__delegate = function(args) {
      return console.log.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__8924 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__8925__i = 0, G__8925__a = new Array(arguments.length - 0);
        while (G__8925__i < G__8925__a.length) {
          G__8925__a[G__8925__i] = arguments[G__8925__i + 0];
          ++G__8925__i;
        }
        args = new cljs.core.IndexedSeq(G__8925__a, 0);
      }
      return G__8924__delegate.call(this, args);
    };
    G__8924.cljs$lang$maxFixedArity = 0;
    G__8924.cljs$lang$applyTo = function(arglist__8926) {
      var args = cljs.core.seq(arglist__8926);
      return G__8924__delegate(args);
    };
    G__8924.cljs$core$IFn$_invoke$arity$variadic = G__8924__delegate;
    return G__8924;
  }();
  cljs.core._STAR_print_err_fn_STAR_ = function() {
    var G__8927__delegate = function(args) {
      return console.error.apply(console, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args) : cljs.core.into_array.call(null, args));
    };
    var G__8927 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__8928__i = 0, G__8928__a = new Array(arguments.length - 0);
        while (G__8928__i < G__8928__a.length) {
          G__8928__a[G__8928__i] = arguments[G__8928__i + 0];
          ++G__8928__i;
        }
        args = new cljs.core.IndexedSeq(G__8928__a, 0);
      }
      return G__8927__delegate.call(this, args);
    };
    G__8927.cljs$lang$maxFixedArity = 0;
    G__8927.cljs$lang$applyTo = function(arglist__8929) {
      var args = cljs.core.seq(arglist__8929);
      return G__8927__delegate(args);
    };
    G__8927.cljs$core$IFn$_invoke$arity$variadic = G__8927__delegate;
    return G__8927;
  }();
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return goog.string.isUnicodeChar(x);
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4514__auto__ = ty;
    if (cljs.core.truth_(and__4514__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4514__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__4423__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4423__auto__)) {
    var s = temp__4423__auto__;
    return s;
  } else {
    return [cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.make_array = function cljs$core$make_array() {
  var args8930 = [];
  var len__5565__auto___8933 = arguments.length;
  var i__5566__auto___8934 = 0;
  while (true) {
    if (i__5566__auto___8934 < len__5565__auto___8933) {
      args8930.push(arguments[i__5566__auto___8934]);
      var G__8935 = i__5566__auto___8934 + 1;
      i__5566__auto___8934 = G__8935;
      continue;
    } else {
    }
    break;
  }
  var G__8932 = args8930.length;
  switch(G__8932) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8930.length)].join(""));;
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__5410__auto___8937 = len;
  var i_8938 = 0;
  while (true) {
    if (i_8938 < n__5410__auto___8937) {
      new_arr[i_8938] = arr[i_8938];
      var G__8939 = i_8938 + 1;
      i_8938 = G__8939;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__8940 = i + 1;
      i = G__8940;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function cljs$core$aget() {
  var args8941 = [];
  var len__5565__auto___8950 = arguments.length;
  var i__5566__auto___8951 = 0;
  while (true) {
    if (i__5566__auto___8951 < len__5565__auto___8950) {
      args8941.push(arguments[i__5566__auto___8951]);
      var G__8952 = i__5566__auto___8951 + 1;
      i__5566__auto___8951 = G__8952;
      continue;
    } else {
    }
    break;
  }
  var G__8946 = args8941.length;
  switch(G__8946) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args8941.slice(2), 0);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return array[i];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, i, idxs) {
  var G__8947 = cljs.core.aget;
  var G__8948 = array[i];
  var G__8949 = idxs;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__8947, G__8948, G__8949) : cljs.core.apply.call(null, G__8947, G__8948, G__8949);
};
cljs.core.aget.cljs$lang$applyTo = function(seq8942) {
  var G__8943 = cljs.core.first(seq8942);
  var seq8942__$1 = cljs.core.next(seq8942);
  var G__8944 = cljs.core.first(seq8942__$1);
  var seq8942__$2 = cljs.core.next(seq8942__$1);
  return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(G__8943, G__8944, seq8942__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset() {
  var args8954 = [];
  var len__5565__auto___8965 = arguments.length;
  var i__5566__auto___8966 = 0;
  while (true) {
    if (i__5566__auto___8966 < len__5565__auto___8965) {
      args8954.push(arguments[i__5566__auto___8966]);
      var G__8967 = i__5566__auto___8966 + 1;
      i__5566__auto___8966 = G__8967;
      continue;
    } else {
    }
    break;
  }
  var G__8960 = args8954.length;
  switch(G__8960) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args8954.slice(3), 0);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, i, val) {
  return array[i] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  var G__8961 = cljs.core.aset;
  var G__8962 = array[idx];
  var G__8963 = idx2;
  var G__8964 = idxv;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__8961, G__8962, G__8963, G__8964) : cljs.core.apply.call(null, G__8961, G__8962, G__8963, G__8964);
};
cljs.core.aset.cljs$lang$applyTo = function(seq8955) {
  var G__8956 = cljs.core.first(seq8955);
  var seq8955__$1 = cljs.core.next(seq8955);
  var G__8957 = cljs.core.first(seq8955__$1);
  var seq8955__$2 = cljs.core.next(seq8955__$1);
  var G__8958 = cljs.core.first(seq8955__$2);
  var seq8955__$3 = cljs.core.next(seq8955__$2);
  return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(G__8956, G__8957, G__8958, seq8955__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array() {
  var args8969 = [];
  var len__5565__auto___8975 = arguments.length;
  var i__5566__auto___8976 = 0;
  while (true) {
    if (i__5566__auto___8976 < len__5565__auto___8975) {
      args8969.push(arguments[i__5566__auto___8976]);
      var G__8977 = i__5566__auto___8976 + 1;
      i__5566__auto___8976 = G__8977;
      continue;
    } else {
    }
    break;
  }
  var G__8971 = args8969.length;
  switch(G__8971) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8969.length)].join(""));;
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  var G__8972 = function(a, x) {
    a.push(x);
    return a;
  };
  var G__8973 = [];
  var G__8974 = aseq;
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__8972, G__8973, G__8974) : cljs.core.reduce.call(null, G__8972, G__8973, G__8974);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke() {
  var args__5572__auto__ = [];
  var len__5565__auto___8982 = arguments.length;
  var i__5566__auto___8983 = 0;
  while (true) {
    if (i__5566__auto___8983 < len__5565__auto___8982) {
      args__5572__auto__.push(arguments[i__5566__auto___8983]);
      var G__8984 = i__5566__auto___8983 + 1;
      i__5566__auto___8983 = G__8984;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 2 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(2), 0) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5573__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq8979) {
  var G__8980 = cljs.core.first(seq8979);
  var seq8979__$1 = cljs.core.next(seq8979);
  var G__8981 = cljs.core.first(seq8979__$1);
  var seq8979__$2 = cljs.core.next(seq8979__$1);
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(G__8980, G__8981, seq8979__$2);
};
cljs.core.Fn = {};
cljs.core.IFn = {};
cljs.core._invoke = function cljs$core$_invoke() {
  var args8989 = [];
  var len__5565__auto___8992 = arguments.length;
  var i__5566__auto___8993 = 0;
  while (true) {
    if (i__5566__auto___8993 < len__5565__auto___8992) {
      args8989.push(arguments[i__5566__auto___8993]);
      var G__8994 = i__5566__auto___8993 + 1;
      i__5566__auto___8993 = G__8994;
      continue;
    } else {
    }
    break;
  }
  var G__8991 = args8989.length;
  switch(G__8991) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8989.length)].join(""));;
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5163__auto__.call(null, this$);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(this$) : m__5163__auto____$1.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__5163__auto__.call(null, this$, a);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, a) : m__5163__auto____$1.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__5163__auto__.call(null, this$, a, b);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__5163__auto____$1.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$4 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__5163__auto__.call(null, this$, a, b, c);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__5163__auto____$1.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$5 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__5163__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__5163__auto____$1.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$6 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__5163__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$6 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__5163__auto____$1.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$7 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__5163__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$7 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$8 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$8 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$9 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$9 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$10 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$10 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$11 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$11 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$12 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$12 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$13 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$13 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$14 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$14 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$15 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$15 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$16 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$16 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$17 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$17 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$18 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$18 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$19 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$19 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$20 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$20 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$21 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$21 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._invoke[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$22 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__5163__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__5163__auto____$1 = cljs.core._invoke["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$22 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__5163__auto____$1.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = {};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__5162__auto__ = value == null ? null : value;
    var m__5163__auto__ = cljs.core._clone[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__5163__auto__.call(null, value);
    } else {
      var m__5163__auto____$1 = cljs.core._clone["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(value) : m__5163__auto____$1.call(null, value);
      } else {
        throw cljs.core.missing_protocol("ICloneable.-clone", value);
      }
    }
  }
};
cljs.core.ICounted = {};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._count[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._count["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ICounted.-count", coll);
      }
    }
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._empty[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._empty["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
      }
    }
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._conj[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__5163__auto__.call(null, coll, o);
    } else {
      var m__5163__auto____$1 = cljs.core._conj["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, o) : m__5163__auto____$1.call(null, coll, o);
      } else {
        throw cljs.core.missing_protocol("ICollection.-conj", coll);
      }
    }
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function cljs$core$_nth() {
  var args9006 = [];
  var len__5565__auto___9009 = arguments.length;
  var i__5566__auto___9010 = 0;
  while (true) {
    if (i__5566__auto___9010 < len__5565__auto___9009) {
      args9006.push(arguments[i__5566__auto___9010]);
      var G__9011 = i__5566__auto___9010 + 1;
      i__5566__auto___9010 = G__9011;
      continue;
    } else {
    }
    break;
  }
  var G__9008 = args9006.length;
  switch(G__9008) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9006.length)].join(""));;
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._nth[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__5163__auto__.call(null, coll, n);
    } else {
      var m__5163__auto____$1 = cljs.core._nth["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, n) : m__5163__auto____$1.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._nth[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__5163__auto__.call(null, coll, n, not_found);
    } else {
      var m__5163__auto____$1 = cljs.core._nth["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__5163__auto____$1.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._first[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._first["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-first", coll);
      }
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._rest[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._rest["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISeq.-rest", coll);
      }
    }
  }
};
cljs.core.INext = {};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._next[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._next["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("INext.-next", coll);
      }
    }
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function cljs$core$_lookup() {
  var args9021 = [];
  var len__5565__auto___9024 = arguments.length;
  var i__5566__auto___9025 = 0;
  while (true) {
    if (i__5566__auto___9025 < len__5565__auto___9024) {
      args9021.push(arguments[i__5566__auto___9025]);
      var G__9026 = i__5566__auto___9025 + 1;
      i__5566__auto___9025 = G__9026;
      continue;
    } else {
    }
    break;
  }
  var G__9023 = args9021.length;
  switch(G__9023) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9021.length)].join(""));;
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._lookup[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__5163__auto__.call(null, o, k);
    } else {
      var m__5163__auto____$1 = cljs.core._lookup["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(o, k) : m__5163__auto____$1.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._lookup[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__5163__auto__.call(null, o, k, not_found);
    } else {
      var m__5163__auto____$1 = cljs.core._lookup["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__5163__auto____$1.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5163__auto__.call(null, coll, k);
    } else {
      var m__5163__auto____$1 = cljs.core._contains_key_QMARK_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5163__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
      }
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._assoc[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__5163__auto__.call(null, coll, k, v);
    } else {
      var m__5163__auto____$1 = cljs.core._assoc["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__5163__auto____$1.call(null, coll, k, v);
      } else {
        throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
      }
    }
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._dissoc[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5163__auto__.call(null, coll, k);
    } else {
      var m__5163__auto____$1 = cljs.core._dissoc["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, k) : m__5163__auto____$1.call(null, coll, k);
      } else {
        throw cljs.core.missing_protocol("IMap.-dissoc", coll);
      }
    }
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._key[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._key["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-key", coll);
      }
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._val[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._val["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IMapEntry.-val", coll);
      }
    }
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._disjoin[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__5163__auto__.call(null, coll, v);
    } else {
      var m__5163__auto____$1 = cljs.core._disjoin["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, v) : m__5163__auto____$1.call(null, coll, v);
      } else {
        throw cljs.core.missing_protocol("ISet.-disjoin", coll);
      }
    }
  }
};
cljs.core.IStack = {};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._peek[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._peek["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-peek", coll);
      }
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._pop[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._pop["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IStack.-pop", coll);
      }
    }
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._assoc_n[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__5163__auto__.call(null, coll, n, val);
    } else {
      var m__5163__auto____$1 = cljs.core._assoc_n["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__5163__auto____$1.call(null, coll, n, val);
      } else {
        throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
      }
    }
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._deref[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto__.call(null, o);
    } else {
      var m__5163__auto____$1 = cljs.core._deref["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IDeref.-deref", o);
      }
    }
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__5163__auto__.call(null, o, msec, timeout_val);
    } else {
      var m__5163__auto____$1 = cljs.core._deref_with_timeout["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__5163__auto____$1.call(null, o, msec, timeout_val);
      } else {
        throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
      }
    }
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._meta[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto__.call(null, o);
    } else {
      var m__5163__auto____$1 = cljs.core._meta["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IMeta.-meta", o);
      }
    }
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._with_meta[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__5163__auto__.call(null, o, meta);
    } else {
      var m__5163__auto____$1 = cljs.core._with_meta["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(o, meta) : m__5163__auto____$1.call(null, o, meta);
      } else {
        throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
      }
    }
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function cljs$core$_reduce() {
  var args9050 = [];
  var len__5565__auto___9053 = arguments.length;
  var i__5566__auto___9054 = 0;
  while (true) {
    if (i__5566__auto___9054 < len__5565__auto___9053) {
      args9050.push(arguments[i__5566__auto___9054]);
      var G__9055 = i__5566__auto___9054 + 1;
      i__5566__auto___9054 = G__9055;
      continue;
    } else {
    }
    break;
  }
  var G__9052 = args9050.length;
  switch(G__9052) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9050.length)].join(""));;
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._reduce[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__5163__auto__.call(null, coll, f);
    } else {
      var m__5163__auto____$1 = cljs.core._reduce["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, f) : m__5163__auto____$1.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._reduce[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__5163__auto__.call(null, coll, f, start);
    } else {
      var m__5163__auto____$1 = cljs.core._reduce["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__5163__auto____$1.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._kv_reduce[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__5163__auto__.call(null, coll, f, init);
    } else {
      var m__5163__auto____$1 = cljs.core._kv_reduce["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__5163__auto____$1.call(null, coll, f, init);
      } else {
        throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
      }
    }
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._equiv[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__5163__auto__.call(null, o, other);
    } else {
      var m__5163__auto____$1 = cljs.core._equiv["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(o, other) : m__5163__auto____$1.call(null, o, other);
      } else {
        throw cljs.core.missing_protocol("IEquiv.-equiv", o);
      }
    }
  }
};
cljs.core.IHash = {};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._hash[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto__.call(null, o);
    } else {
      var m__5163__auto____$1 = cljs.core._hash["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("IHash.-hash", o);
      }
    }
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._seq[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto__.call(null, o);
    } else {
      var m__5163__auto____$1 = cljs.core._seq["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(o) : m__5163__auto____$1.call(null, o);
      } else {
        throw cljs.core.missing_protocol("ISeqable.-seq", o);
      }
    }
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._rseq[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._rseq["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IReversible.-rseq", coll);
      }
    }
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._sorted_seq[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__5163__auto__.call(null, coll, ascending_QMARK_);
    } else {
      var m__5163__auto____$1 = cljs.core._sorted_seq["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__5163__auto____$1.call(null, coll, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
      }
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__5163__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      var m__5163__auto____$1 = cljs.core._sorted_seq_from["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__5163__auto____$1.call(null, coll, k, ascending_QMARK_);
      } else {
        throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
      }
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._entry_key[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__5163__auto__.call(null, coll, entry);
    } else {
      var m__5163__auto____$1 = cljs.core._entry_key["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__5163__auto____$1.call(null, coll, entry);
      } else {
        throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
      }
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._comparator[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._comparator["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("ISorted.-comparator", coll);
      }
    }
  }
};
cljs.core.IWriter = {};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__5162__auto__ = writer == null ? null : writer;
    var m__5163__auto__ = cljs.core._write[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__5163__auto__.call(null, writer, s);
    } else {
      var m__5163__auto____$1 = cljs.core._write["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(writer, s) : m__5163__auto____$1.call(null, writer, s);
      } else {
        throw cljs.core.missing_protocol("IWriter.-write", writer);
      }
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__5162__auto__ = writer == null ? null : writer;
    var m__5163__auto__ = cljs.core._flush[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__5163__auto__.call(null, writer);
    } else {
      var m__5163__auto____$1 = cljs.core._flush["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(writer) : m__5163__auto____$1.call(null, writer);
      } else {
        throw cljs.core.missing_protocol("IWriter.-flush", writer);
      }
    }
  }
};
cljs.core.IPrintWithWriter = {};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._pr_writer[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__5163__auto__.call(null, o, writer, opts);
    } else {
      var m__5163__auto____$1 = cljs.core._pr_writer["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__5163__auto____$1.call(null, o, writer, opts);
      } else {
        throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
      }
    }
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(d) {
  if (!(d == null) && !(d.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__5162__auto__ = d == null ? null : d;
    var m__5163__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(d) : m__5163__auto__.call(null, d);
    } else {
      var m__5163__auto____$1 = cljs.core._realized_QMARK_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(d) : m__5163__auto____$1.call(null, d);
      } else {
        throw cljs.core.missing_protocol("IPending.-realized?", d);
      }
    }
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._notify_watches[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__5163__auto__.call(null, this$, oldval, newval);
    } else {
      var m__5163__auto____$1 = cljs.core._notify_watches["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__5163__auto____$1.call(null, this$, oldval, newval);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
      }
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._add_watch[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__5163__auto__.call(null, this$, key, f);
    } else {
      var m__5163__auto____$1 = cljs.core._add_watch["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__5163__auto____$1.call(null, this$, key, f);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
      }
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__5162__auto__ = this$ == null ? null : this$;
    var m__5163__auto__ = cljs.core._remove_watch[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__5163__auto__.call(null, this$, key);
    } else {
      var m__5163__auto____$1 = cljs.core._remove_watch["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(this$, key) : m__5163__auto____$1.call(null, this$, key);
      } else {
        throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
      }
    }
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._as_transient[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._as_transient["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
      }
    }
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__5162__auto__ = tcoll == null ? null : tcoll;
    var m__5163__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__5163__auto__.call(null, tcoll, val);
    } else {
      var m__5163__auto____$1 = cljs.core._conj_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__5163__auto____$1.call(null, tcoll, val);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
      }
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__5162__auto__ = tcoll == null ? null : tcoll;
    var m__5163__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5163__auto__.call(null, tcoll);
    } else {
      var m__5163__auto____$1 = cljs.core._persistent_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5163__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
      }
    }
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__5162__auto__ = tcoll == null ? null : tcoll;
    var m__5163__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__5163__auto__.call(null, tcoll, key, val);
    } else {
      var m__5163__auto____$1 = cljs.core._assoc_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__5163__auto____$1.call(null, tcoll, key, val);
      } else {
        throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__5162__auto__ = tcoll == null ? null : tcoll;
    var m__5163__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__5163__auto__.call(null, tcoll, key);
    } else {
      var m__5163__auto____$1 = cljs.core._dissoc_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__5163__auto____$1.call(null, tcoll, key);
      } else {
        throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
      }
    }
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__5162__auto__ = tcoll == null ? null : tcoll;
    var m__5163__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__5163__auto__.call(null, tcoll, n, val);
    } else {
      var m__5163__auto____$1 = cljs.core._assoc_n_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__5163__auto____$1.call(null, tcoll, n, val);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
      }
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__5162__auto__ = tcoll == null ? null : tcoll;
    var m__5163__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5163__auto__.call(null, tcoll);
    } else {
      var m__5163__auto____$1 = cljs.core._pop_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5163__auto____$1.call(null, tcoll);
      } else {
        throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
      }
    }
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__5162__auto__ = tcoll == null ? null : tcoll;
    var m__5163__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__5163__auto__.call(null, tcoll, v);
    } else {
      var m__5163__auto____$1 = cljs.core._disjoin_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__5163__auto____$1.call(null, tcoll, v);
      } else {
        throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
      }
    }
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__5162__auto__ = x == null ? null : x;
    var m__5163__auto__ = cljs.core._compare[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__5163__auto__.call(null, x, y);
    } else {
      var m__5163__auto____$1 = cljs.core._compare["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(x, y) : m__5163__auto____$1.call(null, x, y);
      } else {
        throw cljs.core.missing_protocol("IComparable.-compare", x);
      }
    }
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._drop_first[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._drop_first["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
      }
    }
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._chunked_first[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._chunked_first["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
      }
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._chunked_rest[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._chunked_rest["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
      }
    }
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._chunked_next[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._chunked_next["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
      }
    }
  }
};
cljs.core.INamed = {};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__5162__auto__ = x == null ? null : x;
    var m__5163__auto__ = cljs.core._name[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto__.call(null, x);
    } else {
      var m__5163__auto____$1 = cljs.core._name["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-name", x);
      }
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__5162__auto__ = x == null ? null : x;
    var m__5163__auto__ = cljs.core._namespace[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto__.call(null, x);
    } else {
      var m__5163__auto____$1 = cljs.core._namespace["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("INamed.-namespace", x);
      }
    }
  }
};
cljs.core.IAtom = {};
cljs.core.IReset = {};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5163__auto__.call(null, o, new_value);
    } else {
      var m__5163__auto____$1 = cljs.core._reset_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5163__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IReset.-reset!", o);
      }
    }
  }
};
cljs.core.ISwap = {};
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_() {
  var args9111 = [];
  var len__5565__auto___9114 = arguments.length;
  var i__5566__auto___9115 = 0;
  while (true) {
    if (i__5566__auto___9115 < len__5565__auto___9114) {
      args9111.push(arguments[i__5566__auto___9115]);
      var G__9116 = i__5566__auto___9115 + 1;
      i__5566__auto___9115 = G__9116;
      continue;
    } else {
    }
    break;
  }
  var G__9113 = args9111.length;
  switch(G__9113) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9111.length)].join(""));;
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__5163__auto__.call(null, o, f);
    } else {
      var m__5163__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(o, f) : m__5163__auto____$1.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__5163__auto__.call(null, o, f, a);
    } else {
      var m__5163__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__5163__auto____$1.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$4 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__5163__auto__.call(null, o, f, a, b);
    } else {
      var m__5163__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$4 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__5163__auto____$1.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$5 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__5163__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__5163__auto____$1 = cljs.core._swap_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$5 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__5163__auto____$1.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = {};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__5162__auto__ = o == null ? null : o;
    var m__5163__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5163__auto__.call(null, o, new_value);
    } else {
      var m__5163__auto____$1 = cljs.core._vreset_BANG_["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__5163__auto____$1.call(null, o, new_value);
      } else {
        throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
      }
    }
  }
};
cljs.core.IIterable = {};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__5162__auto__ = coll == null ? null : coll;
    var m__5163__auto__ = cljs.core._iterator[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto__.call(null, coll);
    } else {
      var m__5163__auto____$1 = cljs.core._iterator["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(coll) : m__5163__auto____$1.call(null, coll);
      } else {
        throw cljs.core.missing_protocol("IIterable.-iterator", coll);
      }
    }
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return [cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__9122 = i + 2;
        var G__9123 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__9122;
        h1 = G__9123;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__9126 = i + 1;
          var G__9127 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__9126;
          hash = G__9127;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return Math.floor(o) % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4514__auto__ = cljs.core.not(a.ns);
      if (and__4514__auto__) {
        return b.ns;
      } else {
        return and__4514__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__9140 = a.ns;
            var G__9141 = b.ns;
            return goog.array.defaultCompare(G__9140, G__9141);
          }();
          if (0 === nsc) {
            var G__9142 = a.name;
            var G__9143 = b.name;
            return goog.array.defaultCompare(G__9142, G__9143);
          } else {
            return nsc;
          }
        }
      } else {
        var G__9144 = a.name;
        var G__9145 = b.name;
        return goog.array.defaultCompare(G__9144, G__9145);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__9147 = null;
  var G__9147__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
  };
  var G__9147__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
  };
  G__9147 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9147__2.call(this, self__, coll);
      case 3:
        return G__9147__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9147.cljs$core$IFn$_invoke$arity$2 = G__9147__2;
  G__9147.cljs$core$IFn$_invoke$arity$3 = G__9147__3;
  return G__9147;
}();
cljs.core.Symbol.prototype.apply = function(self__, args9146) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9146)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym) : cljs.core.get.call(null, coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found) : cljs.core.get.call(null, coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4942__auto__ = self__._hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function cljs$core$symbol() {
  var args9148 = [];
  var len__5565__auto___9151 = arguments.length;
  var i__5566__auto___9152 = 0;
  while (true) {
    if (i__5566__auto___9152 < len__5565__auto___9151) {
      args9148.push(arguments[i__5566__auto___9152]);
      var G__9153 = i__5566__auto___9152 + 1;
      i__5566__auto___9152 = G__9153;
      continue;
    } else {
    }
    break;
  }
  var G__9150 = args9148.length;
  switch(G__9150) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9148.length)].join(""));;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Symbol) {
    return name;
  } else {
    var idx = name.indexOf("/");
    if (idx === -1) {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    } else {
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
    }
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2523137;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    var G__9156 = this$__$1.sym;
    var G__9157 = other.sym;
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(G__9156, G__9157) : cljs.core._EQ_.call(null, G__9156, G__9157);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.call = function() {
  var G__9202 = null;
  var G__9202__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
  };
  var G__9202__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
  };
  var G__9202__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
  };
  var G__9202__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
  };
  var G__9202__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
  };
  var G__9202__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
  };
  var G__9202__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
  };
  var G__9202__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
  };
  var G__9202__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
  };
  var G__9202__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__9202__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__9202__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__9202__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__9202__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__9202__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__9202__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__9202__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__9202__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__9202__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__9202__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__9202__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__9202__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__9158 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    var G__9159 = a;
    var G__9160 = b;
    var G__9161 = c;
    var G__9162 = d;
    var G__9163 = e;
    var G__9164 = f;
    var G__9165 = g;
    var G__9166 = h;
    var G__9167 = i;
    var G__9168 = j;
    var G__9169 = k;
    var G__9170 = l;
    var G__9171 = m;
    var G__9172 = n;
    var G__9173 = o;
    var G__9174 = p;
    var G__9175 = q;
    var G__9176 = r;
    var G__9177 = s;
    var G__9178 = t;
    var G__9179 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__9158, G__9159, G__9160, G__9161, G__9162, G__9163, G__9164, G__9165, G__9166, G__9167, G__9168, G__9169, G__9170, G__9171, G__9172, G__9173, G__9174, G__9175, G__9176, G__9177, G__9178, G__9179) : cljs.core.apply.call(null, G__9158, G__9159, G__9160, G__9161, G__9162, G__9163, G__9164, G__9165, G__9166, G__9167, G__9168, G__9169, G__9170, G__9171, G__9172, G__9173, G__9174, G__9175, G__9176, 
    G__9177, G__9178, G__9179);
  };
  G__9202 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__9202__1.call(this, self__);
      case 2:
        return G__9202__2.call(this, self__, a);
      case 3:
        return G__9202__3.call(this, self__, a, b);
      case 4:
        return G__9202__4.call(this, self__, a, b, c);
      case 5:
        return G__9202__5.call(this, self__, a, b, c, d);
      case 6:
        return G__9202__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__9202__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__9202__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__9202__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__9202__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__9202__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__9202__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__9202__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__9202__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__9202__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__9202__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__9202__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__9202__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__9202__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__9202__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__9202__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__9202__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9202.cljs$core$IFn$_invoke$arity$1 = G__9202__1;
  G__9202.cljs$core$IFn$_invoke$arity$2 = G__9202__2;
  G__9202.cljs$core$IFn$_invoke$arity$3 = G__9202__3;
  G__9202.cljs$core$IFn$_invoke$arity$4 = G__9202__4;
  G__9202.cljs$core$IFn$_invoke$arity$5 = G__9202__5;
  G__9202.cljs$core$IFn$_invoke$arity$6 = G__9202__6;
  G__9202.cljs$core$IFn$_invoke$arity$7 = G__9202__7;
  G__9202.cljs$core$IFn$_invoke$arity$8 = G__9202__8;
  G__9202.cljs$core$IFn$_invoke$arity$9 = G__9202__9;
  G__9202.cljs$core$IFn$_invoke$arity$10 = G__9202__10;
  G__9202.cljs$core$IFn$_invoke$arity$11 = G__9202__11;
  G__9202.cljs$core$IFn$_invoke$arity$12 = G__9202__12;
  G__9202.cljs$core$IFn$_invoke$arity$13 = G__9202__13;
  G__9202.cljs$core$IFn$_invoke$arity$14 = G__9202__14;
  G__9202.cljs$core$IFn$_invoke$arity$15 = G__9202__15;
  G__9202.cljs$core$IFn$_invoke$arity$16 = G__9202__16;
  G__9202.cljs$core$IFn$_invoke$arity$17 = G__9202__17;
  G__9202.cljs$core$IFn$_invoke$arity$18 = G__9202__18;
  G__9202.cljs$core$IFn$_invoke$arity$19 = G__9202__19;
  G__9202.cljs$core$IFn$_invoke$arity$20 = G__9202__20;
  G__9202.cljs$core$IFn$_invoke$arity$21 = G__9202__21;
  G__9202.cljs$core$IFn$_invoke$arity$22 = G__9202__22;
  return G__9202;
}();
cljs.core.Var.prototype.apply = function(self__, args9155) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9155)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__9180 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  var G__9181 = a;
  var G__9182 = b;
  var G__9183 = c;
  var G__9184 = d;
  var G__9185 = e;
  var G__9186 = f;
  var G__9187 = g;
  var G__9188 = h;
  var G__9189 = i;
  var G__9190 = j;
  var G__9191 = k;
  var G__9192 = l;
  var G__9193 = m;
  var G__9194 = n;
  var G__9195 = o;
  var G__9196 = p;
  var G__9197 = q;
  var G__9198 = r;
  var G__9199 = s;
  var G__9200 = t;
  var G__9201 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__9180, G__9181, G__9182, G__9183, G__9184, G__9185, G__9186, G__9187, G__9188, G__9189, G__9190, G__9191, G__9192, G__9193, G__9194, G__9195, G__9196, G__9197, G__9198, G__9199, G__9200, G__9201) : cljs.core.apply.call(null, G__9180, G__9181, G__9182, G__9183, G__9184, G__9185, G__9186, G__9187, G__9188, G__9189, G__9190, G__9191, G__9192, G__9193, G__9194, G__9195, G__9196, G__9197, G__9198, 
  G__9199, G__9200, G__9201);
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_() {
  var args9215 = [];
  var len__5565__auto___9221 = arguments.length;
  var i__5566__auto___9222 = 0;
  while (true) {
    if (i__5566__auto___9222 < len__5565__auto___9221) {
      args9215.push(arguments[i__5566__auto___9222]);
      var G__9223 = i__5566__auto___9222 + 1;
      i__5566__auto___9222 = G__9223;
      continue;
    } else {
    }
    break;
  }
  var G__9220 = args9215.length;
  switch(G__9220) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9215.slice(2), 0);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__9225 = y;
        var G__9226 = cljs.core.first(more);
        var G__9227 = cljs.core.next(more);
        x = G__9225;
        y = G__9226;
        more = G__9227;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq9216) {
  var G__9217 = cljs.core.first(seq9216);
  var seq9216__$1 = cljs.core.next(seq9216);
  var G__9218 = cljs.core.first(seq9216__$1);
  var seq9216__$2 = cljs.core.next(seq9216__$1);
  return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(G__9217, G__9218, seq9216__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(self__.iter) : cljs.core.es6_iterator_seq.call(null, self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__9228 = n + 1;
      var G__9229 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__9230 = cljs.core.next(coll__$1);
      n = G__9228;
      hash_code = G__9229;
      coll__$1 = G__9230;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__9231 = n + 1;
      var G__9232 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__9233 = cljs.core.next(coll__$1);
      n = G__9231;
      hash_code = G__9232;
      coll__$1 = G__9233;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = true;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    var G__9234 = this$__$1.valueOf();
    var G__9235 = other.valueOf();
    return goog.array.defaultCompare(G__9234, G__9235);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(this$__$1), cljs.core.str(" to "), cljs.core.str(other)].join(""));
  }
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.Fn["function"] = true;
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o);
};
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce() {
  var args9236 = [];
  var len__5565__auto___9245 = arguments.length;
  var i__5566__auto___9246 = 0;
  while (true) {
    if (i__5566__auto___9246 < len__5565__auto___9245) {
      args9236.push(arguments[i__5566__auto___9246]);
      var G__9247 = i__5566__auto___9246 + 1;
      i__5566__auto___9246 = G__9247;
      continue;
    } else {
    }
    break;
  }
  var G__9238 = args9236.length;
  switch(G__9238) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9236.length)].join(""));;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cljs.core._count(cicoll);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__9239 = val;
          var G__9240 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9239, G__9240) : f.call(null, G__9239, G__9240);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__9249 = nval;
          var G__9250 = n + 1;
          val = G__9249;
          n = G__9250;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__9241 = val__$1;
        var G__9242 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9241, G__9242) : f.call(null, G__9241, G__9242);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__9251 = nval;
        var G__9252 = n + 1;
        val__$1 = G__9251;
        n = G__9252;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$4 = function(cicoll, f, val, idx) {
  var cnt = cljs.core._count(cicoll);
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__9243 = val__$1;
        var G__9244 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9243, G__9244) : f.call(null, G__9243, G__9244);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__9253 = nval;
        var G__9254 = n + 1;
        val__$1 = G__9253;
        n = G__9254;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.array_reduce = function cljs$core$array_reduce() {
  var args9255 = [];
  var len__5565__auto___9264 = arguments.length;
  var i__5566__auto___9265 = 0;
  while (true) {
    if (i__5566__auto___9265 < len__5565__auto___9264) {
      args9255.push(arguments[i__5566__auto___9265]);
      var G__9266 = i__5566__auto___9265 + 1;
      i__5566__auto___9265 = G__9266;
      continue;
    } else {
    }
    break;
  }
  var G__9257 = args9255.length;
  switch(G__9257) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9255.length)].join(""));;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__9258 = val;
          var G__9259 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9258, G__9259) : f.call(null, G__9258, G__9259);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__9268 = nval;
          var G__9269 = n + 1;
          val = G__9268;
          n = G__9269;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__9260 = val__$1;
        var G__9261 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9260, G__9261) : f.call(null, G__9260, G__9261);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__9270 = nval;
        var G__9271 = n + 1;
        val__$1 = G__9270;
        n = G__9271;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__9262 = val__$1;
        var G__9263 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9262, G__9263) : f.call(null, G__9262, G__9263);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__9272 = nval;
        var G__9273 = n + 1;
        val__$1 = G__9272;
        n = G__9273;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__4838__auto__ = 0;
  var y__4839__auto__ = self__.arr.length - self__.i;
  return x__4838__auto__ > y__4839__auto__ ? x__4838__auto__ : y__4839__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.prim_seq = function cljs$core$prim_seq() {
  var args9278 = [];
  var len__5565__auto___9281 = arguments.length;
  var i__5566__auto___9282 = 0;
  while (true) {
    if (i__5566__auto___9282 < len__5565__auto___9281) {
      args9278.push(arguments[i__5566__auto___9282]);
      var G__9283 = i__5566__auto___9282 + 1;
      i__5566__auto___9282 = G__9283;
      continue;
    } else {
    }
    break;
  }
  var G__9280 = args9278.length;
  switch(G__9280) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9278.length)].join(""));;
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq() {
  var args9285 = [];
  var len__5565__auto___9288 = arguments.length;
  var i__5566__auto___9289 = 0;
  while (true) {
    if (i__5566__auto___9289 < len__5565__auto___9288) {
      args9285.push(arguments[i__5566__auto___9289]);
      var G__9290 = i__5566__auto___9289 + 1;
      i__5566__auto___9289 = G__9290;
      continue;
    } else {
    }
    break;
  }
  var G__9287 = args9285.length;
  switch(G__9287) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9285.length)].join(""));;
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1, other) : cljs.core.equiv_sequential.call(null, coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__9292 = cljs.core.List.EMPTY;
  var G__9293 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__9292, G__9293) : cljs.core.with_meta.call(null, G__9292, G__9293);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1) : cljs.core.seq_reduce.call(null, f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1) : cljs.core.seq_reduce.call(null, f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o, coll__$1) : cljs.core.cons.call(null, o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__9294 = sn;
      s = G__9294;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function cljs$core$conj() {
  var args9295 = [];
  var len__5565__auto___9301 = arguments.length;
  var i__5566__auto___9302 = 0;
  while (true) {
    if (i__5566__auto___9302 < len__5565__auto___9301) {
      args9295.push(arguments[i__5566__auto___9302]);
      var G__9303 = i__5566__auto___9302 + 1;
      i__5566__auto___9302 = G__9303;
      continue;
    } else {
    }
    break;
  }
  var G__9300 = args9295.length;
  switch(G__9300) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9295.slice(2), 0);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return cljs.core._conj(cljs.core.List.EMPTY, x);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__9305 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__9306 = cljs.core.first(xs);
      var G__9307 = cljs.core.next(xs);
      coll = G__9305;
      x = G__9306;
      xs = G__9307;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq9296) {
  var G__9297 = cljs.core.first(seq9296);
  var seq9296__$1 = cljs.core.next(seq9296);
  var G__9298 = cljs.core.first(seq9296__$1);
  var seq9296__$2 = cljs.core.next(seq9296__$1);
  return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__9297, G__9298, seq9296__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__9308 = cljs.core.next(s);
      var G__9309 = acc + 1;
      s = G__9308;
      acc = G__9309;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth() {
  var args9314 = [];
  var len__5565__auto___9317 = arguments.length;
  var i__5566__auto___9318 = 0;
  while (true) {
    if (i__5566__auto___9318 < len__5565__auto___9317) {
      args9314.push(arguments[i__5566__auto___9318]);
      var G__9319 = i__5566__auto___9318 + 1;
      i__5566__auto___9318 = G__9319;
      continue;
    } else {
    }
    break;
  }
  var G__9316 = args9314.length;
  switch(G__9316) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9314.length)].join(""));;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__9321 = cljs.core.next(coll);
            var G__9322 = n - 1;
            coll = G__9321;
            n = G__9322;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__9323 = cljs.core.next(coll);
            var G__9324 = n - 1;
            var G__9325 = not_found;
            coll = G__9323;
            n = G__9324;
            not_found = G__9325;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth() {
  var args9326 = [];
  var len__5565__auto___9333 = arguments.length;
  var i__5566__auto___9334 = 0;
  while (true) {
    if (i__5566__auto___9334 < len__5565__auto___9333) {
      args9326.push(arguments[i__5566__auto___9334]);
      var G__9335 = i__5566__auto___9334 + 1;
      i__5566__auto___9334 = G__9335;
      continue;
    } else {
    }
    break;
  }
  var G__9328 = args9326.length;
  switch(G__9328) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9326.length)].join(""));;
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return null;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return null;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (n < coll.length) {
            return coll[n];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (n < coll.length) {
              return coll.charAt(n);
            } else {
              return not_found;
            }
          } else {
            if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$ ? true : false : false) {
              return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__9337 = n__$1 - 1;
      var G__9338 = cljs.core.rest(xs);
      n__$1 = G__9337;
      xs = G__9338;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get() {
  var args9339 = [];
  var len__5565__auto___9344 = arguments.length;
  var i__5566__auto___9345 = 0;
  while (true) {
    if (i__5566__auto___9345 < len__5565__auto___9344) {
      args9339.push(arguments[i__5566__auto___9345]);
      var G__9346 = i__5566__auto___9345 + 1;
      i__5566__auto___9345 = G__9346;
      continue;
    } else {
    }
    break;
  }
  var G__9341 = args9339.length;
  switch(G__9341) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9339.length)].join(""));;
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k | 0];
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (k < o.length) {
          return o[k];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc() {
  var args9348 = [];
  var len__5565__auto___9355 = arguments.length;
  var i__5566__auto___9356 = 0;
  while (true) {
    if (i__5566__auto___9356 < len__5565__auto___9355) {
      args9348.push(arguments[i__5566__auto___9356]);
      var G__9357 = i__5566__auto___9356 + 1;
      i__5566__auto___9356 = G__9357;
      continue;
    } else {
    }
    break;
  }
  var G__9354 = args9348.length;
  switch(G__9354) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9348.slice(3), 0);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null)) {
    return cljs.core._assoc(coll, k, v);
  } else {
    return cljs.core.PersistentHashMap.fromArrays([k], [v]);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__9359 = ret;
      var G__9360 = cljs.core.first(kvs);
      var G__9361 = cljs.core.second(kvs);
      var G__9362 = cljs.core.nnext(kvs);
      coll = G__9359;
      k = G__9360;
      v = G__9361;
      kvs = G__9362;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq9349) {
  var G__9350 = cljs.core.first(seq9349);
  var seq9349__$1 = cljs.core.next(seq9349);
  var G__9351 = cljs.core.first(seq9349__$1);
  var seq9349__$2 = cljs.core.next(seq9349__$1);
  var G__9352 = cljs.core.first(seq9349__$2);
  var seq9349__$3 = cljs.core.next(seq9349__$2);
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__9350, G__9351, G__9352, seq9349__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc() {
  var args9363 = [];
  var len__5565__auto___9369 = arguments.length;
  var i__5566__auto___9370 = 0;
  while (true) {
    if (i__5566__auto___9370 < len__5565__auto___9369) {
      args9363.push(arguments[i__5566__auto___9370]);
      var G__9371 = i__5566__auto___9370 + 1;
      i__5566__auto___9370 = G__9371;
      continue;
    } else {
    }
    break;
  }
  var G__9368 = args9363.length;
  switch(G__9368) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9363.slice(2), 0);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__9373 = ret;
        var G__9374 = cljs.core.first(ks);
        var G__9375 = cljs.core.next(ks);
        coll = G__9373;
        k = G__9374;
        ks = G__9375;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq9364) {
  var G__9365 = cljs.core.first(seq9364);
  var seq9364__$1 = cljs.core.next(seq9364);
  var G__9366 = cljs.core.first(seq9364__$1);
  var seq9364__$2 = cljs.core.next(seq9364__$1);
  return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__9365, G__9366, seq9364__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4526__auto__ = goog.isFunction(f);
  if (or__4526__auto__) {
    return or__4526__auto__;
  } else {
    if (!(f == null)) {
      if (false || f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.call = function() {
  var G__9381 = null;
  var G__9381__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__9381__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__9381__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__9381__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__9381__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__9381__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__9381__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__9381__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__9381__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__9381__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__9381__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__9381__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__9381__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__9381__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__9381__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__9381__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__9381__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__9381__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__9381__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__9381__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__9381__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__9381__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  };
  G__9381 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__9381__1.call(this, self__);
      case 2:
        return G__9381__2.call(this, self__, a);
      case 3:
        return G__9381__3.call(this, self__, a, b);
      case 4:
        return G__9381__4.call(this, self__, a, b, c);
      case 5:
        return G__9381__5.call(this, self__, a, b, c, d);
      case 6:
        return G__9381__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__9381__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__9381__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__9381__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__9381__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__9381__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__9381__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__9381__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__9381__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__9381__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__9381__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__9381__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__9381__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__9381__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__9381__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__9381__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__9381__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9381.cljs$core$IFn$_invoke$arity$1 = G__9381__1;
  G__9381.cljs$core$IFn$_invoke$arity$2 = G__9381__2;
  G__9381.cljs$core$IFn$_invoke$arity$3 = G__9381__3;
  G__9381.cljs$core$IFn$_invoke$arity$4 = G__9381__4;
  G__9381.cljs$core$IFn$_invoke$arity$5 = G__9381__5;
  G__9381.cljs$core$IFn$_invoke$arity$6 = G__9381__6;
  G__9381.cljs$core$IFn$_invoke$arity$7 = G__9381__7;
  G__9381.cljs$core$IFn$_invoke$arity$8 = G__9381__8;
  G__9381.cljs$core$IFn$_invoke$arity$9 = G__9381__9;
  G__9381.cljs$core$IFn$_invoke$arity$10 = G__9381__10;
  G__9381.cljs$core$IFn$_invoke$arity$11 = G__9381__11;
  G__9381.cljs$core$IFn$_invoke$arity$12 = G__9381__12;
  G__9381.cljs$core$IFn$_invoke$arity$13 = G__9381__13;
  G__9381.cljs$core$IFn$_invoke$arity$14 = G__9381__14;
  G__9381.cljs$core$IFn$_invoke$arity$15 = G__9381__15;
  G__9381.cljs$core$IFn$_invoke$arity$16 = G__9381__16;
  G__9381.cljs$core$IFn$_invoke$arity$17 = G__9381__17;
  G__9381.cljs$core$IFn$_invoke$arity$18 = G__9381__18;
  G__9381.cljs$core$IFn$_invoke$arity$19 = G__9381__19;
  G__9381.cljs$core$IFn$_invoke$arity$20 = G__9381__20;
  G__9381.cljs$core$IFn$_invoke$arity$21 = G__9381__21;
  G__9381.cljs$core$IFn$_invoke$arity$22 = G__9381__22;
  return G__9381;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args9380) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9380)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : cljs.core.apply.call(null, self__.afn, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (function() {
    var and__4514__auto__ = !(o == null);
    if (and__4514__auto__) {
      if (!(o == null)) {
        if (o.cljs$lang$protocol_mask$partition0$ & 131072 || o.cljs$core$IMeta$) {
          return true;
        } else {
          if (!o.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o);
      }
    } else {
      return and__4514__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj() {
  var args9386 = [];
  var len__5565__auto___9392 = arguments.length;
  var i__5566__auto___9393 = 0;
  while (true) {
    if (i__5566__auto___9393 < len__5565__auto___9392) {
      args9386.push(arguments[i__5566__auto___9393]);
      var G__9394 = i__5566__auto___9393 + 1;
      i__5566__auto___9393 = G__9394;
      continue;
    } else {
    }
    break;
  }
  var G__9391 = args9386.length;
  switch(G__9391) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9386.slice(2), 0);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__9396 = ret;
        var G__9397 = cljs.core.first(ks);
        var G__9398 = cljs.core.next(ks);
        coll = G__9396;
        k = G__9397;
        ks = G__9398;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq9387) {
  var G__9388 = cljs.core.first(seq9387);
  var seq9387__$1 = cljs.core.next(seq9387);
  var G__9389 = cljs.core.first(seq9387__$1);
  var seq9387__$2 = cljs.core.next(seq9387__$1);
  return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(G__9388, G__9389, seq9387__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj() {
  var args9419 = [];
  var len__5565__auto___9425 = arguments.length;
  var i__5566__auto___9426 = 0;
  while (true) {
    if (i__5566__auto___9426 < len__5565__auto___9425) {
      args9419.push(arguments[i__5566__auto___9426]);
      var G__9427 = i__5566__auto___9426 + 1;
      i__5566__auto___9426 = G__9427;
      continue;
    } else {
    }
    break;
  }
  var G__9422 = args9419.length;
  switch(G__9422) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9419.slice(0), 0);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__5584__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals) : cljs.core.apply.call(null, goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq9420) {
  return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq9420));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  var keys = [];
  var G__9431_9433 = obj;
  var G__9432_9434 = function(G__9431_9433, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__9431_9433, keys);
  goog.object.forEach(G__9431_9433, G__9432_9434);
  return keys;
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__9435 = i__$1 + 1;
      var G__9436 = j__$1 + 1;
      var G__9437 = len__$1 - 1;
      i__$1 = G__9435;
      j__$1 = G__9436;
      len__$1 = G__9437;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__9438 = i__$1 - 1;
      var G__9439 = j__$1 - 1;
      var G__9440 = len__$1 - 1;
      i__$1 = G__9438;
      j__$1 = G__9439;
      len__$1 = G__9440;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  if (!(s == null)) {
    if (s.cljs$lang$protocol_mask$partition0$ & 8388608 || s.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!s.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4526__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4526__auto__) {
    return or__4526__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_() {
  var args9451 = [];
  var len__5565__auto___9457 = arguments.length;
  var i__5566__auto___9458 = 0;
  while (true) {
    if (i__5566__auto___9458 < len__5565__auto___9457) {
      args9451.push(arguments[i__5566__auto___9458]);
      var G__9459 = i__5566__auto___9458 + 1;
      i__5566__auto___9458 = G__9459;
      continue;
    } else {
    }
    break;
  }
  var G__9456 = args9451.length;
  switch(G__9456) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9451.slice(2), 0);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__9461 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__9462 = etc;
          s = G__9461;
          xs = G__9462;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq9452) {
  var G__9453 = cljs.core.first(seq9452);
  var seq9452__$1 = cljs.core.next(seq9452);
  var G__9454 = cljs.core.first(seq9452__$1);
  var seq9452__$2 = cljs.core.next(seq9452__$1);
  return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__9453, G__9454, seq9452__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x), cljs.core.str(" to "), cljs.core.str(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed() {
  var args9465 = [];
  var len__5565__auto___9468 = arguments.length;
  var i__5566__auto___9469 = 0;
  while (true) {
    if (i__5566__auto___9469 < len__5565__auto___9468) {
      args9465.push(arguments[i__5566__auto___9469]);
      var G__9470 = i__5566__auto___9469 + 1;
      i__5566__auto___9469 = G__9470;
      continue;
    } else {
    }
    break;
  }
  var G__9467 = args9465.length;
  switch(G__9467) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9465.length)].join(""));;
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__9472 = xs;
      var G__9473 = ys;
      var G__9474 = len;
      var G__9475 = n + 1;
      xs = G__9472;
      ys = G__9473;
      len = G__9474;
      n = G__9475;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort() {
  var args9476 = [];
  var len__5565__auto___9481 = arguments.length;
  var i__5566__auto___9482 = 0;
  while (true) {
    if (i__5566__auto___9482 < len__5565__auto___9481) {
      args9476.push(arguments[i__5566__auto___9482]);
      var G__9483 = i__5566__auto___9482 + 1;
      i__5566__auto___9482 = G__9483;
      continue;
    } else {
    }
    break;
  }
  var G__9478 = args9476.length;
  switch(G__9478) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9476.length)].join(""));;
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
    var G__9479_9485 = a;
    var G__9480_9486 = cljs.core.fn__GT_comparator(comp);
    goog.array.stableSort(G__9479_9485, G__9480_9486);
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by() {
  var args9487 = [];
  var len__5565__auto___9490 = arguments.length;
  var i__5566__auto___9491 = 0;
  while (true) {
    if (i__5566__auto___9491 < len__5565__auto___9490) {
      args9487.push(arguments[i__5566__auto___9491]);
      var G__9492 = i__5566__auto___9491 + 1;
      i__5566__auto___9491 = G__9492;
      continue;
    } else {
    }
    break;
  }
  var G__9489 = args9487.length;
  switch(G__9489) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9487.length)].join(""));;
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    return cljs.core.fn__GT_comparator(comp).call(null, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x), keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y));
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce() {
  var args9494 = [];
  var len__5565__auto___9502 = arguments.length;
  var i__5566__auto___9503 = 0;
  while (true) {
    if (i__5566__auto___9503 < len__5565__auto___9502) {
      args9494.push(arguments[i__5566__auto___9503]);
      var G__9504 = i__5566__auto___9503 + 1;
      i__5566__auto___9503 = G__9504;
      continue;
    } else {
    }
    break;
  }
  var G__9496 = args9494.length;
  switch(G__9496) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9494.length)].join(""));;
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__4423__auto__ = cljs.core.seq(coll);
  if (temp__4423__auto__) {
    var s = temp__4423__auto__;
    var G__9497 = f;
    var G__9498 = cljs.core.first(s);
    var G__9499 = cljs.core.next(s);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__9497, G__9498, G__9499) : cljs.core.reduce.call(null, G__9497, G__9498, G__9499);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__9500 = val__$1;
        var G__9501 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9500, G__9501) : f.call(null, G__9500, G__9501);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__9506 = nval;
        var G__9507 = cljs.core.next(coll__$1);
        val__$1 = G__9506;
        coll__$1 = G__9507;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a);
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null, a);
};
cljs.core.reduce = function cljs$core$reduce() {
  var args9508 = [];
  var len__5565__auto___9513 = arguments.length;
  var i__5566__auto___9514 = 0;
  while (true) {
    if (i__5566__auto___9514 < len__5565__auto___9513) {
      args9508.push(arguments[i__5566__auto___9514]);
      var G__9515 = i__5566__auto___9514 + 1;
      i__5566__auto___9514 = G__9515;
      continue;
    } else {
    }
    break;
  }
  var G__9510 = args9508.length;
  switch(G__9510) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9508.length)].join(""));;
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing() {
  var args9517 = [];
  var len__5565__auto___9520 = arguments.length;
  var i__5566__auto___9521 = 0;
  while (true) {
    if (i__5566__auto___9521 < len__5565__auto___9520) {
      args9517.push(arguments[i__5566__auto___9521]);
      var G__9522 = i__5566__auto___9521 + 1;
      i__5566__auto___9521 = G__9522;
      continue;
    } else {
    }
    break;
  }
  var G__9519 = args9517.length;
  switch(G__9519) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9517.length)].join(""));;
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__9524 = null;
    var G__9524__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__9524__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__9524__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__9524 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__9524__0.call(this);
        case 1:
          return G__9524__1.call(this, x);
        case 2:
          return G__9524__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__9524.cljs$core$IFn$_invoke$arity$0 = G__9524__0;
    G__9524.cljs$core$IFn$_invoke$arity$1 = G__9524__1;
    G__9524.cljs$core$IFn$_invoke$arity$2 = G__9524__2;
    return G__9524;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce() {
  var args9525 = [];
  var len__5565__auto___9528 = arguments.length;
  var i__5566__auto___9529 = 0;
  while (true) {
    if (i__5566__auto___9529 < len__5565__auto___9528) {
      args9525.push(arguments[i__5566__auto___9529]);
      var G__9530 = i__5566__auto___9529 + 1;
      i__5566__auto___9529 = G__9530;
      continue;
    } else {
    }
    break;
  }
  var G__9527 = args9525.length;
  switch(G__9527) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9525.length)].join(""));;
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_() {
  var args9532 = [];
  var len__5565__auto___9538 = arguments.length;
  var i__5566__auto___9539 = 0;
  while (true) {
    if (i__5566__auto___9539 < len__5565__auto___9538) {
      args9532.push(arguments[i__5566__auto___9539]);
      var G__9540 = i__5566__auto___9539 + 1;
      i__5566__auto___9539 = G__9540;
      continue;
    } else {
    }
    break;
  }
  var G__9537 = args9532.length;
  switch(G__9537) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9532.slice(2), 0);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq9533) {
  var G__9534 = cljs.core.first(seq9533);
  var seq9533__$1 = cljs.core.next(seq9533);
  var G__9535 = cljs.core.first(seq9533__$1);
  var seq9533__$2 = cljs.core.next(seq9533__$1);
  return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__9534, G__9535, seq9533__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_() {
  var args9542 = [];
  var len__5565__auto___9548 = arguments.length;
  var i__5566__auto___9549 = 0;
  while (true) {
    if (i__5566__auto___9549 < len__5565__auto___9548) {
      args9542.push(arguments[i__5566__auto___9549]);
      var G__9550 = i__5566__auto___9549 + 1;
      i__5566__auto___9549 = G__9550;
      continue;
    } else {
    }
    break;
  }
  var G__9547 = args9542.length;
  switch(G__9547) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9542.slice(2), 0);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq9543) {
  var G__9544 = cljs.core.first(seq9543);
  var seq9543__$1 = cljs.core.next(seq9543);
  var G__9545 = cljs.core.first(seq9543__$1);
  var seq9543__$2 = cljs.core.next(seq9543__$1);
  return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(G__9544, G__9545, seq9543__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_() {
  var args9552 = [];
  var len__5565__auto___9558 = arguments.length;
  var i__5566__auto___9559 = 0;
  while (true) {
    if (i__5566__auto___9559 < len__5565__auto___9558) {
      args9552.push(arguments[i__5566__auto___9559]);
      var G__9560 = i__5566__auto___9559 + 1;
      i__5566__auto___9559 = G__9560;
      continue;
    } else {
    }
    break;
  }
  var G__9557 = args9552.length;
  switch(G__9557) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9552.slice(2), 0);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq9553) {
  var G__9554 = cljs.core.first(seq9553);
  var seq9553__$1 = cljs.core.next(seq9553);
  var G__9555 = cljs.core.first(seq9553__$1);
  var seq9553__$2 = cljs.core.next(seq9553__$1);
  return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(G__9554, G__9555, seq9553__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_() {
  var args9562 = [];
  var len__5565__auto___9568 = arguments.length;
  var i__5566__auto___9569 = 0;
  while (true) {
    if (i__5566__auto___9569 < len__5565__auto___9568) {
      args9562.push(arguments[i__5566__auto___9569]);
      var G__9570 = i__5566__auto___9569 + 1;
      i__5566__auto___9569 = G__9570;
      continue;
    } else {
    }
    break;
  }
  var G__9567 = args9562.length;
  switch(G__9567) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9562.slice(2), 0);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq9563) {
  var G__9564 = cljs.core.first(seq9563);
  var seq9563__$1 = cljs.core.next(seq9563);
  var G__9565 = cljs.core.first(seq9563__$1);
  var seq9563__$2 = cljs.core.next(seq9563__$1);
  return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(G__9564, G__9565, seq9563__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_() {
  var args9572 = [];
  var len__5565__auto___9578 = arguments.length;
  var i__5566__auto___9579 = 0;
  while (true) {
    if (i__5566__auto___9579 < len__5565__auto___9578) {
      args9572.push(arguments[i__5566__auto___9579]);
      var G__9580 = i__5566__auto___9579 + 1;
      i__5566__auto___9579 = G__9580;
      continue;
    } else {
    }
    break;
  }
  var G__9577 = args9572.length;
  switch(G__9577) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9572.slice(2), 0);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__9582 = y;
        var G__9583 = cljs.core.first(more);
        var G__9584 = cljs.core.next(more);
        x = G__9582;
        y = G__9583;
        more = G__9584;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq9573) {
  var G__9574 = cljs.core.first(seq9573);
  var seq9573__$1 = cljs.core.next(seq9573);
  var G__9575 = cljs.core.first(seq9573__$1);
  var seq9573__$2 = cljs.core.next(seq9573__$1);
  return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(G__9574, G__9575, seq9573__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_() {
  var args9585 = [];
  var len__5565__auto___9591 = arguments.length;
  var i__5566__auto___9592 = 0;
  while (true) {
    if (i__5566__auto___9592 < len__5565__auto___9591) {
      args9585.push(arguments[i__5566__auto___9592]);
      var G__9593 = i__5566__auto___9592 + 1;
      i__5566__auto___9592 = G__9593;
      continue;
    } else {
    }
    break;
  }
  var G__9590 = args9585.length;
  switch(G__9590) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9585.slice(2), 0);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__9595 = y;
        var G__9596 = cljs.core.first(more);
        var G__9597 = cljs.core.next(more);
        x = G__9595;
        y = G__9596;
        more = G__9597;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq9586) {
  var G__9587 = cljs.core.first(seq9586);
  var seq9586__$1 = cljs.core.next(seq9586);
  var G__9588 = cljs.core.first(seq9586__$1);
  var seq9586__$2 = cljs.core.next(seq9586__$1);
  return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__9587, G__9588, seq9586__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_() {
  var args9598 = [];
  var len__5565__auto___9604 = arguments.length;
  var i__5566__auto___9605 = 0;
  while (true) {
    if (i__5566__auto___9605 < len__5565__auto___9604) {
      args9598.push(arguments[i__5566__auto___9605]);
      var G__9606 = i__5566__auto___9605 + 1;
      i__5566__auto___9605 = G__9606;
      continue;
    } else {
    }
    break;
  }
  var G__9603 = args9598.length;
  switch(G__9603) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9598.slice(2), 0);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__9608 = y;
        var G__9609 = cljs.core.first(more);
        var G__9610 = cljs.core.next(more);
        x = G__9608;
        y = G__9609;
        more = G__9610;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq9599) {
  var G__9600 = cljs.core.first(seq9599);
  var seq9599__$1 = cljs.core.next(seq9599);
  var G__9601 = cljs.core.first(seq9599__$1);
  var seq9599__$2 = cljs.core.next(seq9599__$1);
  return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(G__9600, G__9601, seq9599__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_() {
  var args9611 = [];
  var len__5565__auto___9617 = arguments.length;
  var i__5566__auto___9618 = 0;
  while (true) {
    if (i__5566__auto___9618 < len__5565__auto___9617) {
      args9611.push(arguments[i__5566__auto___9618]);
      var G__9619 = i__5566__auto___9618 + 1;
      i__5566__auto___9618 = G__9619;
      continue;
    } else {
    }
    break;
  }
  var G__9616 = args9611.length;
  switch(G__9616) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9611.slice(2), 0);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__9621 = y;
        var G__9622 = cljs.core.first(more);
        var G__9623 = cljs.core.next(more);
        x = G__9621;
        y = G__9622;
        more = G__9623;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq9612) {
  var G__9613 = cljs.core.first(seq9612);
  var seq9612__$1 = cljs.core.next(seq9612);
  var G__9614 = cljs.core.first(seq9612__$1);
  var seq9612__$2 = cljs.core.next(seq9612__$1);
  return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__9613, G__9614, seq9612__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max() {
  var args9624 = [];
  var len__5565__auto___9630 = arguments.length;
  var i__5566__auto___9631 = 0;
  while (true) {
    if (i__5566__auto___9631 < len__5565__auto___9630) {
      args9624.push(arguments[i__5566__auto___9631]);
      var G__9632 = i__5566__auto___9631 + 1;
      i__5566__auto___9631 = G__9632;
      continue;
    } else {
    }
    break;
  }
  var G__9629 = args9624.length;
  switch(G__9629) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9624.slice(2), 0);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4838__auto__ = x;
  var y__4839__auto__ = y;
  return x__4838__auto__ > y__4839__auto__ ? x__4838__auto__ : y__4839__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__4838__auto__ = x;
    var y__4839__auto__ = y;
    return x__4838__auto__ > y__4839__auto__ ? x__4838__auto__ : y__4839__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq9625) {
  var G__9626 = cljs.core.first(seq9625);
  var seq9625__$1 = cljs.core.next(seq9625);
  var G__9627 = cljs.core.first(seq9625__$1);
  var seq9625__$2 = cljs.core.next(seq9625__$1);
  return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(G__9626, G__9627, seq9625__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min() {
  var args9634 = [];
  var len__5565__auto___9640 = arguments.length;
  var i__5566__auto___9641 = 0;
  while (true) {
    if (i__5566__auto___9641 < len__5565__auto___9640) {
      args9634.push(arguments[i__5566__auto___9641]);
      var G__9642 = i__5566__auto___9641 + 1;
      i__5566__auto___9641 = G__9642;
      continue;
    } else {
    }
    break;
  }
  var G__9639 = args9634.length;
  switch(G__9639) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9634.slice(2), 0);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4845__auto__ = x;
  var y__4846__auto__ = y;
  return x__4845__auto__ < y__4846__auto__ ? x__4845__auto__ : y__4846__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__4845__auto__ = x;
    var y__4846__auto__ = y;
    return x__4845__auto__ < y__4846__auto__ ? x__4845__auto__ : y__4846__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq9635) {
  var G__9636 = cljs.core.first(seq9635);
  var seq9635__$1 = cljs.core.next(seq9635);
  var G__9637 = cljs.core.first(seq9635__$1);
  var seq9635__$2 = cljs.core.next(seq9635__$1);
  return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(G__9636, G__9637, seq9635__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add() {
  var args9644 = [];
  var len__5565__auto___9650 = arguments.length;
  var i__5566__auto___9651 = 0;
  while (true) {
    if (i__5566__auto___9651 < len__5565__auto___9650) {
      args9644.push(arguments[i__5566__auto___9651]);
      var G__9652 = i__5566__auto___9651 + 1;
      i__5566__auto___9651 = G__9652;
      continue;
    } else {
    }
    break;
  }
  var G__9649 = args9644.length;
  switch(G__9649) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9644.slice(2), 0);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq9645) {
  var G__9646 = cljs.core.first(seq9645);
  var seq9645__$1 = cljs.core.next(seq9645);
  var G__9647 = cljs.core.first(seq9645__$1);
  var seq9645__$2 = cljs.core.next(seq9645__$1);
  return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(G__9646, G__9647, seq9645__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int() {
  var args9654 = [];
  var len__5565__auto___9660 = arguments.length;
  var i__5566__auto___9661 = 0;
  while (true) {
    if (i__5566__auto___9661 < len__5565__auto___9660) {
      args9654.push(arguments[i__5566__auto___9661]);
      var G__9662 = i__5566__auto___9661 + 1;
      i__5566__auto___9661 = G__9662;
      continue;
    } else {
    }
    break;
  }
  var G__9659 = args9654.length;
  switch(G__9659) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9654.slice(2), 0);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq9655) {
  var G__9656 = cljs.core.first(seq9655);
  var seq9655__$1 = cljs.core.next(seq9655);
  var G__9657 = cljs.core.first(seq9655__$1);
  var seq9655__$2 = cljs.core.next(seq9655__$1);
  return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(G__9656, G__9657, seq9655__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int() {
  var args9664 = [];
  var len__5565__auto___9670 = arguments.length;
  var i__5566__auto___9671 = 0;
  while (true) {
    if (i__5566__auto___9671 < len__5565__auto___9670) {
      args9664.push(arguments[i__5566__auto___9671]);
      var G__9672 = i__5566__auto___9671 + 1;
      i__5566__auto___9671 = G__9672;
      continue;
    } else {
    }
    break;
  }
  var G__9669 = args9664.length;
  switch(G__9669) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9664.slice(2), 0);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq9665) {
  var G__9666 = cljs.core.first(seq9665);
  var seq9665__$1 = cljs.core.next(seq9665);
  var G__9667 = cljs.core.first(seq9665__$1);
  var seq9665__$2 = cljs.core.next(seq9665__$1);
  return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(G__9666, G__9667, seq9665__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply() {
  var args9674 = [];
  var len__5565__auto___9680 = arguments.length;
  var i__5566__auto___9681 = 0;
  while (true) {
    if (i__5566__auto___9681 < len__5565__auto___9680) {
      args9674.push(arguments[i__5566__auto___9681]);
      var G__9682 = i__5566__auto___9681 + 1;
      i__5566__auto___9681 = G__9682;
      continue;
    } else {
    }
    break;
  }
  var G__9679 = args9674.length;
  switch(G__9679) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9674.slice(2), 0);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq9675) {
  var G__9676 = cljs.core.first(seq9675);
  var seq9675__$1 = cljs.core.next(seq9675);
  var G__9677 = cljs.core.first(seq9675__$1);
  var seq9675__$2 = cljs.core.next(seq9675__$1);
  return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(G__9676, G__9677, seq9675__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int() {
  var args9684 = [];
  var len__5565__auto___9690 = arguments.length;
  var i__5566__auto___9691 = 0;
  while (true) {
    if (i__5566__auto___9691 < len__5565__auto___9690) {
      args9684.push(arguments[i__5566__auto___9691]);
      var G__9692 = i__5566__auto___9691 + 1;
      i__5566__auto___9691 = G__9692;
      continue;
    } else {
    }
    break;
  }
  var G__9689 = args9684.length;
  switch(G__9689) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9684.slice(2), 0);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq9685) {
  var G__9686 = cljs.core.first(seq9685);
  var seq9685__$1 = cljs.core.next(seq9685);
  var G__9687 = cljs.core.first(seq9685__$1);
  var seq9685__$2 = cljs.core.next(seq9685__$1);
  return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(G__9686, G__9687, seq9685__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x, n) : cljs.core.mod.call(null, x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract() {
  var args9694 = [];
  var len__5565__auto___9700 = arguments.length;
  var i__5566__auto___9701 = 0;
  while (true) {
    if (i__5566__auto___9701 < len__5565__auto___9700) {
      args9694.push(arguments[i__5566__auto___9701]);
      var G__9702 = i__5566__auto___9701 + 1;
      i__5566__auto___9701 = G__9702;
      continue;
    } else {
    }
    break;
  }
  var G__9699 = args9694.length;
  switch(G__9699) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9694.slice(2), 0);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq9695) {
  var G__9696 = cljs.core.first(seq9695);
  var seq9695__$1 = cljs.core.next(seq9695);
  var G__9697 = cljs.core.first(seq9695__$1);
  var seq9695__$2 = cljs.core.next(seq9695__$1);
  return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(G__9696, G__9697, seq9695__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int() {
  var args9704 = [];
  var len__5565__auto___9710 = arguments.length;
  var i__5566__auto___9711 = 0;
  while (true) {
    if (i__5566__auto___9711 < len__5565__auto___9710) {
      args9704.push(arguments[i__5566__auto___9711]);
      var G__9712 = i__5566__auto___9711 + 1;
      i__5566__auto___9711 = G__9712;
      continue;
    } else {
    }
    break;
  }
  var G__9709 = args9704.length;
  switch(G__9709) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9704.slice(2), 0);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq9705) {
  var G__9706 = cljs.core.first(seq9705);
  var seq9705__$1 = cljs.core.next(seq9705);
  var G__9707 = cljs.core.first(seq9705__$1);
  var seq9705__$2 = cljs.core.next(seq9705__$1);
  return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(G__9706, G__9707, seq9705__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor() {
  var args9714 = [];
  var len__5565__auto___9720 = arguments.length;
  var i__5566__auto___9721 = 0;
  while (true) {
    if (i__5566__auto___9721 < len__5565__auto___9720) {
      args9714.push(arguments[i__5566__auto___9721]);
      var G__9722 = i__5566__auto___9721 + 1;
      i__5566__auto___9721 = G__9722;
      continue;
    } else {
    }
    break;
  }
  var G__9719 = args9714.length;
  switch(G__9719) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9714.slice(2), 0);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq9715) {
  var G__9716 = cljs.core.first(seq9715);
  var seq9715__$1 = cljs.core.next(seq9715);
  var G__9717 = cljs.core.first(seq9715__$1);
  var seq9715__$2 = cljs.core.next(seq9715__$1);
  return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(G__9716, G__9717, seq9715__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and() {
  var args9724 = [];
  var len__5565__auto___9730 = arguments.length;
  var i__5566__auto___9731 = 0;
  while (true) {
    if (i__5566__auto___9731 < len__5565__auto___9730) {
      args9724.push(arguments[i__5566__auto___9731]);
      var G__9732 = i__5566__auto___9731 + 1;
      i__5566__auto___9731 = G__9732;
      continue;
    } else {
    }
    break;
  }
  var G__9729 = args9724.length;
  switch(G__9729) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9724.slice(2), 0);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq9725) {
  var G__9726 = cljs.core.first(seq9725);
  var seq9725__$1 = cljs.core.next(seq9725);
  var G__9727 = cljs.core.first(seq9725__$1);
  var seq9725__$2 = cljs.core.next(seq9725__$1);
  return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(G__9726, G__9727, seq9725__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or() {
  var args9734 = [];
  var len__5565__auto___9740 = arguments.length;
  var i__5566__auto___9741 = 0;
  while (true) {
    if (i__5566__auto___9741 < len__5565__auto___9740) {
      args9734.push(arguments[i__5566__auto___9741]);
      var G__9742 = i__5566__auto___9741 + 1;
      i__5566__auto___9741 = G__9742;
      continue;
    } else {
    }
    break;
  }
  var G__9739 = args9734.length;
  switch(G__9739) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9734.slice(2), 0);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq9735) {
  var G__9736 = cljs.core.first(seq9735);
  var seq9735__$1 = cljs.core.next(seq9735);
  var G__9737 = cljs.core.first(seq9735__$1);
  var seq9735__$2 = cljs.core.next(seq9735__$1);
  return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(G__9736, G__9737, seq9735__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not() {
  var args9744 = [];
  var len__5565__auto___9750 = arguments.length;
  var i__5566__auto___9751 = 0;
  while (true) {
    if (i__5566__auto___9751 < len__5565__auto___9750) {
      args9744.push(arguments[i__5566__auto___9751]);
      var G__9752 = i__5566__auto___9751 + 1;
      i__5566__auto___9751 = G__9752;
      continue;
    } else {
    }
    break;
  }
  var G__9749 = args9744.length;
  switch(G__9749) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9744.slice(2), 0);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq9745) {
  var G__9746 = cljs.core.first(seq9745);
  var seq9745__$1 = cljs.core.next(seq9745);
  var G__9747 = cljs.core.first(seq9745__$1);
  var seq9745__$2 = cljs.core.next(seq9745__$1);
  return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(G__9746, G__9747, seq9745__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_() {
  var args9754 = [];
  var len__5565__auto___9760 = arguments.length;
  var i__5566__auto___9761 = 0;
  while (true) {
    if (i__5566__auto___9761 < len__5565__auto___9760) {
      args9754.push(arguments[i__5566__auto___9761]);
      var G__9762 = i__5566__auto___9761 + 1;
      i__5566__auto___9761 = G__9762;
      continue;
    } else {
    }
    break;
  }
  var G__9759 = args9754.length;
  switch(G__9759) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9754.slice(2), 0);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__9764 = y;
        var G__9765 = cljs.core.first(more);
        var G__9766 = cljs.core.next(more);
        x = G__9764;
        y = G__9765;
        more = G__9766;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq9755) {
  var G__9756 = cljs.core.first(seq9755);
  var seq9755__$1 = cljs.core.next(seq9755);
  var G__9757 = cljs.core.first(seq9755__$1);
  var seq9755__$2 = cljs.core.next(seq9755__$1);
  return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(G__9756, G__9757, seq9755__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__9767 = n__$1 - 1;
      var G__9768 = cljs.core.next(xs);
      n__$1 = G__9767;
      xs = G__9768;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str() {
  var args9769 = [];
  var len__5565__auto___9774 = arguments.length;
  var i__5566__auto___9775 = 0;
  while (true) {
    if (i__5566__auto___9775 < len__5565__auto___9774) {
      args9769.push(arguments[i__5566__auto___9775]);
      var G__9776 = i__5566__auto___9775 + 1;
      i__5566__auto___9775 = G__9776;
      continue;
    } else {
    }
    break;
  }
  var G__9773 = args9769.length;
  switch(G__9773) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9769.slice(1), 0);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer([cljs.core.str(x)].join(""));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__9778 = sb.append([cljs.core.str(cljs.core.first(more))].join(""));
      var G__9779 = cljs.core.next(more);
      sb = G__9778;
      more = G__9779;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq9770) {
  var G__9771 = cljs.core.first(seq9770);
  var seq9770__$1 = cljs.core.next(seq9770);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(G__9771, seq9770__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs() {
  var args9780 = [];
  var len__5565__auto___9783 = arguments.length;
  var i__5566__auto___9784 = 0;
  while (true) {
    if (i__5566__auto___9784 < len__5565__auto___9783) {
      args9780.push(arguments[i__5566__auto___9784]);
      var G__9785 = i__5566__auto___9784 + 1;
      i__5566__auto___9784 = G__9785;
      continue;
    } else {
    }
    break;
  }
  var G__9782 = args9780.length;
  switch(G__9782) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9780.length)].join(""));;
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__9787 = cljs.core.next(xs);
            var G__9788 = cljs.core.next(ys);
            xs = G__9787;
            ys = G__9788;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__9789 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__9790 = cljs.core.next(s);
        res = G__9789;
        s = G__9790;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__9791 = (h + (cljs.core.hash(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e)) ^ cljs.core.hash(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e)))) % 4503599627370496;
      var G__9792 = cljs.core.next(s);
      h = G__9791;
      s = G__9792;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__9793 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__9794 = cljs.core.next(s__$1);
      h = G__9793;
      s__$1 = G__9794;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__9801_9807 = cljs.core.seq(fn_map);
  var chunk__9802_9808 = null;
  var count__9803_9809 = 0;
  var i__9804_9810 = 0;
  while (true) {
    if (i__9804_9810 < count__9803_9809) {
      var vec__9805_9811 = chunk__9802_9808.cljs$core$IIndexed$_nth$arity$2(null, i__9804_9810);
      var key_name_9812 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9805_9811, 0, null);
      var f_9813 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9805_9811, 1, null);
      var str_name_9814 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_9812) : cljs.core.name.call(null, key_name_9812);
      obj[str_name_9814] = f_9813;
      var G__9815 = seq__9801_9807;
      var G__9816 = chunk__9802_9808;
      var G__9817 = count__9803_9809;
      var G__9818 = i__9804_9810 + 1;
      seq__9801_9807 = G__9815;
      chunk__9802_9808 = G__9816;
      count__9803_9809 = G__9817;
      i__9804_9810 = G__9818;
      continue;
    } else {
      var temp__4425__auto___9819 = cljs.core.seq(seq__9801_9807);
      if (temp__4425__auto___9819) {
        var seq__9801_9820__$1 = temp__4425__auto___9819;
        if (cljs.core.chunked_seq_QMARK_(seq__9801_9820__$1)) {
          var c__5310__auto___9821 = cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__9801_9820__$1) : cljs.core.chunk_first.call(null, seq__9801_9820__$1);
          var G__9822 = cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__9801_9820__$1) : cljs.core.chunk_rest.call(null, seq__9801_9820__$1);
          var G__9823 = c__5310__auto___9821;
          var G__9824 = cljs.core.count(c__5310__auto___9821);
          var G__9825 = 0;
          seq__9801_9807 = G__9822;
          chunk__9802_9808 = G__9823;
          count__9803_9809 = G__9824;
          i__9804_9810 = G__9825;
          continue;
        } else {
          var vec__9806_9826 = cljs.core.first(seq__9801_9820__$1);
          var key_name_9827 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9806_9826, 0, null);
          var f_9828 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__9806_9826, 1, null);
          var str_name_9829 = cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_9827) : cljs.core.name.call(null, key_name_9827);
          obj[str_name_9829] = f_9828;
          var G__9830 = cljs.core.next(seq__9801_9820__$1);
          var G__9831 = null;
          var G__9832 = 0;
          var G__9833 = 0;
          seq__9801_9807 = G__9830;
          chunk__9802_9808 = G__9831;
          count__9803_9809 = G__9832;
          i__9804_9810 = G__9833;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list() {
  var args__5572__auto__ = [];
  var len__5565__auto___9839 = arguments.length;
  var i__5566__auto___9840 = 0;
  while (true) {
    if (i__5566__auto___9840 < len__5565__auto___9839) {
      args__5572__auto__.push(arguments[i__5566__auto___9840]);
      var G__9841 = i__5566__auto___9840 + 1;
      i__5566__auto___9840 = G__9841;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
        var G__9842 = xs__$1.cljs$core$INext$_next$arity$1(null);
        xs__$1 = G__9842;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__9843 = i - 1;
      var G__9844 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
      i = G__9843;
      r = G__9844;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq9838) {
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq9838));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (function() {
    var or__4526__auto__ = coll == null;
    if (or__4526__auto__) {
      return or__4526__auto__;
    } else {
      if (!(coll == null)) {
        if (coll.cljs$lang$protocol_mask$partition0$ & 64 || coll.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__4514__auto__ = cljs.core.not(a.ns);
      if (and__4514__auto__) {
        return b.ns;
      } else {
        return and__4514__auto__;
      }
    }())) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__9855 = a.ns;
            var G__9856 = b.ns;
            return goog.array.defaultCompare(G__9855, G__9856);
          }();
          if (0 === nsc) {
            var G__9857 = a.name;
            var G__9858 = b.name;
            return goog.array.defaultCompare(G__9857, G__9858);
          } else {
            return nsc;
          }
        }
      } else {
        var G__9859 = a.name;
        var G__9860 = b.name;
        return goog.array.defaultCompare(G__9859, G__9860);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__9862 = null;
  var G__9862__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__9862__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__9862 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__9862__2.call(this, self__, coll);
      case 3:
        return G__9862__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__9862.cljs$core$IFn$_invoke$arity$2 = G__9862__2;
  G__9862.cljs$core$IFn$_invoke$arity$3 = G__9862__3;
  return G__9862;
}();
cljs.core.Keyword.prototype.apply = function(self__, args9861) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args9861)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4942__auto__ = self__._hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function cljs$core$keyword() {
  var args9865 = [];
  var len__5565__auto___9868 = arguments.length;
  var i__5566__auto___9869 = 0;
  while (true) {
    if (i__5566__auto___9869 < len__5565__auto___9868) {
      args9865.push(arguments[i__5566__auto___9869]);
      var G__9870 = i__5566__auto___9869 + 1;
      i__5566__auto___9869 = G__9870;
      continue;
    } else {
    }
    break;
  }
  var G__9867 = args9865.length;
  switch(G__9867) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9865.length)].join(""));;
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null, name), name.str, null);
    } else {
      if (typeof name === "string") {
        var parts = name.split("/");
        if (parts.length === 2) {
          return new cljs.core.Keyword(parts[0], parts[1], name, null);
        } else {
          return new cljs.core.Keyword(null, parts[0], name, null);
        }
      } else {
        return null;
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__9872 = ls.sval();
        ls = G__9872;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk() {
  var args9873 = [];
  var len__5565__auto___9876 = arguments.length;
  var i__5566__auto___9877 = 0;
  while (true) {
    if (i__5566__auto___9877 < len__5565__auto___9876) {
      args9873.push(arguments[i__5566__auto___9877]);
      var G__9878 = i__5566__auto___9877 + 1;
      i__5566__auto___9877 = G__9878;
      continue;
    } else {
    }
    break;
  }
  var G__9875 = args9873.length;
  switch(G__9875) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9873.length)].join(""));;
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || s.cljs$core$IChunkedNext$ ? true : false : false) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__9882 = cljs.core.next(s__$1);
      s__$1 = G__9882;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_9883 = 0;
  var xs_9884 = cljs.core.seq(coll);
  while (true) {
    if (xs_9884) {
      ret[i_9883] = cljs.core.to_array(cljs.core.first(xs_9884));
      var G__9885 = i_9883 + 1;
      var G__9886 = cljs.core.next(xs_9884);
      i_9883 = G__9885;
      xs_9884 = G__9886;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array() {
  var args9887 = [];
  var len__5565__auto___9890 = arguments.length;
  var i__5566__auto___9891 = 0;
  while (true) {
    if (i__5566__auto___9891 < len__5565__auto___9890) {
      args9887.push(arguments[i__5566__auto___9891]);
      var G__9892 = i__5566__auto___9891 + 1;
      i__5566__auto___9891 = G__9892;
      continue;
    } else {
    }
    break;
  }
  var G__9889 = args9887.length;
  switch(G__9889) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9887.length)].join(""));;
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__9894 = i + 1;
        var G__9895 = cljs.core.next(s__$1);
        i = G__9894;
        s__$1 = G__9895;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5410__auto___9896 = size;
    var i_9897 = 0;
    while (true) {
      if (i_9897 < n__5410__auto___9896) {
        a[i_9897] = init_val_or_seq;
        var G__9898 = i_9897 + 1;
        i_9897 = G__9898;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array() {
  var args9899 = [];
  var len__5565__auto___9902 = arguments.length;
  var i__5566__auto___9903 = 0;
  while (true) {
    if (i__5566__auto___9903 < len__5565__auto___9902) {
      args9899.push(arguments[i__5566__auto___9903]);
      var G__9904 = i__5566__auto___9903 + 1;
      i__5566__auto___9903 = G__9904;
      continue;
    } else {
    }
    break;
  }
  var G__9901 = args9899.length;
  switch(G__9901) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9899.length)].join(""));;
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__9906 = i + 1;
        var G__9907 = cljs.core.next(s__$1);
        i = G__9906;
        s__$1 = G__9907;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5410__auto___9908 = size;
    var i_9909 = 0;
    while (true) {
      if (i_9909 < n__5410__auto___9908) {
        a[i_9909] = init_val_or_seq;
        var G__9910 = i_9909 + 1;
        i_9909 = G__9910;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array() {
  var args9911 = [];
  var len__5565__auto___9914 = arguments.length;
  var i__5566__auto___9915 = 0;
  while (true) {
    if (i__5566__auto___9915 < len__5565__auto___9914) {
      args9911.push(arguments[i__5566__auto___9915]);
      var G__9916 = i__5566__auto___9915 + 1;
      i__5566__auto___9915 = G__9916;
      continue;
    } else {
    }
    break;
  }
  var G__9913 = args9911.length;
  switch(G__9913) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9911.length)].join(""));;
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__9918 = i + 1;
        var G__9919 = cljs.core.next(s__$1);
        i = G__9918;
        s__$1 = G__9919;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5410__auto___9920 = size;
    var i_9921 = 0;
    while (true) {
      if (i_9921 < n__5410__auto___9920) {
        a[i_9921] = init_val_or_seq;
        var G__9922 = i_9921 + 1;
        i_9921 = G__9922;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array() {
  var args9923 = [];
  var len__5565__auto___9926 = arguments.length;
  var i__5566__auto___9927 = 0;
  while (true) {
    if (i__5566__auto___9927 < len__5565__auto___9926) {
      args9923.push(arguments[i__5566__auto___9927]);
      var G__9928 = i__5566__auto___9927 + 1;
      i__5566__auto___9927 = G__9928;
      continue;
    } else {
    }
    break;
  }
  var G__9925 = args9923.length;
  switch(G__9925) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args9923.length)].join(""));;
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__9930 = i + 1;
        var G__9931 = cljs.core.next(s__$1);
        i = G__9930;
        s__$1 = G__9931;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__5410__auto___9932 = size;
    var i_9933 = 0;
    while (true) {
      if (i_9933 < n__5410__auto___9932) {
        a[i_9933] = init_val_or_seq;
        var G__9934 = i_9933 + 1;
        i_9933 = G__9934;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__9935 = cljs.core.next(s__$1);
        var G__9936 = i - 1;
        var G__9937 = sum + 1;
        s__$1 = G__9935;
        i = G__9936;
        sum = G__9937;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs$core$spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function cljs$core$concat() {
  var args9939 = [];
  var len__5565__auto___9951 = arguments.length;
  var i__5566__auto___9952 = 0;
  while (true) {
    if (i__5566__auto___9952 < len__5565__auto___9951) {
      args9939.push(arguments[i__5566__auto___9952]);
      var G__9953 = i__5566__auto___9952 + 1;
      i__5566__auto___9952 = G__9953;
      continue;
    } else {
    }
    break;
  }
  var G__9944 = args9939.length;
  switch(G__9944) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9939.slice(2), 0);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq9940) {
  var G__9941 = cljs.core.first(seq9940);
  var seq9940__$1 = cljs.core.next(seq9940);
  var G__9942 = cljs.core.first(seq9940__$1);
  var seq9940__$2 = cljs.core.next(seq9940__$1);
  return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(G__9941, G__9942, seq9940__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_() {
  var args9955 = [];
  var len__5565__auto___9963 = arguments.length;
  var i__5566__auto___9964 = 0;
  while (true) {
    if (i__5566__auto___9964 < len__5565__auto___9963) {
      args9955.push(arguments[i__5566__auto___9964]);
      var G__9965 = i__5566__auto___9964 + 1;
      i__5566__auto___9964 = G__9965;
      continue;
    } else {
    }
    break;
  }
  var G__9962 = args9955.length;
  switch(G__9962) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9955.slice(4), 0);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5584__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq9956) {
  var G__9957 = cljs.core.first(seq9956);
  var seq9956__$1 = cljs.core.next(seq9956);
  var G__9958 = cljs.core.first(seq9956__$1);
  var seq9956__$2 = cljs.core.next(seq9956__$1);
  var G__9959 = cljs.core.first(seq9956__$2);
  var seq9956__$3 = cljs.core.next(seq9956__$2);
  var G__9960 = cljs.core.first(seq9956__$3);
  var seq9956__$4 = cljs.core.next(seq9956__$3);
  return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(G__9957, G__9958, G__9959, G__9960, seq9956__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_() {
  var args9967 = [];
  var len__5565__auto___9973 = arguments.length;
  var i__5566__auto___9974 = 0;
  while (true) {
    if (i__5566__auto___9974 < len__5565__auto___9973) {
      args9967.push(arguments[i__5566__auto___9974]);
      var G__9975 = i__5566__auto___9974 + 1;
      i__5566__auto___9974 = G__9975;
      continue;
    } else {
    }
    break;
  }
  var G__9972 = args9967.length;
  switch(G__9972) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9967.slice(2), 0);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__9977 = ntcoll;
      var G__9978 = cljs.core.first(vals);
      var G__9979 = cljs.core.next(vals);
      tcoll = G__9977;
      val = G__9978;
      vals = G__9979;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq9968) {
  var G__9969 = cljs.core.first(seq9968);
  var seq9968__$1 = cljs.core.next(seq9968);
  var G__9970 = cljs.core.first(seq9968__$1);
  var seq9968__$2 = cljs.core.next(seq9968__$1);
  return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__9969, G__9970, seq9968__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_() {
  var args9980 = [];
  var len__5565__auto___9987 = arguments.length;
  var i__5566__auto___9988 = 0;
  while (true) {
    if (i__5566__auto___9988 < len__5565__auto___9987) {
      args9980.push(arguments[i__5566__auto___9988]);
      var G__9989 = i__5566__auto___9988 + 1;
      i__5566__auto___9988 = G__9989;
      continue;
    } else {
    }
    break;
  }
  var G__9986 = args9980.length;
  switch(G__9986) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9980.slice(3), 0);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__9991 = ntcoll;
      var G__9992 = cljs.core.first(kvs);
      var G__9993 = cljs.core.second(kvs);
      var G__9994 = cljs.core.nnext(kvs);
      tcoll = G__9991;
      key = G__9992;
      val = G__9993;
      kvs = G__9994;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq9981) {
  var G__9982 = cljs.core.first(seq9981);
  var seq9981__$1 = cljs.core.next(seq9981);
  var G__9983 = cljs.core.first(seq9981__$1);
  var seq9981__$2 = cljs.core.next(seq9981__$1);
  var G__9984 = cljs.core.first(seq9981__$2);
  var seq9981__$3 = cljs.core.next(seq9981__$2);
  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__9982, G__9983, G__9984, seq9981__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_() {
  var args9995 = [];
  var len__5565__auto___10001 = arguments.length;
  var i__5566__auto___10002 = 0;
  while (true) {
    if (i__5566__auto___10002 < len__5565__auto___10001) {
      args9995.push(arguments[i__5566__auto___10002]);
      var G__10003 = i__5566__auto___10002 + 1;
      i__5566__auto___10002 = G__10003;
      continue;
    } else {
    }
    break;
  }
  var G__10000 = args9995.length;
  switch(G__10000) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args9995.slice(2), 0);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__10005 = ntcoll;
      var G__10006 = cljs.core.first(ks);
      var G__10007 = cljs.core.next(ks);
      tcoll = G__10005;
      key = G__10006;
      ks = G__10007;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq9996) {
  var G__9997 = cljs.core.first(seq9996);
  var seq9996__$1 = cljs.core.next(seq9996);
  var G__9998 = cljs.core.first(seq9996__$1);
  var seq9996__$2 = cljs.core.next(seq9996__$1);
  return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__9997, G__9998, seq9996__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_() {
  var args10008 = [];
  var len__5565__auto___10014 = arguments.length;
  var i__5566__auto___10015 = 0;
  while (true) {
    if (i__5566__auto___10015 < len__5565__auto___10014) {
      args10008.push(arguments[i__5566__auto___10015]);
      var G__10016 = i__5566__auto___10015 + 1;
      i__5566__auto___10015 = G__10016;
      continue;
    } else {
    }
    break;
  }
  var G__10013 = args10008.length;
  switch(G__10013) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args10008.slice(2), 0);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__10018 = ntcoll;
      var G__10019 = cljs.core.first(vals);
      var G__10020 = cljs.core.next(vals);
      tcoll = G__10018;
      val = G__10019;
      vals = G__10020;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq10009) {
  var G__10010 = cljs.core.first(seq10009);
  var seq10009__$1 = cljs.core.next(seq10009);
  var G__10011 = cljs.core.first(seq10009__$1);
  var seq10009__$2 = cljs.core.next(seq10009__$1);
  return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__10010, G__10011, seq10009__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a5454 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a5454);
      } else {
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a5454) : f.call(null, a5454);
      }
    } else {
      var b5455 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a5454, b5455);
        } else {
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a5454, b5455) : f.call(null, a5454, b5455);
        }
      } else {
        var c5456 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a5454, b5455, c5456);
          } else {
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a5454, b5455, c5456) : f.call(null, a5454, b5455, c5456);
          }
        } else {
          var d5457 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a5454, b5455, c5456, d5457);
            } else {
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a5454, b5455, c5456, d5457) : f.call(null, a5454, b5455, c5456, d5457);
            }
          } else {
            var e5458 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a5454, b5455, c5456, d5457, e5458);
              } else {
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a5454, b5455, c5456, d5457, e5458) : f.call(null, a5454, b5455, c5456, d5457, e5458);
              }
            } else {
              var f5459 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a5454, b5455, c5456, d5457, e5458, f5459);
                } else {
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a5454, b5455, c5456, d5457, e5458, f5459) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459);
                }
              } else {
                var g5460 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a5454, b5455, c5456, d5457, e5458, f5459, g5460);
                  } else {
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a5454, b5455, c5456, d5457, e5458, f5459, g5460) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460);
                  }
                } else {
                  var h5461 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461);
                    } else {
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461);
                    }
                  } else {
                    var i5462 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462);
                      } else {
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462);
                      }
                    } else {
                      var j5463 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463);
                        } else {
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463);
                        }
                      } else {
                        var k5464 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464);
                          } else {
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464);
                          }
                        } else {
                          var l5465 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465);
                            } else {
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465);
                            }
                          } else {
                            var m5466 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466);
                              } else {
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466);
                              }
                            } else {
                              var n5467 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467);
                                } else {
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467);
                                }
                              } else {
                                var o5468 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468);
                                  } else {
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468);
                                  }
                                } else {
                                  var p5469 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469);
                                    } else {
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469);
                                    }
                                  } else {
                                    var q5470 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470);
                                      } else {
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470);
                                      }
                                    } else {
                                      var r5471 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471);
                                        } else {
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471);
                                        }
                                      } else {
                                        var s5472 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471, s5472);
                                          } else {
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471, s5472) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471, s5472);
                                          }
                                        } else {
                                          var t5473 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471, s5472, t5473);
                                            } else {
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471, s5472, t5473) : f.call(null, a5454, b5455, c5456, d5457, e5458, f5459, g5460, h5461, i5462, j5463, k5464, l5465, m5466, n5467, o5468, p5469, q5470, r5471, s5472, t5473);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function cljs$core$apply() {
  var args10021 = [];
  var len__5565__auto___10030 = arguments.length;
  var i__5566__auto___10031 = 0;
  while (true) {
    if (i__5566__auto___10031 < len__5565__auto___10030) {
      args10021.push(arguments[i__5566__auto___10031]);
      var G__10032 = i__5566__auto___10031 + 1;
      i__5566__auto___10031 = G__10032;
      continue;
    } else {
    }
    break;
  }
  var G__10029 = args10021.length;
  switch(G__10029) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args10021.slice(5), 0);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__5584__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(args, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return f.apply(f, cljs.core.to_array(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
  var fixed_arity = f.cljs$lang$maxFixedArity;
  if (f.cljs$lang$applyTo) {
    var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return f.apply(f, cljs.core.to_array(arglist));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq10022) {
  var G__10023 = cljs.core.first(seq10022);
  var seq10022__$1 = cljs.core.next(seq10022);
  var G__10024 = cljs.core.first(seq10022__$1);
  var seq10022__$2 = cljs.core.next(seq10022__$1);
  var G__10025 = cljs.core.first(seq10022__$2);
  var seq10022__$3 = cljs.core.next(seq10022__$2);
  var G__10026 = cljs.core.first(seq10022__$3);
  var seq10022__$4 = cljs.core.next(seq10022__$3);
  var G__10027 = cljs.core.first(seq10022__$4);
  var seq10022__$5 = cljs.core.next(seq10022__$4);
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(G__10023, G__10024, G__10025, G__10026, G__10027, seq10022__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta() {
  var args10034 = [];
  var len__5565__auto___10059 = arguments.length;
  var i__5566__auto___10060 = 0;
  while (true) {
    if (i__5566__auto___10060 < len__5565__auto___10059) {
      args10034.push(arguments[i__5566__auto___10060]);
      var G__10061 = i__5566__auto___10060 + 1;
      i__5566__auto___10060 = G__10061;
      continue;
    } else {
    }
    break;
  }
  var G__10043 = args10034.length;
  switch(G__10043) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args10034.slice(6), 0);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5584__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__10044 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10044) : f.call(null, G__10044);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__10045 = cljs.core.meta(obj);
    var G__10046 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10045, G__10046) : f.call(null, G__10045, G__10046);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__10047 = cljs.core.meta(obj);
    var G__10048 = a;
    var G__10049 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10047, G__10048, G__10049) : f.call(null, G__10047, G__10048, G__10049);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__10050 = cljs.core.meta(obj);
    var G__10051 = a;
    var G__10052 = b;
    var G__10053 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10050, G__10051, G__10052, G__10053) : f.call(null, G__10050, G__10051, G__10052, G__10053);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__10054 = cljs.core.meta(obj);
    var G__10055 = a;
    var G__10056 = b;
    var G__10057 = c;
    var G__10058 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__10054, G__10055, G__10056, G__10057, G__10058) : f.call(null, G__10054, G__10055, G__10056, G__10057, G__10058);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq10035) {
  var G__10036 = cljs.core.first(seq10035);
  var seq10035__$1 = cljs.core.next(seq10035);
  var G__10037 = cljs.core.first(seq10035__$1);
  var seq10035__$2 = cljs.core.next(seq10035__$1);
  var G__10038 = cljs.core.first(seq10035__$2);
  var seq10035__$3 = cljs.core.next(seq10035__$2);
  var G__10039 = cljs.core.first(seq10035__$3);
  var seq10035__$4 = cljs.core.next(seq10035__$3);
  var G__10040 = cljs.core.first(seq10035__$4);
  var seq10035__$5 = cljs.core.next(seq10035__$4);
  var G__10041 = cljs.core.first(seq10035__$5);
  var seq10035__$6 = cljs.core.next(seq10035__$5);
  return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(G__10036, G__10037, G__10038, G__10039, G__10040, G__10041, seq10035__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_() {
  var args10063 = [];
  var len__5565__auto___10069 = arguments.length;
  var i__5566__auto___10070 = 0;
  while (true) {
    if (i__5566__auto___10070 < len__5565__auto___10069) {
      args10063.push(arguments[i__5566__auto___10070]);
      var G__10071 = i__5566__auto___10070 + 1;
      i__5566__auto___10070 = G__10071;
      continue;
    } else {
    }
    break;
  }
  var G__10068 = args10063.length;
  switch(G__10068) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args10063.slice(2), 0);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq10064) {
  var G__10065 = cljs.core.first(seq10064);
  var seq10064__$1 = cljs.core.next(seq10064);
  var G__10066 = cljs.core.first(seq10064__$1);
  var seq10064__$2 = cljs.core.next(seq10064__$1);
  return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(G__10065, G__10066, seq10064__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs.core.t10076 !== "undefined") {
  } else {
    cljs.core.t10076 = function(nil_iter, meta10077) {
      this.nil_iter = nil_iter;
      this.meta10077 = meta10077;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t10076.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_10078, meta10077__$1) {
      var self__ = this;
      var _10078__$1 = this;
      return new cljs.core.t10076(self__.nil_iter, meta10077__$1);
    };
    cljs.core.t10076.prototype.cljs$core$IMeta$_meta$arity$1 = function(_10078) {
      var self__ = this;
      var _10078__$1 = this;
      return self__.meta10077;
    };
    cljs.core.t10076.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t10076.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t10076.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t10076.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "nil-iter", "nil-iter", 1101030523, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(cljs.core.PersistentVector.EMPTY))], null)), new cljs.core.Symbol(null, "meta10077", "meta10077", -40364242, null)], 
      null);
    };
    cljs.core.t10076.cljs$lang$type = true;
    cljs.core.t10076.cljs$lang$ctorStr = "cljs.core/t10076";
    cljs.core.t10076.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
      return cljs.core._write(writer__5106__auto__, "cljs.core/t10076");
    };
    cljs.core.__GT_t10076 = function cljs$core$nil_iter_$___GT_t10076(nil_iter__$1, meta10077) {
      return new cljs.core.t10076(nil_iter__$1, meta10077);
    };
  }
  return new cljs.core.t10076(cljs$core$nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.truth_(cljs.core.iterable_QMARK_(coll))) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function cljs$core$lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4514__auto__ = !(lt.stepper == null);
      if (and__4514__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__4514__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__10079 = lt;
        var G__10080 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__10079, G__10080) : self__.xform.call(null, G__10079, G__10080);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.Stepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function cljs$core$__GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function cljs$core$stepper(xform, iter) {
  var stepfn = function() {
    var cljs$core$stepper_$_stepfn = null;
    var cljs$core$stepper_$_stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var cljs$core$stepper_$_stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepper_$_stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepper_$_stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepper_$_stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
    cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
    return cljs$core$stepper_$_stepfn;
  }();
  return new cljs.core.Stepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__10081 = cljs.core.next(iters__$1);
        iters__$1 = G__10081;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__5410__auto___10082 = self__.iters.length;
  var i_10083 = 0;
  while (true) {
    if (i_10083 < n__5410__auto___10082) {
      self__.nexts[i_10083] = self__.iters[i_10083].next();
      var G__10084 = i_10083 + 1;
      i_10083 = G__10084;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__4514__auto__ = !(lt.stepper == null);
      if (and__4514__auto__) {
        return this$.hasNext();
      } else {
        return and__4514__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(lt) : self__.xform.call(null, lt);
  }
};
cljs.core.MultiStepper.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "iters", "iters", 719353031, null), new cljs.core.Symbol(null, "nexts", "nexts", -1683579407, null)], null);
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function cljs$core$__GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function cljs$core$multi_stepper() {
  var args10085 = [];
  var len__5565__auto___10088 = arguments.length;
  var i__5566__auto___10089 = 0;
  while (true) {
    if (i__5566__auto___10089 < len__5565__auto___10088) {
      args10085.push(arguments[i__5566__auto___10089]);
      var G__10090 = i__5566__auto___10089 + 1;
      i__5566__auto___10089 = G__10090;
      continue;
    } else {
    }
    break;
  }
  var G__10087 = args10085.length;
  switch(G__10087) {
    case 2:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10085.length)].join(""));;
  }
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$2 = function(xform, iters) {
  return cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
};
cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3 = function(xform, iters, nexts) {
  var stepfn = function() {
    var cljs$core$stepfn = null;
    var cljs$core$stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return lt;
    };
    var cljs$core$stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    cljs$core$stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return cljs$core$stepfn__1.call(this, result);
        case 2:
          return cljs$core$stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepfn__1;
    cljs$core$stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepfn__2;
    return cljs$core$stepfn;
  }();
  return new cljs.core.MultiStepper(xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(stepfn) : xform.call(null, stepfn), iters, nexts);
};
cljs.core.multi_stepper.cljs$lang$maxFixedArity = 3;
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "stepper", "stepper", 1159163296, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function cljs$core$__GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__10092_10096 = cljs.core.seq(colls);
  var chunk__10093_10097 = null;
  var count__10094_10098 = 0;
  var i__10095_10099 = 0;
  while (true) {
    if (i__10095_10099 < count__10094_10098) {
      var coll_10100 = chunk__10093_10097.cljs$core$IIndexed$_nth$arity$2(null, i__10095_10099);
      iters.push(cljs.core.iter(coll_10100));
      var G__10101 = seq__10092_10096;
      var G__10102 = chunk__10093_10097;
      var G__10103 = count__10094_10098;
      var G__10104 = i__10095_10099 + 1;
      seq__10092_10096 = G__10101;
      chunk__10093_10097 = G__10102;
      count__10094_10098 = G__10103;
      i__10095_10099 = G__10104;
      continue;
    } else {
      var temp__4425__auto___10105 = cljs.core.seq(seq__10092_10096);
      if (temp__4425__auto___10105) {
        var seq__10092_10106__$1 = temp__4425__auto___10105;
        if (cljs.core.chunked_seq_QMARK_(seq__10092_10106__$1)) {
          var c__5310__auto___10107 = cljs.core.chunk_first(seq__10092_10106__$1);
          var G__10108 = cljs.core.chunk_rest(seq__10092_10106__$1);
          var G__10109 = c__5310__auto___10107;
          var G__10110 = cljs.core.count(c__5310__auto___10107);
          var G__10111 = 0;
          seq__10092_10096 = G__10108;
          chunk__10093_10097 = G__10109;
          count__10094_10098 = G__10110;
          i__10095_10099 = G__10111;
          continue;
        } else {
          var coll_10112 = cljs.core.first(seq__10092_10106__$1);
          iters.push(cljs.core.iter(coll_10112));
          var G__10113 = cljs.core.next(seq__10092_10106__$1);
          var G__10114 = null;
          var G__10115 = 0;
          var G__10116 = 0;
          seq__10092_10096 = G__10113;
          chunk__10093_10097 = G__10114;
          count__10094_10098 = G__10115;
          i__10095_10099 = G__10116;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function cljs$core$sequence() {
  var args10117 = [];
  var len__5565__auto___10123 = arguments.length;
  var i__5566__auto___10124 = 0;
  while (true) {
    if (i__5566__auto___10124 < len__5565__auto___10123) {
      args10117.push(arguments[i__5566__auto___10124]);
      var G__10125 = i__5566__auto___10124 + 1;
      i__5566__auto___10124 = G__10125;
      continue;
    } else {
    }
    break;
  }
  var G__10122 = args10117.length;
  switch(G__10122) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args10117.slice(2), 0);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__4526__auto__ = cljs.core.seq(coll);
    if (or__4526__auto__) {
      return or__4526__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  return cljs.core.LazyTransformer.create(xform, coll);
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
};
cljs.core.sequence.cljs$lang$applyTo = function(seq10118) {
  var G__10119 = cljs.core.first(seq10118);
  var seq10118__$1 = cljs.core.next(seq10118);
  var G__10120 = cljs.core.first(seq10118__$1);
  var seq10118__$2 = cljs.core.next(seq10118__$1);
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(G__10119, G__10120, seq10118__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__10128 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10128) : pred.call(null, G__10128);
      }())) {
        var G__10129 = pred;
        var G__10130 = cljs.core.next(coll);
        pred = G__10129;
        coll = G__10130;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__4526__auto__ = function() {
        var G__10134 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10134) : pred.call(null, G__10134);
      }();
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var G__10135 = pred;
        var G__10136 = cljs.core.next(coll);
        pred = G__10135;
        coll = G__10136;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__10137 = null;
    var G__10137__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__10137__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__10137__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__10137__3 = function() {
      var G__10138__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__10138 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__10139__i = 0, G__10139__a = new Array(arguments.length - 2);
          while (G__10139__i < G__10139__a.length) {
            G__10139__a[G__10139__i] = arguments[G__10139__i + 2];
            ++G__10139__i;
          }
          zs = new cljs.core.IndexedSeq(G__10139__a, 0);
        }
        return G__10138__delegate.call(this, x, y, zs);
      };
      G__10138.cljs$lang$maxFixedArity = 2;
      G__10138.cljs$lang$applyTo = function(arglist__10140) {
        var x = cljs.core.first(arglist__10140);
        arglist__10140 = cljs.core.next(arglist__10140);
        var y = cljs.core.first(arglist__10140);
        var zs = cljs.core.rest(arglist__10140);
        return G__10138__delegate(x, y, zs);
      };
      G__10138.cljs$core$IFn$_invoke$arity$variadic = G__10138__delegate;
      return G__10138;
    }();
    G__10137 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__10137__0.call(this);
        case 1:
          return G__10137__1.call(this, x);
        case 2:
          return G__10137__2.call(this, x, y);
        default:
          var G__10141 = null;
          if (arguments.length > 2) {
            var G__10142__i = 0, G__10142__a = new Array(arguments.length - 2);
            while (G__10142__i < G__10142__a.length) {
              G__10142__a[G__10142__i] = arguments[G__10142__i + 2];
              ++G__10142__i;
            }
            G__10141 = new cljs.core.IndexedSeq(G__10142__a, 0);
          }
          return G__10137__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__10141);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10137.cljs$lang$maxFixedArity = 2;
    G__10137.cljs$lang$applyTo = G__10137__3.cljs$lang$applyTo;
    G__10137.cljs$core$IFn$_invoke$arity$0 = G__10137__0;
    G__10137.cljs$core$IFn$_invoke$arity$1 = G__10137__1;
    G__10137.cljs$core$IFn$_invoke$arity$2 = G__10137__2;
    G__10137.cljs$core$IFn$_invoke$arity$variadic = G__10137__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__10137;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__10143__delegate = function(args) {
      return x;
    };
    var G__10143 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__10144__i = 0, G__10144__a = new Array(arguments.length - 0);
        while (G__10144__i < G__10144__a.length) {
          G__10144__a[G__10144__i] = arguments[G__10144__i + 0];
          ++G__10144__i;
        }
        args = new cljs.core.IndexedSeq(G__10144__a, 0);
      }
      return G__10143__delegate.call(this, args);
    };
    G__10143.cljs$lang$maxFixedArity = 0;
    G__10143.cljs$lang$applyTo = function(arglist__10145) {
      var args = cljs.core.seq(arglist__10145);
      return G__10143__delegate(args);
    };
    G__10143.cljs$core$IFn$_invoke$arity$variadic = G__10143__delegate;
    return G__10143;
  }();
};
cljs.core.comp = function cljs$core$comp() {
  var args10146 = [];
  var len__5565__auto___10173 = arguments.length;
  var i__5566__auto___10174 = 0;
  while (true) {
    if (i__5566__auto___10174 < len__5565__auto___10173) {
      args10146.push(arguments[i__5566__auto___10174]);
      var G__10175 = i__5566__auto___10174 + 1;
      i__5566__auto___10174 = G__10175;
      continue;
    } else {
    }
    break;
  }
  var G__10152 = args10146.length;
  switch(G__10152) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args10146.slice(3), 0);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__10177 = null;
    var G__10177__0 = function() {
      var G__10153 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10153) : f.call(null, G__10153);
    };
    var G__10177__1 = function(x) {
      var G__10154 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10154) : f.call(null, G__10154);
    };
    var G__10177__2 = function(x, y) {
      var G__10155 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10155) : f.call(null, G__10155);
    };
    var G__10177__3 = function(x, y, z) {
      var G__10156 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10156) : f.call(null, G__10156);
    };
    var G__10177__4 = function() {
      var G__10178__delegate = function(x, y, z, args) {
        var G__10157 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10157) : f.call(null, G__10157);
      };
      var G__10178 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10179__i = 0, G__10179__a = new Array(arguments.length - 3);
          while (G__10179__i < G__10179__a.length) {
            G__10179__a[G__10179__i] = arguments[G__10179__i + 3];
            ++G__10179__i;
          }
          args = new cljs.core.IndexedSeq(G__10179__a, 0);
        }
        return G__10178__delegate.call(this, x, y, z, args);
      };
      G__10178.cljs$lang$maxFixedArity = 3;
      G__10178.cljs$lang$applyTo = function(arglist__10180) {
        var x = cljs.core.first(arglist__10180);
        arglist__10180 = cljs.core.next(arglist__10180);
        var y = cljs.core.first(arglist__10180);
        arglist__10180 = cljs.core.next(arglist__10180);
        var z = cljs.core.first(arglist__10180);
        var args = cljs.core.rest(arglist__10180);
        return G__10178__delegate(x, y, z, args);
      };
      G__10178.cljs$core$IFn$_invoke$arity$variadic = G__10178__delegate;
      return G__10178;
    }();
    G__10177 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__10177__0.call(this);
        case 1:
          return G__10177__1.call(this, x);
        case 2:
          return G__10177__2.call(this, x, y);
        case 3:
          return G__10177__3.call(this, x, y, z);
        default:
          var G__10181 = null;
          if (arguments.length > 3) {
            var G__10182__i = 0, G__10182__a = new Array(arguments.length - 3);
            while (G__10182__i < G__10182__a.length) {
              G__10182__a[G__10182__i] = arguments[G__10182__i + 3];
              ++G__10182__i;
            }
            G__10181 = new cljs.core.IndexedSeq(G__10182__a, 0);
          }
          return G__10177__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10181);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10177.cljs$lang$maxFixedArity = 3;
    G__10177.cljs$lang$applyTo = G__10177__4.cljs$lang$applyTo;
    G__10177.cljs$core$IFn$_invoke$arity$0 = G__10177__0;
    G__10177.cljs$core$IFn$_invoke$arity$1 = G__10177__1;
    G__10177.cljs$core$IFn$_invoke$arity$2 = G__10177__2;
    G__10177.cljs$core$IFn$_invoke$arity$3 = G__10177__3;
    G__10177.cljs$core$IFn$_invoke$arity$variadic = G__10177__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10177;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__10183 = null;
    var G__10183__0 = function() {
      var G__10159 = function() {
        var G__10160 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10160) : g.call(null, G__10160);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10159) : f.call(null, G__10159);
    };
    var G__10183__1 = function(x) {
      var G__10162 = function() {
        var G__10163 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10163) : g.call(null, G__10163);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10162) : f.call(null, G__10162);
    };
    var G__10183__2 = function(x, y) {
      var G__10165 = function() {
        var G__10166 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10166) : g.call(null, G__10166);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10165) : f.call(null, G__10165);
    };
    var G__10183__3 = function(x, y, z) {
      var G__10168 = function() {
        var G__10169 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10169) : g.call(null, G__10169);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10168) : f.call(null, G__10168);
    };
    var G__10183__4 = function() {
      var G__10184__delegate = function(x, y, z, args) {
        var G__10171 = function() {
          var G__10172 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10172) : g.call(null, G__10172);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10171) : f.call(null, G__10171);
      };
      var G__10184 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10185__i = 0, G__10185__a = new Array(arguments.length - 3);
          while (G__10185__i < G__10185__a.length) {
            G__10185__a[G__10185__i] = arguments[G__10185__i + 3];
            ++G__10185__i;
          }
          args = new cljs.core.IndexedSeq(G__10185__a, 0);
        }
        return G__10184__delegate.call(this, x, y, z, args);
      };
      G__10184.cljs$lang$maxFixedArity = 3;
      G__10184.cljs$lang$applyTo = function(arglist__10186) {
        var x = cljs.core.first(arglist__10186);
        arglist__10186 = cljs.core.next(arglist__10186);
        var y = cljs.core.first(arglist__10186);
        arglist__10186 = cljs.core.next(arglist__10186);
        var z = cljs.core.first(arglist__10186);
        var args = cljs.core.rest(arglist__10186);
        return G__10184__delegate(x, y, z, args);
      };
      G__10184.cljs$core$IFn$_invoke$arity$variadic = G__10184__delegate;
      return G__10184;
    }();
    G__10183 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__10183__0.call(this);
        case 1:
          return G__10183__1.call(this, x);
        case 2:
          return G__10183__2.call(this, x, y);
        case 3:
          return G__10183__3.call(this, x, y, z);
        default:
          var G__10187 = null;
          if (arguments.length > 3) {
            var G__10188__i = 0, G__10188__a = new Array(arguments.length - 3);
            while (G__10188__i < G__10188__a.length) {
              G__10188__a[G__10188__i] = arguments[G__10188__i + 3];
              ++G__10188__i;
            }
            G__10187 = new cljs.core.IndexedSeq(G__10188__a, 0);
          }
          return G__10183__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10187);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10183.cljs$lang$maxFixedArity = 3;
    G__10183.cljs$lang$applyTo = G__10183__4.cljs$lang$applyTo;
    G__10183.cljs$core$IFn$_invoke$arity$0 = G__10183__0;
    G__10183.cljs$core$IFn$_invoke$arity$1 = G__10183__1;
    G__10183.cljs$core$IFn$_invoke$arity$2 = G__10183__2;
    G__10183.cljs$core$IFn$_invoke$arity$3 = G__10183__3;
    G__10183.cljs$core$IFn$_invoke$arity$variadic = G__10183__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10183;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function(fs__$1) {
    return function() {
      var G__10189__delegate = function(args) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
        var fs__$2 = cljs.core.next(fs__$1);
        while (true) {
          if (fs__$2) {
            var G__10190 = cljs.core.first(fs__$2).call(null, ret);
            var G__10191 = cljs.core.next(fs__$2);
            ret = G__10190;
            fs__$2 = G__10191;
            continue;
          } else {
            return ret;
          }
          break;
        }
      };
      var G__10189 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__10192__i = 0, G__10192__a = new Array(arguments.length - 0);
          while (G__10192__i < G__10192__a.length) {
            G__10192__a[G__10192__i] = arguments[G__10192__i + 0];
            ++G__10192__i;
          }
          args = new cljs.core.IndexedSeq(G__10192__a, 0);
        }
        return G__10189__delegate.call(this, args);
      };
      G__10189.cljs$lang$maxFixedArity = 0;
      G__10189.cljs$lang$applyTo = function(arglist__10193) {
        var args = cljs.core.seq(arglist__10193);
        return G__10189__delegate(args);
      };
      G__10189.cljs$core$IFn$_invoke$arity$variadic = G__10189__delegate;
      return G__10189;
    }();
  }(fs__$1);
};
cljs.core.comp.cljs$lang$applyTo = function(seq10147) {
  var G__10148 = cljs.core.first(seq10147);
  var seq10147__$1 = cljs.core.next(seq10147);
  var G__10149 = cljs.core.first(seq10147__$1);
  var seq10147__$2 = cljs.core.next(seq10147__$1);
  var G__10150 = cljs.core.first(seq10147__$2);
  var seq10147__$3 = cljs.core.next(seq10147__$2);
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(G__10148, G__10149, G__10150, seq10147__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial() {
  var args10194 = [];
  var len__5565__auto___10202 = arguments.length;
  var i__5566__auto___10203 = 0;
  while (true) {
    if (i__5566__auto___10203 < len__5565__auto___10202) {
      args10194.push(arguments[i__5566__auto___10203]);
      var G__10204 = i__5566__auto___10203 + 1;
      i__5566__auto___10203 = G__10204;
      continue;
    } else {
    }
    break;
  }
  var G__10201 = args10194.length;
  switch(G__10201) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args10194.slice(4), 0);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5584__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__10206 = null;
    var G__10206__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__10206__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__10206__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__10206__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__10206__4 = function() {
      var G__10207__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
      };
      var G__10207 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10208__i = 0, G__10208__a = new Array(arguments.length - 3);
          while (G__10208__i < G__10208__a.length) {
            G__10208__a[G__10208__i] = arguments[G__10208__i + 3];
            ++G__10208__i;
          }
          args = new cljs.core.IndexedSeq(G__10208__a, 0);
        }
        return G__10207__delegate.call(this, x, y, z, args);
      };
      G__10207.cljs$lang$maxFixedArity = 3;
      G__10207.cljs$lang$applyTo = function(arglist__10209) {
        var x = cljs.core.first(arglist__10209);
        arglist__10209 = cljs.core.next(arglist__10209);
        var y = cljs.core.first(arglist__10209);
        arglist__10209 = cljs.core.next(arglist__10209);
        var z = cljs.core.first(arglist__10209);
        var args = cljs.core.rest(arglist__10209);
        return G__10207__delegate(x, y, z, args);
      };
      G__10207.cljs$core$IFn$_invoke$arity$variadic = G__10207__delegate;
      return G__10207;
    }();
    G__10206 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__10206__0.call(this);
        case 1:
          return G__10206__1.call(this, x);
        case 2:
          return G__10206__2.call(this, x, y);
        case 3:
          return G__10206__3.call(this, x, y, z);
        default:
          var G__10210 = null;
          if (arguments.length > 3) {
            var G__10211__i = 0, G__10211__a = new Array(arguments.length - 3);
            while (G__10211__i < G__10211__a.length) {
              G__10211__a[G__10211__i] = arguments[G__10211__i + 3];
              ++G__10211__i;
            }
            G__10210 = new cljs.core.IndexedSeq(G__10211__a, 0);
          }
          return G__10206__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10210);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10206.cljs$lang$maxFixedArity = 3;
    G__10206.cljs$lang$applyTo = G__10206__4.cljs$lang$applyTo;
    G__10206.cljs$core$IFn$_invoke$arity$0 = G__10206__0;
    G__10206.cljs$core$IFn$_invoke$arity$1 = G__10206__1;
    G__10206.cljs$core$IFn$_invoke$arity$2 = G__10206__2;
    G__10206.cljs$core$IFn$_invoke$arity$3 = G__10206__3;
    G__10206.cljs$core$IFn$_invoke$arity$variadic = G__10206__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10206;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__10212 = null;
    var G__10212__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__10212__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__10212__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__10212__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__10212__4 = function() {
      var G__10213__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
      };
      var G__10213 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10214__i = 0, G__10214__a = new Array(arguments.length - 3);
          while (G__10214__i < G__10214__a.length) {
            G__10214__a[G__10214__i] = arguments[G__10214__i + 3];
            ++G__10214__i;
          }
          args = new cljs.core.IndexedSeq(G__10214__a, 0);
        }
        return G__10213__delegate.call(this, x, y, z, args);
      };
      G__10213.cljs$lang$maxFixedArity = 3;
      G__10213.cljs$lang$applyTo = function(arglist__10215) {
        var x = cljs.core.first(arglist__10215);
        arglist__10215 = cljs.core.next(arglist__10215);
        var y = cljs.core.first(arglist__10215);
        arglist__10215 = cljs.core.next(arglist__10215);
        var z = cljs.core.first(arglist__10215);
        var args = cljs.core.rest(arglist__10215);
        return G__10213__delegate(x, y, z, args);
      };
      G__10213.cljs$core$IFn$_invoke$arity$variadic = G__10213__delegate;
      return G__10213;
    }();
    G__10212 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__10212__0.call(this);
        case 1:
          return G__10212__1.call(this, x);
        case 2:
          return G__10212__2.call(this, x, y);
        case 3:
          return G__10212__3.call(this, x, y, z);
        default:
          var G__10216 = null;
          if (arguments.length > 3) {
            var G__10217__i = 0, G__10217__a = new Array(arguments.length - 3);
            while (G__10217__i < G__10217__a.length) {
              G__10217__a[G__10217__i] = arguments[G__10217__i + 3];
              ++G__10217__i;
            }
            G__10216 = new cljs.core.IndexedSeq(G__10217__a, 0);
          }
          return G__10212__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10216);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10212.cljs$lang$maxFixedArity = 3;
    G__10212.cljs$lang$applyTo = G__10212__4.cljs$lang$applyTo;
    G__10212.cljs$core$IFn$_invoke$arity$0 = G__10212__0;
    G__10212.cljs$core$IFn$_invoke$arity$1 = G__10212__1;
    G__10212.cljs$core$IFn$_invoke$arity$2 = G__10212__2;
    G__10212.cljs$core$IFn$_invoke$arity$3 = G__10212__3;
    G__10212.cljs$core$IFn$_invoke$arity$variadic = G__10212__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10212;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__10218 = null;
    var G__10218__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__10218__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__10218__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__10218__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__10218__4 = function() {
      var G__10219__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
      };
      var G__10219 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10220__i = 0, G__10220__a = new Array(arguments.length - 3);
          while (G__10220__i < G__10220__a.length) {
            G__10220__a[G__10220__i] = arguments[G__10220__i + 3];
            ++G__10220__i;
          }
          args = new cljs.core.IndexedSeq(G__10220__a, 0);
        }
        return G__10219__delegate.call(this, x, y, z, args);
      };
      G__10219.cljs$lang$maxFixedArity = 3;
      G__10219.cljs$lang$applyTo = function(arglist__10221) {
        var x = cljs.core.first(arglist__10221);
        arglist__10221 = cljs.core.next(arglist__10221);
        var y = cljs.core.first(arglist__10221);
        arglist__10221 = cljs.core.next(arglist__10221);
        var z = cljs.core.first(arglist__10221);
        var args = cljs.core.rest(arglist__10221);
        return G__10219__delegate(x, y, z, args);
      };
      G__10219.cljs$core$IFn$_invoke$arity$variadic = G__10219__delegate;
      return G__10219;
    }();
    G__10218 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__10218__0.call(this);
        case 1:
          return G__10218__1.call(this, x);
        case 2:
          return G__10218__2.call(this, x, y);
        case 3:
          return G__10218__3.call(this, x, y, z);
        default:
          var G__10222 = null;
          if (arguments.length > 3) {
            var G__10223__i = 0, G__10223__a = new Array(arguments.length - 3);
            while (G__10223__i < G__10223__a.length) {
              G__10223__a[G__10223__i] = arguments[G__10223__i + 3];
              ++G__10223__i;
            }
            G__10222 = new cljs.core.IndexedSeq(G__10223__a, 0);
          }
          return G__10218__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10222);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10218.cljs$lang$maxFixedArity = 3;
    G__10218.cljs$lang$applyTo = G__10218__4.cljs$lang$applyTo;
    G__10218.cljs$core$IFn$_invoke$arity$0 = G__10218__0;
    G__10218.cljs$core$IFn$_invoke$arity$1 = G__10218__1;
    G__10218.cljs$core$IFn$_invoke$arity$2 = G__10218__2;
    G__10218.cljs$core$IFn$_invoke$arity$3 = G__10218__3;
    G__10218.cljs$core$IFn$_invoke$arity$variadic = G__10218__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10218;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__10224__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__10224 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__10225__i = 0, G__10225__a = new Array(arguments.length - 0);
        while (G__10225__i < G__10225__a.length) {
          G__10225__a[G__10225__i] = arguments[G__10225__i + 0];
          ++G__10225__i;
        }
        args = new cljs.core.IndexedSeq(G__10225__a, 0);
      }
      return G__10224__delegate.call(this, args);
    };
    G__10224.cljs$lang$maxFixedArity = 0;
    G__10224.cljs$lang$applyTo = function(arglist__10226) {
      var args = cljs.core.seq(arglist__10226);
      return G__10224__delegate(args);
    };
    G__10224.cljs$core$IFn$_invoke$arity$variadic = G__10224__delegate;
    return G__10224;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq10195) {
  var G__10196 = cljs.core.first(seq10195);
  var seq10195__$1 = cljs.core.next(seq10195);
  var G__10197 = cljs.core.first(seq10195__$1);
  var seq10195__$2 = cljs.core.next(seq10195__$1);
  var G__10198 = cljs.core.first(seq10195__$2);
  var seq10195__$3 = cljs.core.next(seq10195__$2);
  var G__10199 = cljs.core.first(seq10195__$3);
  var seq10195__$4 = cljs.core.next(seq10195__$3);
  return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(G__10196, G__10197, G__10198, G__10199, seq10195__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil() {
  var args10227 = [];
  var len__5565__auto___10246 = arguments.length;
  var i__5566__auto___10247 = 0;
  while (true) {
    if (i__5566__auto___10247 < len__5565__auto___10246) {
      args10227.push(arguments[i__5566__auto___10247]);
      var G__10248 = i__5566__auto___10247 + 1;
      i__5566__auto___10247 = G__10248;
      continue;
    } else {
    }
    break;
  }
  var G__10229 = args10227.length;
  switch(G__10229) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10227.length)].join(""));;
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__10250 = null;
    var G__10250__1 = function(a) {
      var G__10230 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10230) : f.call(null, G__10230);
    };
    var G__10250__2 = function(a, b) {
      var G__10231 = a == null ? x : a;
      var G__10232 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10231, G__10232) : f.call(null, G__10231, G__10232);
    };
    var G__10250__3 = function(a, b, c) {
      var G__10233 = a == null ? x : a;
      var G__10234 = b;
      var G__10235 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10233, G__10234, G__10235) : f.call(null, G__10233, G__10234, G__10235);
    };
    var G__10250__4 = function() {
      var G__10251__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__10251 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__10252__i = 0, G__10252__a = new Array(arguments.length - 3);
          while (G__10252__i < G__10252__a.length) {
            G__10252__a[G__10252__i] = arguments[G__10252__i + 3];
            ++G__10252__i;
          }
          ds = new cljs.core.IndexedSeq(G__10252__a, 0);
        }
        return G__10251__delegate.call(this, a, b, c, ds);
      };
      G__10251.cljs$lang$maxFixedArity = 3;
      G__10251.cljs$lang$applyTo = function(arglist__10253) {
        var a = cljs.core.first(arglist__10253);
        arglist__10253 = cljs.core.next(arglist__10253);
        var b = cljs.core.first(arglist__10253);
        arglist__10253 = cljs.core.next(arglist__10253);
        var c = cljs.core.first(arglist__10253);
        var ds = cljs.core.rest(arglist__10253);
        return G__10251__delegate(a, b, c, ds);
      };
      G__10251.cljs$core$IFn$_invoke$arity$variadic = G__10251__delegate;
      return G__10251;
    }();
    G__10250 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__10250__1.call(this, a);
        case 2:
          return G__10250__2.call(this, a, b);
        case 3:
          return G__10250__3.call(this, a, b, c);
        default:
          var G__10254 = null;
          if (arguments.length > 3) {
            var G__10255__i = 0, G__10255__a = new Array(arguments.length - 3);
            while (G__10255__i < G__10255__a.length) {
              G__10255__a[G__10255__i] = arguments[G__10255__i + 3];
              ++G__10255__i;
            }
            G__10254 = new cljs.core.IndexedSeq(G__10255__a, 0);
          }
          return G__10250__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__10254);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10250.cljs$lang$maxFixedArity = 3;
    G__10250.cljs$lang$applyTo = G__10250__4.cljs$lang$applyTo;
    G__10250.cljs$core$IFn$_invoke$arity$1 = G__10250__1;
    G__10250.cljs$core$IFn$_invoke$arity$2 = G__10250__2;
    G__10250.cljs$core$IFn$_invoke$arity$3 = G__10250__3;
    G__10250.cljs$core$IFn$_invoke$arity$variadic = G__10250__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10250;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__10256 = null;
    var G__10256__2 = function(a, b) {
      var G__10236 = a == null ? x : a;
      var G__10237 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10236, G__10237) : f.call(null, G__10236, G__10237);
    };
    var G__10256__3 = function(a, b, c) {
      var G__10238 = a == null ? x : a;
      var G__10239 = b == null ? y : b;
      var G__10240 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10238, G__10239, G__10240) : f.call(null, G__10238, G__10239, G__10240);
    };
    var G__10256__4 = function() {
      var G__10257__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__10257 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__10258__i = 0, G__10258__a = new Array(arguments.length - 3);
          while (G__10258__i < G__10258__a.length) {
            G__10258__a[G__10258__i] = arguments[G__10258__i + 3];
            ++G__10258__i;
          }
          ds = new cljs.core.IndexedSeq(G__10258__a, 0);
        }
        return G__10257__delegate.call(this, a, b, c, ds);
      };
      G__10257.cljs$lang$maxFixedArity = 3;
      G__10257.cljs$lang$applyTo = function(arglist__10259) {
        var a = cljs.core.first(arglist__10259);
        arglist__10259 = cljs.core.next(arglist__10259);
        var b = cljs.core.first(arglist__10259);
        arglist__10259 = cljs.core.next(arglist__10259);
        var c = cljs.core.first(arglist__10259);
        var ds = cljs.core.rest(arglist__10259);
        return G__10257__delegate(a, b, c, ds);
      };
      G__10257.cljs$core$IFn$_invoke$arity$variadic = G__10257__delegate;
      return G__10257;
    }();
    G__10256 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__10256__2.call(this, a, b);
        case 3:
          return G__10256__3.call(this, a, b, c);
        default:
          var G__10260 = null;
          if (arguments.length > 3) {
            var G__10261__i = 0, G__10261__a = new Array(arguments.length - 3);
            while (G__10261__i < G__10261__a.length) {
              G__10261__a[G__10261__i] = arguments[G__10261__i + 3];
              ++G__10261__i;
            }
            G__10260 = new cljs.core.IndexedSeq(G__10261__a, 0);
          }
          return G__10256__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__10260);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10256.cljs$lang$maxFixedArity = 3;
    G__10256.cljs$lang$applyTo = G__10256__4.cljs$lang$applyTo;
    G__10256.cljs$core$IFn$_invoke$arity$2 = G__10256__2;
    G__10256.cljs$core$IFn$_invoke$arity$3 = G__10256__3;
    G__10256.cljs$core$IFn$_invoke$arity$variadic = G__10256__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10256;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__10262 = null;
    var G__10262__2 = function(a, b) {
      var G__10241 = a == null ? x : a;
      var G__10242 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10241, G__10242) : f.call(null, G__10241, G__10242);
    };
    var G__10262__3 = function(a, b, c) {
      var G__10243 = a == null ? x : a;
      var G__10244 = b == null ? y : b;
      var G__10245 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10243, G__10244, G__10245) : f.call(null, G__10243, G__10244, G__10245);
    };
    var G__10262__4 = function() {
      var G__10263__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__10263 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__10264__i = 0, G__10264__a = new Array(arguments.length - 3);
          while (G__10264__i < G__10264__a.length) {
            G__10264__a[G__10264__i] = arguments[G__10264__i + 3];
            ++G__10264__i;
          }
          ds = new cljs.core.IndexedSeq(G__10264__a, 0);
        }
        return G__10263__delegate.call(this, a, b, c, ds);
      };
      G__10263.cljs$lang$maxFixedArity = 3;
      G__10263.cljs$lang$applyTo = function(arglist__10265) {
        var a = cljs.core.first(arglist__10265);
        arglist__10265 = cljs.core.next(arglist__10265);
        var b = cljs.core.first(arglist__10265);
        arglist__10265 = cljs.core.next(arglist__10265);
        var c = cljs.core.first(arglist__10265);
        var ds = cljs.core.rest(arglist__10265);
        return G__10263__delegate(a, b, c, ds);
      };
      G__10263.cljs$core$IFn$_invoke$arity$variadic = G__10263__delegate;
      return G__10263;
    }();
    G__10262 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__10262__2.call(this, a, b);
        case 3:
          return G__10262__3.call(this, a, b, c);
        default:
          var G__10266 = null;
          if (arguments.length > 3) {
            var G__10267__i = 0, G__10267__a = new Array(arguments.length - 3);
            while (G__10267__i < G__10267__a.length) {
              G__10267__a[G__10267__i] = arguments[G__10267__i + 3];
              ++G__10267__i;
            }
            G__10266 = new cljs.core.IndexedSeq(G__10267__a, 0);
          }
          return G__10262__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__10266);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__10262.cljs$lang$maxFixedArity = 3;
    G__10262.cljs$lang$applyTo = G__10262__4.cljs$lang$applyTo;
    G__10262.cljs$core$IFn$_invoke$arity$2 = G__10262__2;
    G__10262.cljs$core$IFn$_invoke$arity$3 = G__10262__3;
    G__10262.cljs$core$IFn$_invoke$arity$variadic = G__10262__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__10262;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed() {
  var args10268 = [];
  var len__5565__auto___10301 = arguments.length;
  var i__5566__auto___10302 = 0;
  while (true) {
    if (i__5566__auto___10302 < len__5565__auto___10301) {
      args10268.push(arguments[i__5566__auto___10302]);
      var G__10303 = i__5566__auto___10302 + 1;
      i__5566__auto___10302 = G__10303;
      continue;
    } else {
    }
    break;
  }
  var G__10270 = args10268.length;
  switch(G__10270) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10268.length)].join(""));;
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(-1) : cljs.core.volatile_BANG_.call(null, -1);
    return function(i) {
      return function() {
        var G__10305 = null;
        var G__10305__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10305__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__10305__2 = function(result, input) {
          var G__10273 = result;
          var G__10274 = function() {
            var G__10275 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
            var G__10276 = input;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10275, G__10276) : f.call(null, G__10275, G__10276);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10273, G__10274) : rf.call(null, G__10273, G__10274);
        };
        G__10305 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10305__0.call(this);
            case 1:
              return G__10305__1.call(this, result);
            case 2:
              return G__10305__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10305.cljs$core$IFn$_invoke$arity$0 = G__10305__0;
        G__10305.cljs$core$IFn$_invoke$arity$1 = G__10305__1;
        G__10305.cljs$core$IFn$_invoke$arity$2 = G__10305__2;
        return G__10305;
      }();
    }(i);
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5410__auto___10306 = size;
          var i_10307 = 0;
          while (true) {
            if (i_10307 < n__5410__auto___10306) {
              cljs.core.chunk_append(b, function() {
                var G__10297 = idx + i_10307;
                var G__10298 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_10307);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10297, G__10298) : f.call(null, G__10297, G__10298);
              }());
              var G__10308 = i_10307 + 1;
              i_10307 = G__10308;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__10299 = idx;
            var G__10300 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10299, G__10300) : f.call(null, G__10299, G__10300);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep() {
  var args10309 = [];
  var len__5565__auto___10314 = arguments.length;
  var i__5566__auto___10315 = 0;
  while (true) {
    if (i__5566__auto___10315 < len__5565__auto___10314) {
      args10309.push(arguments[i__5566__auto___10315]);
      var G__10316 = i__5566__auto___10315 + 1;
      i__5566__auto___10315 = G__10316;
      continue;
    } else {
    }
    break;
  }
  var G__10311 = args10309.length;
  switch(G__10311) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10309.length)].join(""));;
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__10318 = null;
      var G__10318__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__10318__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__10318__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__10318 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__10318__0.call(this);
          case 1:
            return G__10318__1.call(this, result);
          case 2:
            return G__10318__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10318.cljs$core$IFn$_invoke$arity$0 = G__10318__0;
      G__10318.cljs$core$IFn$_invoke$arity$1 = G__10318__1;
      G__10318.cljs$core$IFn$_invoke$arity$2 = G__10318__2;
      return G__10318;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5410__auto___10319 = size;
        var i_10320 = 0;
        while (true) {
          if (i_10320 < n__5410__auto___10319) {
            var x_10321 = function() {
              var G__10312 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_10320);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10312) : f.call(null, G__10312);
            }();
            if (x_10321 == null) {
            } else {
              cljs.core.chunk_append(b, x_10321);
            }
            var G__10322 = i_10320 + 1;
            i_10320 = G__10322;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__10313 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10313) : f.call(null, G__10313);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__10323 = cljs.core.seq(self__.watches);
  var chunk__10324 = null;
  var count__10325 = 0;
  var i__10326 = 0;
  while (true) {
    if (i__10326 < count__10325) {
      var vec__10327 = chunk__10324.cljs$core$IIndexed$_nth$arity$2(null, i__10326);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10327, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10327, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__10329 = seq__10323;
      var G__10330 = chunk__10324;
      var G__10331 = count__10325;
      var G__10332 = i__10326 + 1;
      seq__10323 = G__10329;
      chunk__10324 = G__10330;
      count__10325 = G__10331;
      i__10326 = G__10332;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__10323);
      if (temp__4425__auto__) {
        var seq__10323__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__10323__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__10323__$1);
          var G__10333 = cljs.core.chunk_rest(seq__10323__$1);
          var G__10334 = c__5310__auto__;
          var G__10335 = cljs.core.count(c__5310__auto__);
          var G__10336 = 0;
          seq__10323 = G__10333;
          chunk__10324 = G__10334;
          count__10325 = G__10335;
          i__10326 = G__10336;
          continue;
        } else {
          var vec__10328 = cljs.core.first(seq__10323__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10328, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10328, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__10337 = cljs.core.next(seq__10323__$1);
          var G__10338 = null;
          var G__10339 = 0;
          var G__10340 = 0;
          seq__10323 = G__10337;
          chunk__10324 = G__10338;
          count__10325 = G__10339;
          i__10326 = G__10340;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom() {
  var args10341 = [];
  var len__5565__auto___10349 = arguments.length;
  var i__5566__auto___10350 = 0;
  while (true) {
    if (i__5566__auto___10350 < len__5565__auto___10349) {
      args10341.push(arguments[i__5566__auto___10350]);
      var G__10351 = i__5566__auto___10350 + 1;
      i__5566__auto___10350 = G__10351;
      continue;
    } else {
    }
    break;
  }
  var G__10345 = args10341.length;
  switch(G__10345) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args10341.slice(1), 0);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__10346) {
  var map__10347 = p__10346;
  var map__10347__$1 = (!(map__10347 == null) ? map__10347.cljs$lang$protocol_mask$partition0$ & 64 || map__10347.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__10347) : map__10347;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10347__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10347__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq10342) {
  var G__10343 = cljs.core.first(seq10342);
  var seq10342__$1 = cljs.core.next(seq10342);
  return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(G__10343, seq10342__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__10354 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__10354) : cljs.core.pr_str.call(null, G__10354);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_() {
  var args10355 = [];
  var len__5565__auto___10369 = arguments.length;
  var i__5566__auto___10370 = 0;
  while (true) {
    if (i__5566__auto___10370 < len__5565__auto___10369) {
      args10355.push(arguments[i__5566__auto___10370]);
      var G__10371 = i__5566__auto___10370 + 1;
      i__5566__auto___10370 = G__10371;
      continue;
    } else {
    }
    break;
  }
  var G__10362 = args10355.length;
  switch(G__10362) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args10355.slice(4), 0);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5584__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__10363 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10363) : f.call(null, G__10363);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__10364 = a.state;
      var G__10365 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10364, G__10365) : f.call(null, G__10364, G__10365);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__10366 = a.state;
      var G__10367 = x;
      var G__10368 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10366, G__10367, G__10368) : f.call(null, G__10366, G__10367, G__10368);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq10356) {
  var G__10357 = cljs.core.first(seq10356);
  var seq10356__$1 = cljs.core.next(seq10356);
  var G__10358 = cljs.core.first(seq10356__$1);
  var seq10356__$2 = cljs.core.next(seq10356__$1);
  var G__10359 = cljs.core.first(seq10356__$2);
  var seq10356__$3 = cljs.core.next(seq10356__$2);
  var G__10360 = cljs.core.first(seq10356__$3);
  var seq10356__$4 = cljs.core.next(seq10356__$3);
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__10357, G__10358, G__10359, G__10360, seq10356__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed() {
  var args10373 = [];
  var len__5565__auto___10404 = arguments.length;
  var i__5566__auto___10405 = 0;
  while (true) {
    if (i__5566__auto___10405 < len__5565__auto___10404) {
      args10373.push(arguments[i__5566__auto___10405]);
      var G__10406 = i__5566__auto___10405 + 1;
      i__5566__auto___10405 = G__10406;
      continue;
    } else {
    }
    break;
  }
  var G__10375 = args10373.length;
  switch(G__10375) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10373.length)].join(""));;
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__10408 = null;
        var G__10408__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10408__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__10408__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
          if (v == null) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          }
        };
        G__10408 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10408__0.call(this);
            case 1:
              return G__10408__1.call(this, result);
            case 2:
              return G__10408__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10408.cljs$core$IFn$_invoke$arity$0 = G__10408__0;
        G__10408.cljs$core$IFn$_invoke$arity$1 = G__10408__1;
        G__10408.cljs$core$IFn$_invoke$arity$2 = G__10408__2;
        return G__10408;
      }();
    }(ia);
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4425__auto__ = cljs.core.seq(coll__$1);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__5410__auto___10409 = size;
          var i_10410 = 0;
          while (true) {
            if (i_10410 < n__5410__auto___10409) {
              var x_10411 = function() {
                var G__10400 = idx + i_10410;
                var G__10401 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_10410);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10400, G__10401) : f.call(null, G__10400, G__10401);
              }();
              if (x_10411 == null) {
              } else {
                cljs.core.chunk_append(b, x_10411);
              }
              var G__10412 = i_10410 + 1;
              i_10410 = G__10412;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__10402 = idx;
            var G__10403 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10402, G__10403) : f.call(null, G__10402, G__10403);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred() {
  var args10419 = [];
  var len__5565__auto___10426 = arguments.length;
  var i__5566__auto___10427 = 0;
  while (true) {
    if (i__5566__auto___10427 < len__5565__auto___10426) {
      args10419.push(arguments[i__5566__auto___10427]);
      var G__10428 = i__5566__auto___10427 + 1;
      i__5566__auto___10427 = G__10428;
      continue;
    } else {
    }
    break;
  }
  var G__10425 = args10419.length;
  switch(G__10425) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args10419.slice(3), 0);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          var and__4514__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__4514__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__4514__auto____$1;
          }
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__10430__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4514__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4514__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__4514__auto__;
          }
        }());
      };
      var G__10430 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10431__i = 0, G__10431__a = new Array(arguments.length - 3);
          while (G__10431__i < G__10431__a.length) {
            G__10431__a[G__10431__i] = arguments[G__10431__i + 3];
            ++G__10431__i;
          }
          args = new cljs.core.IndexedSeq(G__10431__a, 0);
        }
        return G__10430__delegate.call(this, x, y, z, args);
      };
      G__10430.cljs$lang$maxFixedArity = 3;
      G__10430.cljs$lang$applyTo = function(arglist__10432) {
        var x = cljs.core.first(arglist__10432);
        arglist__10432 = cljs.core.next(arglist__10432);
        var y = cljs.core.first(arglist__10432);
        arglist__10432 = cljs.core.next(arglist__10432);
        var z = cljs.core.first(arglist__10432);
        var args = cljs.core.rest(arglist__10432);
        return G__10430__delegate(x, y, z, args);
      };
      G__10430.cljs$core$IFn$_invoke$arity$variadic = G__10430__delegate;
      return G__10430;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__10433 = null;
          if (arguments.length > 3) {
            var G__10434__i = 0, G__10434__a = new Array(arguments.length - 3);
            while (G__10434__i < G__10434__a.length) {
              G__10434__a[G__10434__i] = arguments[G__10434__i + 3];
              ++G__10434__i;
            }
            G__10433 = new cljs.core.IndexedSeq(G__10434__a, 0);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10433);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          var and__4514__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4514__auto____$1)) {
            var and__4514__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__4514__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__4514__auto____$2;
            }
          } else {
            return and__4514__auto____$1;
          }
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          var and__4514__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4514__auto____$1)) {
            var and__4514__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__4514__auto____$2)) {
              var and__4514__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__4514__auto____$3)) {
                var and__4514__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4514__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__4514__auto____$4;
                }
              } else {
                return and__4514__auto____$3;
              }
            } else {
              return and__4514__auto____$2;
            }
          } else {
            return and__4514__auto____$1;
          }
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__10435__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4514__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4514__auto__)) {
            return cljs.core.every_QMARK_(function(and__4514__auto__) {
              return function(p1__10413_SHARP_) {
                var and__4514__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__10413_SHARP_) : p1.call(null, p1__10413_SHARP_);
                if (cljs.core.truth_(and__4514__auto____$1)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__10413_SHARP_) : p2.call(null, p1__10413_SHARP_);
                } else {
                  return and__4514__auto____$1;
                }
              };
            }(and__4514__auto__), args);
          } else {
            return and__4514__auto__;
          }
        }());
      };
      var G__10435 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10436__i = 0, G__10436__a = new Array(arguments.length - 3);
          while (G__10436__i < G__10436__a.length) {
            G__10436__a[G__10436__i] = arguments[G__10436__i + 3];
            ++G__10436__i;
          }
          args = new cljs.core.IndexedSeq(G__10436__a, 0);
        }
        return G__10435__delegate.call(this, x, y, z, args);
      };
      G__10435.cljs$lang$maxFixedArity = 3;
      G__10435.cljs$lang$applyTo = function(arglist__10437) {
        var x = cljs.core.first(arglist__10437);
        arglist__10437 = cljs.core.next(arglist__10437);
        var y = cljs.core.first(arglist__10437);
        arglist__10437 = cljs.core.next(arglist__10437);
        var z = cljs.core.first(arglist__10437);
        var args = cljs.core.rest(arglist__10437);
        return G__10435__delegate(x, y, z, args);
      };
      G__10435.cljs$core$IFn$_invoke$arity$variadic = G__10435__delegate;
      return G__10435;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__10438 = null;
          if (arguments.length > 3) {
            var G__10439__i = 0, G__10439__a = new Array(arguments.length - 3);
            while (G__10439__i < G__10439__a.length) {
              G__10439__a[G__10439__i] = arguments[G__10439__i + 3];
              ++G__10439__i;
            }
            G__10438 = new cljs.core.IndexedSeq(G__10439__a, 0);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10438);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          var and__4514__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4514__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__4514__auto____$1;
          }
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          var and__4514__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4514__auto____$1)) {
            var and__4514__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4514__auto____$2)) {
              var and__4514__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4514__auto____$3)) {
                var and__4514__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4514__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__4514__auto____$4;
                }
              } else {
                return and__4514__auto____$3;
              }
            } else {
              return and__4514__auto____$2;
            }
          } else {
            return and__4514__auto____$1;
          }
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4514__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4514__auto__)) {
          var and__4514__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4514__auto____$1)) {
            var and__4514__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4514__auto____$2)) {
              var and__4514__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4514__auto____$3)) {
                var and__4514__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4514__auto____$4)) {
                  var and__4514__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__4514__auto____$5)) {
                    var and__4514__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__4514__auto____$6)) {
                      var and__4514__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__4514__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__4514__auto____$7;
                      }
                    } else {
                      return and__4514__auto____$6;
                    }
                  } else {
                    return and__4514__auto____$5;
                  }
                } else {
                  return and__4514__auto____$4;
                }
              } else {
                return and__4514__auto____$3;
              }
            } else {
              return and__4514__auto____$2;
            }
          } else {
            return and__4514__auto____$1;
          }
        } else {
          return and__4514__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__10440__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4514__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4514__auto__)) {
            return cljs.core.every_QMARK_(function(and__4514__auto__) {
              return function(p1__10414_SHARP_) {
                var and__4514__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__10414_SHARP_) : p1.call(null, p1__10414_SHARP_);
                if (cljs.core.truth_(and__4514__auto____$1)) {
                  var and__4514__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__10414_SHARP_) : p2.call(null, p1__10414_SHARP_);
                  if (cljs.core.truth_(and__4514__auto____$2)) {
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__10414_SHARP_) : p3.call(null, p1__10414_SHARP_);
                  } else {
                    return and__4514__auto____$2;
                  }
                } else {
                  return and__4514__auto____$1;
                }
              };
            }(and__4514__auto__), args);
          } else {
            return and__4514__auto__;
          }
        }());
      };
      var G__10440 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10441__i = 0, G__10441__a = new Array(arguments.length - 3);
          while (G__10441__i < G__10441__a.length) {
            G__10441__a[G__10441__i] = arguments[G__10441__i + 3];
            ++G__10441__i;
          }
          args = new cljs.core.IndexedSeq(G__10441__a, 0);
        }
        return G__10440__delegate.call(this, x, y, z, args);
      };
      G__10440.cljs$lang$maxFixedArity = 3;
      G__10440.cljs$lang$applyTo = function(arglist__10442) {
        var x = cljs.core.first(arglist__10442);
        arglist__10442 = cljs.core.next(arglist__10442);
        var y = cljs.core.first(arglist__10442);
        arglist__10442 = cljs.core.next(arglist__10442);
        var z = cljs.core.first(arglist__10442);
        var args = cljs.core.rest(arglist__10442);
        return G__10440__delegate(x, y, z, args);
      };
      G__10440.cljs$core$IFn$_invoke$arity$variadic = G__10440__delegate;
      return G__10440;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__10443 = null;
          if (arguments.length > 3) {
            var G__10444__i = 0, G__10444__a = new Array(arguments.length - 3);
            while (G__10444__i < G__10444__a.length) {
              G__10444__a[G__10444__i] = arguments[G__10444__i + 3];
              ++G__10444__i;
            }
            G__10443 = new cljs.core.IndexedSeq(G__10444__a, 0);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10443);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$epn = null;
      var cljs$core$epn__0 = function() {
        return true;
      };
      var cljs$core$epn__1 = function(x) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__10415_SHARP_) {
            return p1__10415_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10415_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__10415_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__2 = function(x, y) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__10416_SHARP_) {
            var and__4514__auto__ = p1__10416_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10416_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__10416_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4514__auto__)) {
              return p1__10416_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10416_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__10416_SHARP_.call(null, y);
            } else {
              return and__4514__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__3 = function(x, y, z) {
        return cljs.core.every_QMARK_(function(ps__$1) {
          return function(p1__10417_SHARP_) {
            var and__4514__auto__ = p1__10417_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10417_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__10417_SHARP_.call(null, x);
            if (cljs.core.truth_(and__4514__auto__)) {
              var and__4514__auto____$1 = p1__10417_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10417_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__10417_SHARP_.call(null, y);
              if (cljs.core.truth_(and__4514__auto____$1)) {
                return p1__10417_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10417_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__10417_SHARP_.call(null, z);
              } else {
                return and__4514__auto____$1;
              }
            } else {
              return and__4514__auto__;
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$epn__4 = function() {
        var G__10445__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(function() {
            var and__4514__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
            if (cljs.core.truth_(and__4514__auto__)) {
              return cljs.core.every_QMARK_(function(and__4514__auto__, ps__$1) {
                return function(p1__10418_SHARP_) {
                  return cljs.core.every_QMARK_(p1__10418_SHARP_, args);
                };
              }(and__4514__auto__, ps__$1), ps__$1);
            } else {
              return and__4514__auto__;
            }
          }());
        };
        var G__10445 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__10446__i = 0, G__10446__a = new Array(arguments.length - 3);
            while (G__10446__i < G__10446__a.length) {
              G__10446__a[G__10446__i] = arguments[G__10446__i + 3];
              ++G__10446__i;
            }
            args = new cljs.core.IndexedSeq(G__10446__a, 0);
          }
          return G__10445__delegate.call(this, x, y, z, args);
        };
        G__10445.cljs$lang$maxFixedArity = 3;
        G__10445.cljs$lang$applyTo = function(arglist__10447) {
          var x = cljs.core.first(arglist__10447);
          arglist__10447 = cljs.core.next(arglist__10447);
          var y = cljs.core.first(arglist__10447);
          arglist__10447 = cljs.core.next(arglist__10447);
          var z = cljs.core.first(arglist__10447);
          var args = cljs.core.rest(arglist__10447);
          return G__10445__delegate(x, y, z, args);
        };
        G__10445.cljs$core$IFn$_invoke$arity$variadic = G__10445__delegate;
        return G__10445;
      }();
      cljs$core$epn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$epn__0.call(this);
          case 1:
            return cljs$core$epn__1.call(this, x);
          case 2:
            return cljs$core$epn__2.call(this, x, y);
          case 3:
            return cljs$core$epn__3.call(this, x, y, z);
          default:
            var G__10448 = null;
            if (arguments.length > 3) {
              var G__10449__i = 0, G__10449__a = new Array(arguments.length - 3);
              while (G__10449__i < G__10449__a.length) {
                G__10449__a[G__10449__i] = arguments[G__10449__i + 3];
                ++G__10449__i;
              }
              G__10448 = new cljs.core.IndexedSeq(G__10449__a, 0);
            }
            return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10448);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$epn.cljs$lang$maxFixedArity = 3;
      cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
      cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$epn;
    }();
  }(ps__$1);
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq10420) {
  var G__10421 = cljs.core.first(seq10420);
  var seq10420__$1 = cljs.core.next(seq10420);
  var G__10422 = cljs.core.first(seq10420__$1);
  var seq10420__$2 = cljs.core.next(seq10420__$1);
  var G__10423 = cljs.core.first(seq10420__$2);
  var seq10420__$3 = cljs.core.next(seq10420__$2);
  return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(G__10421, G__10422, G__10423, seq10420__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn() {
  var args10456 = [];
  var len__5565__auto___10463 = arguments.length;
  var i__5566__auto___10464 = 0;
  while (true) {
    if (i__5566__auto___10464 < len__5565__auto___10463) {
      args10456.push(arguments[i__5566__auto___10464]);
      var G__10465 = i__5566__auto___10464 + 1;
      i__5566__auto___10464 = G__10465;
      continue;
    } else {
    }
    break;
  }
  var G__10462 = args10456.length;
  switch(G__10462) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args10456.slice(3), 0);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__4526__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__4526__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var or__4526__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__4526__auto____$1)) {
          return or__4526__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__10467__delegate = function(x, y, z, args) {
        var or__4526__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4526__auto__)) {
          return or__4526__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__10467 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10468__i = 0, G__10468__a = new Array(arguments.length - 3);
          while (G__10468__i < G__10468__a.length) {
            G__10468__a[G__10468__i] = arguments[G__10468__i + 3];
            ++G__10468__i;
          }
          args = new cljs.core.IndexedSeq(G__10468__a, 0);
        }
        return G__10467__delegate.call(this, x, y, z, args);
      };
      G__10467.cljs$lang$maxFixedArity = 3;
      G__10467.cljs$lang$applyTo = function(arglist__10469) {
        var x = cljs.core.first(arglist__10469);
        arglist__10469 = cljs.core.next(arglist__10469);
        var y = cljs.core.first(arglist__10469);
        arglist__10469 = cljs.core.next(arglist__10469);
        var z = cljs.core.first(arglist__10469);
        var args = cljs.core.rest(arglist__10469);
        return G__10467__delegate(x, y, z, args);
      };
      G__10467.cljs$core$IFn$_invoke$arity$variadic = G__10467__delegate;
      return G__10467;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__10470 = null;
          if (arguments.length > 3) {
            var G__10471__i = 0, G__10471__a = new Array(arguments.length - 3);
            while (G__10471__i < G__10471__a.length) {
              G__10471__a[G__10471__i] = arguments[G__10471__i + 3];
              ++G__10471__i;
            }
            G__10470 = new cljs.core.IndexedSeq(G__10471__a, 0);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10470);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__4526__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__4526__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var or__4526__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4526__auto____$1)) {
          return or__4526__auto____$1;
        } else {
          var or__4526__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__4526__auto____$2)) {
            return or__4526__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__4526__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var or__4526__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4526__auto____$1)) {
          return or__4526__auto____$1;
        } else {
          var or__4526__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__4526__auto____$2)) {
            return or__4526__auto____$2;
          } else {
            var or__4526__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__4526__auto____$3)) {
              return or__4526__auto____$3;
            } else {
              var or__4526__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4526__auto____$4)) {
                return or__4526__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__10472__delegate = function(x, y, z, args) {
        var or__4526__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4526__auto__)) {
          return or__4526__auto__;
        } else {
          return cljs.core.some(function(or__4526__auto__) {
            return function(p1__10450_SHARP_) {
              var or__4526__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__10450_SHARP_) : p1.call(null, p1__10450_SHARP_);
              if (cljs.core.truth_(or__4526__auto____$1)) {
                return or__4526__auto____$1;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__10450_SHARP_) : p2.call(null, p1__10450_SHARP_);
              }
            };
          }(or__4526__auto__), args);
        }
      };
      var G__10472 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10473__i = 0, G__10473__a = new Array(arguments.length - 3);
          while (G__10473__i < G__10473__a.length) {
            G__10473__a[G__10473__i] = arguments[G__10473__i + 3];
            ++G__10473__i;
          }
          args = new cljs.core.IndexedSeq(G__10473__a, 0);
        }
        return G__10472__delegate.call(this, x, y, z, args);
      };
      G__10472.cljs$lang$maxFixedArity = 3;
      G__10472.cljs$lang$applyTo = function(arglist__10474) {
        var x = cljs.core.first(arglist__10474);
        arglist__10474 = cljs.core.next(arglist__10474);
        var y = cljs.core.first(arglist__10474);
        arglist__10474 = cljs.core.next(arglist__10474);
        var z = cljs.core.first(arglist__10474);
        var args = cljs.core.rest(arglist__10474);
        return G__10472__delegate(x, y, z, args);
      };
      G__10472.cljs$core$IFn$_invoke$arity$variadic = G__10472__delegate;
      return G__10472;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__10475 = null;
          if (arguments.length > 3) {
            var G__10476__i = 0, G__10476__a = new Array(arguments.length - 3);
            while (G__10476__i < G__10476__a.length) {
              G__10476__a[G__10476__i] = arguments[G__10476__i + 3];
              ++G__10476__i;
            }
            G__10475 = new cljs.core.IndexedSeq(G__10476__a, 0);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10475);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__4526__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var or__4526__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4526__auto____$1)) {
          return or__4526__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__4526__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var or__4526__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4526__auto____$1)) {
          return or__4526__auto____$1;
        } else {
          var or__4526__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4526__auto____$2)) {
            return or__4526__auto____$2;
          } else {
            var or__4526__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4526__auto____$3)) {
              return or__4526__auto____$3;
            } else {
              var or__4526__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4526__auto____$4)) {
                return or__4526__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__4526__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        var or__4526__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4526__auto____$1)) {
          return or__4526__auto____$1;
        } else {
          var or__4526__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4526__auto____$2)) {
            return or__4526__auto____$2;
          } else {
            var or__4526__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4526__auto____$3)) {
              return or__4526__auto____$3;
            } else {
              var or__4526__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4526__auto____$4)) {
                return or__4526__auto____$4;
              } else {
                var or__4526__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__4526__auto____$5)) {
                  return or__4526__auto____$5;
                } else {
                  var or__4526__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__4526__auto____$6)) {
                    return or__4526__auto____$6;
                  } else {
                    var or__4526__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__4526__auto____$7)) {
                      return or__4526__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__10477__delegate = function(x, y, z, args) {
        var or__4526__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4526__auto__)) {
          return or__4526__auto__;
        } else {
          return cljs.core.some(function(or__4526__auto__) {
            return function(p1__10451_SHARP_) {
              var or__4526__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__10451_SHARP_) : p1.call(null, p1__10451_SHARP_);
              if (cljs.core.truth_(or__4526__auto____$1)) {
                return or__4526__auto____$1;
              } else {
                var or__4526__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__10451_SHARP_) : p2.call(null, p1__10451_SHARP_);
                if (cljs.core.truth_(or__4526__auto____$2)) {
                  return or__4526__auto____$2;
                } else {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__10451_SHARP_) : p3.call(null, p1__10451_SHARP_);
                }
              }
            };
          }(or__4526__auto__), args);
        }
      };
      var G__10477 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__10478__i = 0, G__10478__a = new Array(arguments.length - 3);
          while (G__10478__i < G__10478__a.length) {
            G__10478__a[G__10478__i] = arguments[G__10478__i + 3];
            ++G__10478__i;
          }
          args = new cljs.core.IndexedSeq(G__10478__a, 0);
        }
        return G__10477__delegate.call(this, x, y, z, args);
      };
      G__10477.cljs$lang$maxFixedArity = 3;
      G__10477.cljs$lang$applyTo = function(arglist__10479) {
        var x = cljs.core.first(arglist__10479);
        arglist__10479 = cljs.core.next(arglist__10479);
        var y = cljs.core.first(arglist__10479);
        arglist__10479 = cljs.core.next(arglist__10479);
        var z = cljs.core.first(arglist__10479);
        var args = cljs.core.rest(arglist__10479);
        return G__10477__delegate(x, y, z, args);
      };
      G__10477.cljs$core$IFn$_invoke$arity$variadic = G__10477__delegate;
      return G__10477;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__10480 = null;
          if (arguments.length > 3) {
            var G__10481__i = 0, G__10481__a = new Array(arguments.length - 3);
            while (G__10481__i < G__10481__a.length) {
              G__10481__a[G__10481__i] = arguments[G__10481__i + 3];
              ++G__10481__i;
            }
            G__10480 = new cljs.core.IndexedSeq(G__10481__a, 0);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10480);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function(ps__$1) {
    return function() {
      var cljs$core$spn = null;
      var cljs$core$spn__0 = function() {
        return null;
      };
      var cljs$core$spn__1 = function(x) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__10452_SHARP_) {
            return p1__10452_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10452_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__10452_SHARP_.call(null, x);
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__2 = function(x, y) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__10453_SHARP_) {
            var or__4526__auto__ = p1__10453_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10453_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__10453_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4526__auto__)) {
              return or__4526__auto__;
            } else {
              return p1__10453_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10453_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__10453_SHARP_.call(null, y);
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__3 = function(x, y, z) {
        return cljs.core.some(function(ps__$1) {
          return function(p1__10454_SHARP_) {
            var or__4526__auto__ = p1__10454_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10454_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__10454_SHARP_.call(null, x);
            if (cljs.core.truth_(or__4526__auto__)) {
              return or__4526__auto__;
            } else {
              var or__4526__auto____$1 = p1__10454_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10454_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__10454_SHARP_.call(null, y);
              if (cljs.core.truth_(or__4526__auto____$1)) {
                return or__4526__auto____$1;
              } else {
                return p1__10454_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10454_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__10454_SHARP_.call(null, z);
              }
            }
          };
        }(ps__$1), ps__$1);
      };
      var cljs$core$spn__4 = function() {
        var G__10482__delegate = function(x, y, z, args) {
          var or__4526__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__4526__auto__)) {
            return or__4526__auto__;
          } else {
            return cljs.core.some(function(or__4526__auto__, ps__$1) {
              return function(p1__10455_SHARP_) {
                return cljs.core.some(p1__10455_SHARP_, args);
              };
            }(or__4526__auto__, ps__$1), ps__$1);
          }
        };
        var G__10482 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__10483__i = 0, G__10483__a = new Array(arguments.length - 3);
            while (G__10483__i < G__10483__a.length) {
              G__10483__a[G__10483__i] = arguments[G__10483__i + 3];
              ++G__10483__i;
            }
            args = new cljs.core.IndexedSeq(G__10483__a, 0);
          }
          return G__10482__delegate.call(this, x, y, z, args);
        };
        G__10482.cljs$lang$maxFixedArity = 3;
        G__10482.cljs$lang$applyTo = function(arglist__10484) {
          var x = cljs.core.first(arglist__10484);
          arglist__10484 = cljs.core.next(arglist__10484);
          var y = cljs.core.first(arglist__10484);
          arglist__10484 = cljs.core.next(arglist__10484);
          var z = cljs.core.first(arglist__10484);
          var args = cljs.core.rest(arglist__10484);
          return G__10482__delegate(x, y, z, args);
        };
        G__10482.cljs$core$IFn$_invoke$arity$variadic = G__10482__delegate;
        return G__10482;
      }();
      cljs$core$spn = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return cljs$core$spn__0.call(this);
          case 1:
            return cljs$core$spn__1.call(this, x);
          case 2:
            return cljs$core$spn__2.call(this, x, y);
          case 3:
            return cljs$core$spn__3.call(this, x, y, z);
          default:
            var G__10485 = null;
            if (arguments.length > 3) {
              var G__10486__i = 0, G__10486__a = new Array(arguments.length - 3);
              while (G__10486__i < G__10486__a.length) {
                G__10486__a[G__10486__i] = arguments[G__10486__i + 3];
                ++G__10486__i;
              }
              G__10485 = new cljs.core.IndexedSeq(G__10486__a, 0);
            }
            return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__10485);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      cljs$core$spn.cljs$lang$maxFixedArity = 3;
      cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
      cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
      return cljs$core$spn;
    }();
  }(ps__$1);
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq10457) {
  var G__10458 = cljs.core.first(seq10457);
  var seq10457__$1 = cljs.core.next(seq10457);
  var G__10459 = cljs.core.first(seq10457__$1);
  var seq10457__$2 = cljs.core.next(seq10457__$1);
  var G__10460 = cljs.core.first(seq10457__$2);
  var seq10457__$3 = cljs.core.next(seq10457__$2);
  return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(G__10458, G__10459, G__10460, seq10457__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map() {
  var args10488 = [];
  var len__5565__auto___10508 = arguments.length;
  var i__5566__auto___10509 = 0;
  while (true) {
    if (i__5566__auto___10509 < len__5565__auto___10508) {
      args10488.push(arguments[i__5566__auto___10509]);
      var G__10510 = i__5566__auto___10509 + 1;
      i__5566__auto___10509 = G__10510;
      continue;
    } else {
    }
    break;
  }
  var G__10495 = args10488.length;
  switch(G__10495) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args10488.slice(4), 0);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5584__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__10512 = null;
      var G__10512__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__10512__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__10512__2 = function(result, input) {
        var G__10496 = result;
        var G__10497 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10496, G__10497) : rf.call(null, G__10496, G__10497);
      };
      var G__10512__3 = function() {
        var G__10513__delegate = function(result, input, inputs) {
          var G__10498 = result;
          var G__10499 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10498, G__10499) : rf.call(null, G__10498, G__10499);
        };
        var G__10513 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__10514__i = 0, G__10514__a = new Array(arguments.length - 2);
            while (G__10514__i < G__10514__a.length) {
              G__10514__a[G__10514__i] = arguments[G__10514__i + 2];
              ++G__10514__i;
            }
            inputs = new cljs.core.IndexedSeq(G__10514__a, 0);
          }
          return G__10513__delegate.call(this, result, input, inputs);
        };
        G__10513.cljs$lang$maxFixedArity = 2;
        G__10513.cljs$lang$applyTo = function(arglist__10515) {
          var result = cljs.core.first(arglist__10515);
          arglist__10515 = cljs.core.next(arglist__10515);
          var input = cljs.core.first(arglist__10515);
          var inputs = cljs.core.rest(arglist__10515);
          return G__10513__delegate(result, input, inputs);
        };
        G__10513.cljs$core$IFn$_invoke$arity$variadic = G__10513__delegate;
        return G__10513;
      }();
      G__10512 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__10512__0.call(this);
          case 1:
            return G__10512__1.call(this, result);
          case 2:
            return G__10512__2.call(this, result, input);
          default:
            var G__10516 = null;
            if (arguments.length > 2) {
              var G__10517__i = 0, G__10517__a = new Array(arguments.length - 2);
              while (G__10517__i < G__10517__a.length) {
                G__10517__a[G__10517__i] = arguments[G__10517__i + 2];
                ++G__10517__i;
              }
              G__10516 = new cljs.core.IndexedSeq(G__10517__a, 0);
            }
            return G__10512__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__10516);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10512.cljs$lang$maxFixedArity = 2;
      G__10512.cljs$lang$applyTo = G__10512__3.cljs$lang$applyTo;
      G__10512.cljs$core$IFn$_invoke$arity$0 = G__10512__0;
      G__10512.cljs$core$IFn$_invoke$arity$1 = G__10512__1;
      G__10512.cljs$core$IFn$_invoke$arity$2 = G__10512__2;
      G__10512.cljs$core$IFn$_invoke$arity$variadic = G__10512__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__10512;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5410__auto___10518 = size;
        var i_10519 = 0;
        while (true) {
          if (i_10519 < n__5410__auto___10518) {
            cljs.core.chunk_append(b, function() {
              var G__10500 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_10519);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10500) : f.call(null, G__10500);
            }());
            var G__10520 = i_10519 + 1;
            i_10519 = G__10520;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__10501 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10501) : f.call(null, G__10501);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__10502 = cljs.core.first(s1);
        var G__10503 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10502, G__10503) : f.call(null, G__10502, G__10503);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__10504 = cljs.core.first(s1);
        var G__10505 = cljs.core.first(s2);
        var G__10506 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10504, G__10505, G__10506) : f.call(null, G__10504, G__10505, G__10506);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(step) {
    return function(p1__10487_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__10487_SHARP_);
    };
  }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq10489) {
  var G__10490 = cljs.core.first(seq10489);
  var seq10489__$1 = cljs.core.next(seq10489);
  var G__10491 = cljs.core.first(seq10489__$1);
  var seq10489__$2 = cljs.core.next(seq10489__$1);
  var G__10492 = cljs.core.first(seq10489__$2);
  var seq10489__$3 = cljs.core.next(seq10489__$2);
  var G__10493 = cljs.core.first(seq10489__$3);
  var seq10489__$4 = cljs.core.next(seq10489__$3);
  return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(G__10490, G__10491, G__10492, G__10493, seq10489__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take() {
  var args10521 = [];
  var len__5565__auto___10526 = arguments.length;
  var i__5566__auto___10527 = 0;
  while (true) {
    if (i__5566__auto___10527 < len__5565__auto___10526) {
      args10521.push(arguments[i__5566__auto___10527]);
      var G__10528 = i__5566__auto___10527 + 1;
      i__5566__auto___10527 = G__10528;
      continue;
    } else {
    }
    break;
  }
  var G__10523 = args10521.length;
  switch(G__10523) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10521.length)].join(""));;
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__10524 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__10524) : cljs.core.pr_str.call(null, G__10524);
    }())].join(""));
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__10530 = null;
        var G__10530__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10530__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__10530__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          var nn = cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
          if (!(nn > 0)) {
            return cljs.core.ensure_reduced(result__$1);
          } else {
            return result__$1;
          }
        };
        G__10530 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10530__0.call(this);
            case 1:
              return G__10530__1.call(this, result);
            case 2:
              return G__10530__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10530.cljs$core$IFn$_invoke$arity$0 = G__10530__0;
        G__10530.cljs$core$IFn$_invoke$arity$1 = G__10530__1;
        G__10530.cljs$core$IFn$_invoke$arity$2 = G__10530__2;
        return G__10530;
      }();
    }(na);
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__10525 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__10525) : cljs.core.pr_str.call(null, G__10525);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__4425__auto__ = cljs.core.seq(coll);
      if (temp__4425__auto__) {
        var s = temp__4425__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop() {
  var args10531 = [];
  var len__5565__auto___10536 = arguments.length;
  var i__5566__auto___10537 = 0;
  while (true) {
    if (i__5566__auto___10537 < len__5565__auto___10536) {
      args10531.push(arguments[i__5566__auto___10537]);
      var G__10538 = i__5566__auto___10537 + 1;
      i__5566__auto___10537 = G__10538;
      continue;
    } else {
    }
    break;
  }
  var G__10533 = args10531.length;
  switch(G__10533) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10531.length)].join(""));;
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__10534 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__10534) : cljs.core.pr_str.call(null, G__10534);
    }())].join(""));
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function(na) {
      return function() {
        var G__10540 = null;
        var G__10540__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10540__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__10540__2 = function(result, input) {
          var n__$1 = cljs.core.deref(na);
          cljs.core._vreset_BANG_(na, cljs.core._deref(na) - 1);
          if (n__$1 > 0) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__10540 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10540__0.call(this);
            case 1:
              return G__10540__1.call(this, result);
            case 2:
              return G__10540__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10540.cljs$core$IFn$_invoke$arity$0 = G__10540__0;
        G__10540.cljs$core$IFn$_invoke$arity$1 = G__10540__1;
        G__10540.cljs$core$IFn$_invoke$arity$2 = G__10540__2;
        return G__10540;
      }();
    }(na);
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__10535 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__10535) : cljs.core.pr_str.call(null, G__10535);
    }())].join(""));
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__10541 = n__$1 - 1;
        var G__10542 = cljs.core.rest(s);
        n__$1 = G__10541;
        coll__$1 = G__10542;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(n, coll);
    };
  }(step), null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last() {
  var args10543 = [];
  var len__5565__auto___10546 = arguments.length;
  var i__5566__auto___10547 = 0;
  while (true) {
    if (i__5566__auto___10547 < len__5565__auto___10546) {
      args10543.push(arguments[i__5566__auto___10547]);
      var G__10548 = i__5566__auto___10547 + 1;
      i__5566__auto___10547 = G__10548;
      continue;
    } else {
    }
    break;
  }
  var G__10545 = args10543.length;
  switch(G__10545) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10543.length)].join(""));;
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__10550 = cljs.core.next(s);
      var G__10551 = cljs.core.next(lead);
      s = G__10550;
      lead = G__10551;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while() {
  var args10552 = [];
  var len__5565__auto___10557 = arguments.length;
  var i__5566__auto___10558 = 0;
  while (true) {
    if (i__5566__auto___10558 < len__5565__auto___10557) {
      args10552.push(arguments[i__5566__auto___10558]);
      var G__10559 = i__5566__auto___10558 + 1;
      i__5566__auto___10558 = G__10559;
      continue;
    } else {
    }
    break;
  }
  var G__10554 = args10552.length;
  switch(G__10554) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10552.length)].join(""));;
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function(da) {
      return function() {
        var G__10561 = null;
        var G__10561__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10561__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__10561__2 = function(result, input) {
          var drop_QMARK_ = cljs.core.deref(da);
          if (cljs.core.truth_(function() {
            var and__4514__auto__ = drop_QMARK_;
            if (cljs.core.truth_(and__4514__auto__)) {
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
            } else {
              return and__4514__auto__;
            }
          }())) {
            return result;
          } else {
            cljs.core.vreset_BANG_(da, null);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__10561 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10561__0.call(this);
            case 1:
              return G__10561__1.call(this, result);
            case 2:
              return G__10561__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10561.cljs$core$IFn$_invoke$arity$0 = G__10561__0;
        G__10561.cljs$core$IFn$_invoke$arity$1 = G__10561__1;
        G__10561.cljs$core$IFn$_invoke$arity$2 = G__10561__2;
        return G__10561;
      }();
    }(da);
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__4514__auto__ = s;
        if (and__4514__auto__) {
          var G__10556 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__10556) : pred__$1.call(null, G__10556);
        } else {
          return and__4514__auto__;
        }
      }())) {
        var G__10562 = pred__$1;
        var G__10563 = cljs.core.rest(s);
        pred__$1 = G__10562;
        coll__$1 = G__10563;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function(step) {
    return function() {
      return step(pred, coll);
    };
  }(step), null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.cycle = function cljs$core$cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cljs$core$cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function cljs$core$repeat() {
  var args10564 = [];
  var len__5565__auto___10567 = arguments.length;
  var i__5566__auto___10568 = 0;
  while (true) {
    if (i__5566__auto___10568 < len__5565__auto___10567) {
      args10564.push(arguments[i__5566__auto___10568]);
      var G__10569 = i__5566__auto___10568 + 1;
      i__5566__auto___10568 = G__10569;
      continue;
    } else {
    }
    break;
  }
  var G__10566 = args10564.length;
  switch(G__10566) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10564.length)].join(""));;
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(x, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
  }, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly() {
  var args10571 = [];
  var len__5565__auto___10574 = arguments.length;
  var i__5566__auto___10575 = 0;
  while (true) {
    if (i__5566__auto___10575 < len__5565__auto___10574) {
      args10571.push(arguments[i__5566__auto___10575]);
      var G__10576 = i__5566__auto___10575 + 1;
      i__5566__auto___10575 = G__10576;
      continue;
    } else {
    }
    break;
  }
  var G__10573 = args10571.length;
  switch(G__10573) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10571.length)].join(""));;
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return cljs$core$iterate(f, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
  }, null, null));
};
cljs.core.interleave = function cljs$core$interleave() {
  var args10580 = [];
  var len__5565__auto___10586 = arguments.length;
  var i__5566__auto___10587 = 0;
  while (true) {
    if (i__5566__auto___10587 < len__5565__auto___10586) {
      args10580.push(arguments[i__5566__auto___10587]);
      var G__10588 = i__5566__auto___10587 + 1;
      i__5566__auto___10587 = G__10588;
      continue;
    } else {
    }
    break;
  }
  var G__10585 = args10580.length;
  switch(G__10585) {
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args10580.slice(2), 0);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5584__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq10581) {
  var G__10582 = cljs.core.first(seq10581);
  var seq10581__$1 = cljs.core.next(seq10581);
  var G__10583 = cljs.core.first(seq10581__$1);
  var seq10581__$2 = cljs.core.next(seq10581__$1);
  return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(G__10582, G__10583, seq10581__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose() {
  var args10590 = [];
  var len__5565__auto___10593 = arguments.length;
  var i__5566__auto___10594 = 0;
  while (true) {
    if (i__5566__auto___10594 < len__5565__auto___10593) {
      args10590.push(arguments[i__5566__auto___10594]);
      var G__10595 = i__5566__auto___10594 + 1;
      i__5566__auto___10594 = G__10595;
      continue;
    } else {
    }
    break;
  }
  var G__10592 = args10590.length;
  switch(G__10592) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10590.length)].join(""));;
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function(started) {
      return function() {
        var G__10597 = null;
        var G__10597__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__10597__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__10597__2 = function(result, input) {
          if (cljs.core.truth_(cljs.core.deref(started))) {
            var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
            if (cljs.core.reduced_QMARK_(sepr)) {
              return sepr;
            } else {
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
            }
          } else {
            cljs.core.vreset_BANG_(started, true);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__10597 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__10597__0.call(this);
            case 1:
              return G__10597__1.call(this, result);
            case 2:
              return G__10597__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__10597.cljs$core$IFn$_invoke$arity$0 = G__10597__0;
        G__10597.cljs$core$IFn$_invoke$arity$1 = G__10597__1;
        G__10597.cljs$core$IFn$_invoke$arity$2 = G__10597__2;
        return G__10597;
      }();
    }(started);
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4423__auto__ = cljs.core.seq(coll);
      if (temp__4423__auto__) {
        var coll__$1 = temp__4423__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat() {
  var args10606 = [];
  var len__5565__auto___10611 = arguments.length;
  var i__5566__auto___10612 = 0;
  while (true) {
    if (i__5566__auto___10612 < len__5565__auto___10611) {
      args10606.push(arguments[i__5566__auto___10612]);
      var G__10613 = i__5566__auto___10612 + 1;
      i__5566__auto___10612 = G__10613;
      continue;
    } else {
    }
    break;
  }
  var G__10610 = args10606.length;
  switch(G__10610) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args10606.slice(1), 0);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq10607) {
  var G__10608 = cljs.core.first(seq10607);
  var seq10607__$1 = cljs.core.next(seq10607);
  return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(G__10608, seq10607__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter() {
  var args10615 = [];
  var len__5565__auto___10619 = arguments.length;
  var i__5566__auto___10620 = 0;
  while (true) {
    if (i__5566__auto___10620 < len__5565__auto___10619) {
      args10615.push(arguments[i__5566__auto___10620]);
      var G__10621 = i__5566__auto___10620 + 1;
      i__5566__auto___10620 = G__10621;
      continue;
    } else {
    }
    break;
  }
  var G__10617 = args10615.length;
  switch(G__10617) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10615.length)].join(""));;
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__10623 = null;
      var G__10623__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__10623__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__10623__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__10623 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__10623__0.call(this);
          case 1:
            return G__10623__1.call(this, result);
          case 2:
            return G__10623__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__10623.cljs$core$IFn$_invoke$arity$0 = G__10623__0;
      G__10623.cljs$core$IFn$_invoke$arity$1 = G__10623__1;
      G__10623.cljs$core$IFn$_invoke$arity$2 = G__10623__2;
      return G__10623;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__5410__auto___10624 = size;
        var i_10625 = 0;
        while (true) {
          if (i_10625 < n__5410__auto___10624) {
            if (cljs.core.truth_(function() {
              var G__10618 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_10625);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10618) : pred.call(null, G__10618);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_10625));
            } else {
            }
            var G__10626 = i_10625 + 1;
            i_10625 = G__10626;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove() {
  var args10627 = [];
  var len__5565__auto___10630 = arguments.length;
  var i__5566__auto___10631 = 0;
  while (true) {
    if (i__5566__auto___10631 < len__5565__auto___10630) {
      args10627.push(arguments[i__5566__auto___10631]);
      var G__10632 = i__5566__auto___10631 + 1;
      i__5566__auto___10631 = G__10632;
      continue;
    } else {
    }
    break;
  }
  var G__10629 = args10627.length;
  switch(G__10629) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10627.length)].join(""));;
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.array_seq([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__10634_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__10634_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into() {
  var args10635 = [];
  var len__5565__auto___10640 = arguments.length;
  var i__5566__auto___10641 = 0;
  while (true) {
    if (i__5566__auto___10641 < len__5565__auto___10640) {
      args10635.push(arguments[i__5566__auto___10641]);
      var G__10642 = i__5566__auto___10641 + 1;
      i__5566__auto___10641 = G__10642;
      continue;
    } else {
    }
    break;
  }
  var G__10637 = args10635.length;
  switch(G__10637) {
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10635.length)].join(""));;
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv() {
  var args10644 = [];
  var len__5565__auto___10652 = arguments.length;
  var i__5566__auto___10653 = 0;
  while (true) {
    if (i__5566__auto___10653 < len__5565__auto___10652) {
      args10644.push(arguments[i__5566__auto___10653]);
      var G__10654 = i__5566__auto___10653 + 1;
      i__5566__auto___10653 = G__10654;
      continue;
    } else {
    }
    break;
  }
  var G__10651 = args10644.length;
  switch(G__10651) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args10644.slice(4), 0);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__5584__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq10645) {
  var G__10646 = cljs.core.first(seq10645);
  var seq10645__$1 = cljs.core.next(seq10645);
  var G__10647 = cljs.core.first(seq10645__$1);
  var seq10645__$2 = cljs.core.next(seq10645__$1);
  var G__10648 = cljs.core.first(seq10645__$2);
  var seq10645__$3 = cljs.core.next(seq10645__$2);
  var G__10649 = cljs.core.first(seq10645__$3);
  var seq10645__$4 = cljs.core.next(seq10645__$3);
  return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(G__10646, G__10647, G__10648, G__10649, seq10645__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition() {
  var args10656 = [];
  var len__5565__auto___10659 = arguments.length;
  var i__5566__auto___10660 = 0;
  while (true) {
    if (i__5566__auto___10660 < len__5565__auto___10659) {
      args10656.push(arguments[i__5566__auto___10660]);
      var G__10661 = i__5566__auto___10660 + 1;
      i__5566__auto___10660 = G__10661;
      continue;
    } else {
    }
    break;
  }
  var G__10658 = args10656.length;
  switch(G__10658) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10656.length)].join(""));;
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in() {
  var args10663 = [];
  var len__5565__auto___10667 = arguments.length;
  var i__5566__auto___10668 = 0;
  while (true) {
    if (i__5566__auto___10668 < len__5565__auto___10667) {
      args10663.push(arguments[i__5566__auto___10668]);
      var G__10669 = i__5566__auto___10668 + 1;
      i__5566__auto___10668 = G__10669;
      continue;
    } else {
    }
    break;
  }
  var G__10665 = args10663.length;
  switch(G__10665) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10663.length)].join(""));;
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (ks__$1) {
      if (!(!(m__$1 == null) ? m__$1.cljs$lang$protocol_mask$partition0$ & 256 || m__$1.cljs$core$ILookup$ ? true : !m__$1.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, m__$1))) {
        return not_found;
      } else {
        var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
        if (sentinel === m__$2) {
          return not_found;
        } else {
          var G__10671 = sentinel;
          var G__10672 = m__$2;
          var G__10673 = cljs.core.next(ks__$1);
          sentinel = G__10671;
          m__$1 = G__10672;
          ks__$1 = G__10673;
          continue;
        }
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__10674, v) {
  var vec__10679 = p__10674;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10679, 0, null);
  var ks = cljs.core.nthnext(vec__10679, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in() {
  var args10680 = [];
  var len__5565__auto___10710 = arguments.length;
  var i__5566__auto___10711 = 0;
  while (true) {
    if (i__5566__auto___10711 < len__5565__auto___10710) {
      args10680.push(arguments[i__5566__auto___10711]);
      var G__10712 = i__5566__auto___10711 + 1;
      i__5566__auto___10711 = G__10712;
      continue;
    } else {
    }
    break;
  }
  var G__10689 = args10680.length;
  switch(G__10689) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args10680.slice(6), 0);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5584__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__10690, f) {
  var vec__10691 = p__10690;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10691, 0, null);
  var ks = cljs.core.nthnext(vec__10691, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__10692 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10692) : f.call(null, G__10692);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__10693, f, a) {
  var vec__10694 = p__10693;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10694, 0, null);
  var ks = cljs.core.nthnext(vec__10694, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__10695 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__10696 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10695, G__10696) : f.call(null, G__10695, G__10696);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__10697, f, a, b) {
  var vec__10698 = p__10697;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10698, 0, null);
  var ks = cljs.core.nthnext(vec__10698, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__10699 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__10700 = a;
      var G__10701 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10699, G__10700, G__10701) : f.call(null, G__10699, G__10700, G__10701);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__10702, f, a, b, c) {
  var vec__10703 = p__10702;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10703, 0, null);
  var ks = cljs.core.nthnext(vec__10703, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__10704 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__10705 = a;
      var G__10706 = b;
      var G__10707 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10704, G__10705, G__10706, G__10707) : f.call(null, G__10704, G__10705, G__10706, G__10707);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__10708, f, a, b, c, args) {
  var vec__10709 = p__10708;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10709, 0, null);
  var ks = cljs.core.nthnext(vec__10709, 1);
  if (cljs.core.truth_(ks)) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq10681) {
  var G__10682 = cljs.core.first(seq10681);
  var seq10681__$1 = cljs.core.next(seq10681);
  var G__10683 = cljs.core.first(seq10681__$1);
  var seq10681__$2 = cljs.core.next(seq10681__$1);
  var G__10684 = cljs.core.first(seq10681__$2);
  var seq10681__$3 = cljs.core.next(seq10681__$2);
  var G__10685 = cljs.core.first(seq10681__$3);
  var seq10681__$4 = cljs.core.next(seq10681__$3);
  var G__10686 = cljs.core.first(seq10681__$4);
  var seq10681__$5 = cljs.core.next(seq10681__$4);
  var G__10687 = cljs.core.first(seq10681__$5);
  var seq10681__$6 = cljs.core.next(seq10681__$5);
  return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(G__10682, G__10683, G__10684, G__10685, G__10686, G__10687, seq10681__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update() {
  var args10714 = [];
  var len__5565__auto___10734 = arguments.length;
  var i__5566__auto___10735 = 0;
  while (true) {
    if (i__5566__auto___10735 < len__5565__auto___10734) {
      args10714.push(arguments[i__5566__auto___10735]);
      var G__10736 = i__5566__auto___10735 + 1;
      i__5566__auto___10735 = G__10736;
      continue;
    } else {
    }
    break;
  }
  var G__10723 = args10714.length;
  switch(G__10723) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args10714.slice(6), 0);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__5584__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__10724 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10724) : f.call(null, G__10724);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__10725 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__10726 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10725, G__10726) : f.call(null, G__10725, G__10726);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__10727 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__10728 = x;
    var G__10729 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10727, G__10728, G__10729) : f.call(null, G__10727, G__10728, G__10729);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__10730 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__10731 = x;
    var G__10732 = y;
    var G__10733 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10730, G__10731, G__10732, G__10733) : f.call(null, G__10730, G__10731, G__10732, G__10733);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq10715) {
  var G__10716 = cljs.core.first(seq10715);
  var seq10715__$1 = cljs.core.next(seq10715);
  var G__10717 = cljs.core.first(seq10715__$1);
  var seq10715__$2 = cljs.core.next(seq10715__$1);
  var G__10718 = cljs.core.first(seq10715__$2);
  var seq10715__$3 = cljs.core.next(seq10715__$2);
  var G__10719 = cljs.core.first(seq10715__$3);
  var seq10715__$4 = cljs.core.next(seq10715__$3);
  var G__10720 = cljs.core.first(seq10715__$4);
  var seq10715__$5 = cljs.core.next(seq10715__$4);
  var G__10721 = cljs.core.first(seq10715__$5);
  var seq10715__$6 = cljs.core.next(seq10715__$5);
  return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(G__10716, G__10717, G__10718, G__10719, G__10720, G__10721, seq10715__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__10738 = ll - 5;
      var G__10739 = r;
      ll = G__10738;
      ret = G__10739;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = cljs$core$push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__10744 = cljs.core.pv_aget(node, 0);
      var G__10745 = level - 5;
      node = G__10744;
      level = G__10745;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__10746 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__10747 = level - 5;
        node = G__10746;
        level = G__10747;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, cljs$core$do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__10757 = init__$2;
              var G__10758 = j + i;
              var G__10759 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10757, G__10758, G__10759) : f.call(null, G__10757, G__10758, G__10759);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__10766 = j + 1;
              var G__10767 = init__$3;
              j = G__10766;
              init__$2 = G__10767;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__10768 = i + len;
        var G__10769 = init__$2;
        i = G__10768;
        init__$1 = G__10769;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null, self__.root), cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null, self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__10760 = init__$2;
              var G__10761 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10760, G__10761) : f.call(null, G__10760, G__10761);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__10770 = j + 1;
              var G__10771 = init__$3;
              j = G__10770;
              init__$2 = G__10771;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__10772 = i + len;
        var G__10773 = init__$2;
        i = G__10772;
        init__$1 = G__10773;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__10762 = coll__$1;
      var G__10763 = cljs.core.first_array_for_longvec(coll__$1);
      var G__10764 = 0;
      var G__10765 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10762, G__10763, G__10764, G__10765) : cljs.core.chunked_seq.call(null, G__10762, G__10763, G__10764, G__10765);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__5410__auto___10774 = len;
    var i_10775 = 0;
    while (true) {
      if (i_10775 < n__5410__auto___10774) {
        new_tail[i_10775] = self__.tail[i_10775];
        var G__10776 = i_10775 + 1;
        i_10775 = G__10776;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__10777 = null;
  var G__10777__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__10777__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__10777 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10777__2.call(this, self__, k);
      case 3:
        return G__10777__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10777.cljs$core$IFn$_invoke$arity$2 = G__10777__2;
  G__10777.cljs$core$IFn$_invoke$arity$3 = G__10777__3;
  return G__10777;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args10756) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10756)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__10778 = i + 1;
        var G__10779 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__10778;
        out = G__10779;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.array_QMARK_(coll)) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function cljs$core$vector() {
  var args__5572__auto__ = [];
  var len__5565__auto___10781 = arguments.length;
  var i__5566__auto___10782 = 0;
  while (true) {
    if (i__5566__auto___10782 < len__5565__auto___10781) {
      args__5572__auto__.push(arguments[i__5566__auto___10782]);
      var G__10783 = i__5566__auto___10782 + 1;
      i__5566__auto___10782 = G__10783;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, true);
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq10780) {
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10780));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__10784 = self__.vec;
      var G__10785 = self__.node;
      var G__10786 = self__.i;
      var G__10787 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10784, G__10785, G__10786, G__10787) : cljs.core.chunked_seq.call(null, G__10784, G__10785, G__10786, G__10787);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__10788 = self__.vec;
    var G__10789 = self__.i + self__.off;
    var G__10790 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__10788, G__10789, G__10790) : cljs.core.subvec.call(null, G__10788, G__10789, G__10790);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__10791 = self__.vec;
    var G__10792 = self__.i + self__.off;
    var G__10793 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__10791, G__10792, G__10793) : cljs.core.subvec.call(null, G__10791, G__10792, G__10793);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__10794 = self__.vec;
      var G__10795 = self__.node;
      var G__10796 = self__.i;
      var G__10797 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10794, G__10795, G__10796, G__10797) : cljs.core.chunked_seq.call(null, G__10794, G__10795, G__10796, G__10797);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__10798 = self__.vec;
    var G__10799 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__10800 = end;
    var G__10801 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10798, G__10799, G__10800, G__10801) : cljs.core.chunked_seq.call(null, G__10798, G__10799, G__10800, G__10801);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, m) : cljs.core.chunked_seq.call(null, self__.vec, self__.node, self__.i, self__.off, m);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__10802 = self__.vec;
    var G__10803 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__10804 = end;
    var G__10805 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10802, G__10803, G__10804, G__10805) : cljs.core.chunked_seq.call(null, G__10802, G__10803, G__10804, G__10805);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.chunked_seq = function cljs$core$chunked_seq() {
  var args10806 = [];
  var len__5565__auto___10809 = arguments.length;
  var i__5566__auto___10810 = 0;
  while (true) {
    if (i__5566__auto___10810 < len__5565__auto___10809) {
      args10806.push(arguments[i__5566__auto___10810]);
      var G__10811 = i__5566__auto___10810 + 1;
      i__5566__auto___10810 = G__10811;
      continue;
    } else {
    }
    break;
  }
  var G__10808 = args10806.length;
  switch(G__10808) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10806.length)].join(""));;
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__10814 = init__$1;
        var G__10815 = j;
        var G__10816 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10814, G__10815, G__10816) : f.call(null, G__10814, G__10815, G__10816);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__10833 = i + 1;
        var G__10834 = j + 1;
        var G__10835 = init__$2;
        i = G__10833;
        j = G__10834;
        init__$1 = G__10835;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__10817 = self__.meta;
  var G__10818 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__10819 = self__.start;
  var G__10820 = function() {
    var x__4838__auto__ = self__.end;
    var y__4839__auto__ = v_pos + 1;
    return x__4838__auto__ > y__4839__auto__ ? x__4838__auto__ : y__4839__auto__;
  }();
  var G__10821 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10817, G__10818, G__10819, G__10820, G__10821) : cljs.core.build_subvec.call(null, G__10817, G__10818, G__10819, G__10820, G__10821);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__10822 = self__.meta;
    var G__10823 = self__.v;
    var G__10824 = self__.start;
    var G__10825 = self__.end - 1;
    var G__10826 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10822, G__10823, G__10824, G__10825, G__10826) : cljs.core.build_subvec.call(null, G__10822, G__10823, G__10824, G__10825, G__10826);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function cljs$core$subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return cljs$core$subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(meta__$1, self__.v, self__.start, self__.end, self__.__hash) : cljs.core.build_subvec.call(null, meta__$1, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__10828 = self__.meta;
  var G__10829 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__10830 = self__.start;
  var G__10831 = self__.end + 1;
  var G__10832 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10828, G__10829, G__10830, G__10831, G__10832) : cljs.core.build_subvec.call(null, G__10828, G__10829, G__10830, G__10831, G__10832);
};
cljs.core.Subvec.prototype.call = function() {
  var G__10836 = null;
  var G__10836__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__10836__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__10836 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10836__2.call(this, self__, k);
      case 3:
        return G__10836__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10836.cljs$core$IFn$_invoke$arity$2 = G__10836__2;
  G__10836.cljs$core$IFn$_invoke$arity$3 = G__10836__3;
  return G__10836;
}();
cljs.core.Subvec.prototype.apply = function(self__, args10813) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10813)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__10837 = meta;
      var G__10838 = v.v;
      var G__10839 = v.start + start;
      var G__10840 = v.start + end;
      var G__10841 = __hash;
      meta = G__10837;
      v = G__10838;
      start = G__10839;
      end = G__10840;
      __hash = G__10841;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec() {
  var args10842 = [];
  var len__5565__auto___10845 = arguments.length;
  var i__5566__auto___10846 = 0;
  while (true) {
    if (i__5566__auto___10846 < len__5565__auto___10845) {
      args10842.push(arguments[i__5566__auto___10846]);
      var G__10847 = i__5566__auto___10846 + 1;
      i__5566__auto___10846 = G__10847;
      continue;
    } else {
    }
    break;
  }
  var G__10844 = args10842.length;
  switch(G__10844) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10842.length)].join(""));;
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  return cljs.core.build_subvec(null, v, start, end, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return cljs$core$tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = cljs$core$tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__10860 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__10861 = level - 5;
        node = G__10860;
        level = G__10861;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__10865 = null;
  var G__10865__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10865__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10865 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10865__2.call(this, self__, k);
      case 3:
        return G__10865__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10865.cljs$core$IFn$_invoke$arity$2 = G__10865__2;
  G__10865.cljs$core$IFn$_invoke$arity$3 = G__10865__3;
  return G__10865;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args10862) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10862)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4526__auto__ = cljs.core.some_QMARK_(self__.fseq) && cljs.core.seq(self__.fseq);
  if (or__4526__auto__) {
    return or__4526__auto__;
  } else {
    var and__4514__auto__ = cljs.core.some_QMARK_(self__.riter);
    if (and__4514__auto__) {
      return self__.riter.hasNext();
    } else {
      return and__4514__auto__;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (cljs.core.some_QMARK_(self__.fseq)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.riter) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4423__auto__ = cljs.core.next(self__.front);
  if (temp__4423__auto__) {
    var f1 = temp__4423__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4423__auto__ = cljs.core.next(self__.front);
    if (temp__4423__auto__) {
      var f1 = temp__4423__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4526__auto__ = self__.front;
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4526__auto__ = self__.rear;
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__10866 = i + incr;
        i = G__10866;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__10867 = i + 1;
      var G__10868 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__10867;
      out = G__10868;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_10873 = 0;
  while (true) {
    if (i_10873 < l) {
      var k_10874 = ks[i_10873];
      new_obj[k_10874] = obj[k_10874];
      var G__10875 = i_10873 + 1;
      i_10873 = G__10875;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__10878 = init__$1;
        var G__10879 = k;
        var G__10880 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10878, G__10879, G__10880) : f.call(null, G__10878, G__10879, G__10880);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__10881 = cljs.core.rest(keys__$1);
        var G__10882 = init__$2;
        keys__$1 = G__10881;
        init__$1 = G__10882;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__10876_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__10876_SHARP_, self__.strobj[p1__10876_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__10883 = null;
  var G__10883__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10883__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10883 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10883__2.call(this, self__, k);
      case 3:
        return G__10883__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10883.cljs$core$IFn$_invoke$arity$2 = G__10883__2;
  G__10883.cljs$core$IFn$_invoke$arity$3 = G__10883__3;
  return G__10883;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args10877) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10877)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4526__auto__ = self__.i < self__.base_count;
  if (or__4526__auto__) {
    return or__4526__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k)], null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__10886 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10886, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10886, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__10887 = i + 2;
        i = G__10887;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__10888 = i + 2;
        i = G__10888;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__10889 = i + 2;
        i = G__10889;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__10890 = i + 2;
        i = G__10890;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__10891 = i + 2;
        i = G__10891;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_10892 = 0;
  while (true) {
    if (i_10892 < l) {
      narr[i_10892] = arr[i_10892];
      var G__10893 = i_10892 + 1;
      i_10892 = G__10893;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__10895 = cljs.core.seq(coll);
  var chunk__10896 = null;
  var count__10897 = 0;
  var i__10898 = 0;
  while (true) {
    if (i__10898 < count__10897) {
      var vec__10899 = chunk__10896.cljs$core$IIndexed$_nth$arity$2(null, i__10898);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10899, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10899, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__10908 = seq__10895;
      var G__10909 = chunk__10896;
      var G__10910 = count__10897;
      var G__10911 = i__10898 + 1;
      seq__10895 = G__10908;
      chunk__10896 = G__10909;
      count__10897 = G__10910;
      i__10898 = G__10911;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__10895);
      if (temp__4425__auto__) {
        var seq__10895__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__10895__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__10895__$1);
          var G__10912 = cljs.core.chunk_rest(seq__10895__$1);
          var G__10913 = c__5310__auto__;
          var G__10914 = cljs.core.count(c__5310__auto__);
          var G__10915 = 0;
          seq__10895 = G__10912;
          chunk__10896 = G__10913;
          count__10897 = G__10914;
          i__10898 = G__10915;
          continue;
        } else {
          var vec__10900 = cljs.core.first(seq__10895__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10900, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10900, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__10916 = cljs.core.next(seq__10895__$1);
          var G__10917 = null;
          var G__10918 = 0;
          var G__10919 = 0;
          seq__10895 = G__10916;
          chunk__10896 = G__10917;
          count__10897 = G__10918;
          i__10898 = G__10919;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__10901 = init__$1;
        var G__10902 = self__.arr[i];
        var G__10903 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10901, G__10902, G__10903) : f.call(null, G__10901, G__10902, G__10903);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__10920 = i + 2;
        var G__10921 = init__$2;
        i = G__10920;
        init__$1 = G__10921;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (!(other == null) ? other.cljs$lang$protocol_mask$partition0$ & 1024 || other.cljs$core$IMap$ ? true : false : false) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__10922 = i + 2;
              i = G__10922;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__10923 = s + 2;
            var G__10924 = d;
            s = G__10923;
            d = G__10924;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__10925 = s + 2;
            var G__10926 = d + 2;
            s = G__10925;
            d = G__10926;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__10907 = cljs.core.aclone(self__.arr);
        G__10907[idx + 1] = v;
        return G__10907;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__10927 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__10928 = cljs.core.next(es);
          ret = G__10927;
          es = G__10928;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__10929 = null;
  var G__10929__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__10929__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__10929 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10929__2.call(this, self__, k);
      case 3:
        return G__10929__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10929.cljs$core$IFn$_invoke$arity$2 = G__10929__2;
  G__10929.cljs$core$IFn$_invoke$arity$3 = G__10929__3;
  return G__10929;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args10894) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10894)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_10930 = 0;
    while (true) {
      if (i_10930 < arr__$1.length) {
        var k_10931 = arr__$1[i_10930];
        var v_10932 = arr__$1[i_10930 + 1];
        var idx_10933 = cljs.core.array_index_of(ret, k_10931);
        if (idx_10933 === -1) {
          ret.push(k_10931);
          ret.push(v_10932);
        } else {
        }
        var G__10934 = i_10930 + 2;
        i_10930 = G__10934;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var arr__$3 = function() {
    var cnt = arr__$2.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
  }();
  return arr__$3;
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return cljs.core._assoc_BANG_(tcoll__$1, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__10937 = cljs.core.next(es);
          var G__10938 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__10937;
          tcoll__$2 = G__10938;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len, self__.arr) : cljs.core.array__GT_transient_hash_map.call(null, self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__10936_10939 = self__.arr;
      G__10936_10939.pop();
      G__10936_10939.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__10940 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__10941 = i + 2;
      out = G__10940;
      i = G__10941;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set() {
  var args10942 = [];
  var len__5565__auto___10947 = arguments.length;
  var i__5566__auto___10948 = 0;
  while (true) {
    if (i__5566__auto___10948 < len__5565__auto___10947) {
      args10942.push(arguments[i__5566__auto___10948]);
      var G__10949 = i__5566__auto___10948 + 1;
      i__5566__auto___10948 = G__10949;
      continue;
    } else {
    }
    break;
  }
  var G__10944 = args10942.length;
  switch(G__10944) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10942.length)].join(""));;
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__10945 = cljs.core.aclone(arr);
  G__10945[i] = a;
  return G__10945;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__10946 = cljs.core.aclone(arr);
  G__10946[i] = a;
  G__10946[j] = b;
  return G__10946;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set() {
  var args10951 = [];
  var len__5565__auto___10954 = arguments.length;
  var i__5566__auto___10955 = 0;
  while (true) {
    if (i__5566__auto___10955 < len__5565__auto___10954) {
      args10951.push(arguments[i__5566__auto___10955]);
      var G__10956 = i__5566__auto___10955 + 1;
      i__5566__auto___10955 = G__10956;
      continue;
    } else {
    }
    break;
  }
  var G__10953 = args10951.length;
  switch(G__10953) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args10951.length)].join(""));;
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__10961 = init__$1;
          var G__10962 = k;
          var G__10963 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10961, G__10962, G__10963) : f.call(null, G__10961, G__10962, G__10963);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
      } else {
        var G__10964 = i + 2;
        var G__10965 = init__$2;
        i = G__10964;
        init__$1 = G__10965;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = cljs.core.some_QMARK_(key) ? self__.next_entry = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, node_or_val], null) : cljs.core.some_QMARK_(node_or_val) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__4526__auto__ = cljs.core.some_QMARK_(self__.next_entry);
  if (or__4526__auto__) {
    return or__4526__auto__;
  } else {
    var or__4526__auto____$1 = cljs.core.some_QMARK_(self__.next_iter);
    if (or__4526__auto____$1) {
      return or__4526__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.some_QMARK_(self__.next_entry)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (cljs.core.some_QMARK_(self__.next_iter)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_10979 = 0;
        var j_10980 = 0;
        while (true) {
          if (i_10979 < 32) {
            if ((self__.bitmap >>> i_10979 & 1) === 0) {
              var G__10981 = i_10979 + 1;
              var G__10982 = j_10980;
              i_10979 = G__10981;
              j_10980 = G__10982;
              continue;
            } else {
              nodes[i_10979] = !(self__.arr[j_10980] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_10980]), self__.arr[j_10980], self__.arr[j_10980 + 1], added_leaf_QMARK_) : self__.arr[j_10980 + 1];
              var G__10983 = i_10979 + 1;
              var G__10984 = j_10980 + 2;
              i_10979 = G__10983;
              j_10980 = G__10984;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__10966 = edit__$1;
          var G__10967 = shift + 5;
          var G__10968 = key_or_nil;
          var G__10969 = val_or_node;
          var G__10970 = hash;
          var G__10971 = key;
          var G__10972 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__10966, G__10967, G__10968, G__10969, G__10970, G__10971, G__10972) : cljs.core.create_node.call(null, G__10966, G__10967, G__10968, G__10969, G__10970, G__10971, G__10972);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_10985 = 0;
      var j_10986 = 0;
      while (true) {
        if (i_10985 < 32) {
          if ((self__.bitmap >>> i_10985 & 1) === 0) {
            var G__10987 = i_10985 + 1;
            var G__10988 = j_10986;
            i_10985 = G__10987;
            j_10986 = G__10988;
            continue;
          } else {
            nodes[i_10985] = !(self__.arr[j_10986] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_10986]), self__.arr[j_10986], self__.arr[j_10986 + 1], added_leaf_QMARK_) : self__.arr[j_10986 + 1];
            var G__10989 = i_10985 + 1;
            var G__10990 = j_10986 + 2;
            i_10985 = G__10989;
            j_10986 = G__10990;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__10973 = shift + 5;
          var G__10974 = key_or_nil;
          var G__10975 = val_or_node;
          var G__10976 = hash;
          var G__10977 = key;
          var G__10978 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__10973, G__10974, G__10975, G__10976, G__10977, G__10978) : cljs.core.create_node.call(null, G__10973, G__10974, G__10975, G__10976, G__10977, G__10978);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$ = true;
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__10991 = i + 1;
        var G__10992 = j + 2;
        var G__10993 = bitmap | 1 << i;
        i = G__10991;
        j = G__10992;
        bitmap = G__10993;
        continue;
      } else {
        var G__10994 = i + 1;
        var G__10995 = j;
        var G__10996 = bitmap;
        i = G__10994;
        j = G__10995;
        bitmap = G__10996;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(cljs.core.some_QMARK_(self__.next_iter) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (cljs.core.some_QMARK_(node)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null, self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
        } else {
          var G__10997 = i + 1;
          var G__10998 = init__$2;
          i = G__10997;
          init__$1 = G__10998;
          continue;
        }
      } else {
        var G__10999 = i + 1;
        var G__11000 = init__$1;
        i = G__10999;
        init__$1 = G__11000;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$ = true;
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__11001 = i + 2;
        i = G__11001;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null, self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$ = true;
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node() {
  var args11002 = [];
  var len__5565__auto___11005 = arguments.length;
  var i__5566__auto___11006 = 0;
  while (true) {
    if (i__5566__auto___11006 < len__5565__auto___11005) {
      args11002.push(arguments[i__5566__auto___11006]);
      var G__11007 = i__5566__auto___11006 + 1;
      i__5566__auto___11006 = G__11007;
      continue;
    } else {
    }
    break;
  }
  var G__11004 = args11002.length;
  switch(G__11004) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11002.length)].join(""));;
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__11009 = self__.nodes;
    var G__11010 = self__.i + 2;
    var G__11011 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__11009, G__11010, G__11011) : cljs.core.create_inode_seq.call(null, G__11009, G__11010, G__11011);
  } else {
    var G__11012 = self__.nodes;
    var G__11013 = self__.i;
    var G__11014 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__11012, G__11013, G__11014) : cljs.core.create_inode_seq.call(null, G__11012, G__11013, G__11014);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.create_inode_seq = function cljs$core$create_inode_seq() {
  var args11015 = [];
  var len__5565__auto___11018 = arguments.length;
  var i__5566__auto___11019 = 0;
  while (true) {
    if (i__5566__auto___11019 < len__5565__auto___11018) {
      args11015.push(arguments[i__5566__auto___11019]);
      var G__11020 = i__5566__auto___11019 + 1;
      i__5566__auto___11019 = G__11020;
      continue;
    } else {
    }
    break;
  }
  var G__11017 = args11015.length;
  switch(G__11017) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11015.length)].join(""));;
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__4423__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__4423__auto__)) {
            var node = temp__4423__auto__;
            var temp__4423__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__4423__auto____$1)) {
              var node_seq = temp__4423__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__11022 = j + 2;
              j = G__11022;
              continue;
            }
          } else {
            var G__11023 = j + 2;
            j = G__11023;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__11024 = null;
  var G__11025 = self__.nodes;
  var G__11026 = self__.i;
  var G__11027 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__11024, G__11025, G__11026, G__11027) : cljs.core.create_array_node_seq.call(null, G__11024, G__11025, G__11026, G__11027);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq() {
  var args11028 = [];
  var len__5565__auto___11031 = arguments.length;
  var i__5566__auto___11032 = 0;
  while (true) {
    if (i__5566__auto___11032 < len__5565__auto___11031) {
      args11028.push(arguments[i__5566__auto___11032]);
      var G__11033 = i__5566__auto___11032 + 1;
      i__5566__auto___11032 = G__11033;
      continue;
    } else {
    }
    break;
  }
  var G__11030 = args11028.length;
  switch(G__11030) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 4:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11028.length)].join(""));;
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = function(meta, nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__4423__auto__ = nodes[j];
        if (cljs.core.truth_(temp__4423__auto__)) {
          var nj = temp__4423__auto__;
          var temp__4423__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__4423__auto____$1)) {
            var ns = temp__4423__auto____$1;
            return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
          } else {
            var G__11035 = j + 1;
            j = G__11035;
            continue;
          }
        } else {
          var G__11036 = j + 1;
          j = G__11036;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 4;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.seen && self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return self__.nil_val;
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11038 = cljs.core.seq(coll);
  var chunk__11039 = null;
  var count__11040 = 0;
  var i__11041 = 0;
  while (true) {
    if (i__11041 < count__11040) {
      var vec__11042 = chunk__11039.cljs$core$IIndexed$_nth$arity$2(null, i__11041);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11042, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11042, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__11046 = seq__11038;
      var G__11047 = chunk__11039;
      var G__11048 = count__11040;
      var G__11049 = i__11041 + 1;
      seq__11038 = G__11046;
      chunk__11039 = G__11047;
      count__11040 = G__11048;
      i__11041 = G__11049;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__11038);
      if (temp__4425__auto__) {
        var seq__11038__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__11038__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__11038__$1);
          var G__11050 = cljs.core.chunk_rest(seq__11038__$1);
          var G__11051 = c__5310__auto__;
          var G__11052 = cljs.core.count(c__5310__auto__);
          var G__11053 = 0;
          seq__11038 = G__11050;
          chunk__11039 = G__11051;
          count__11040 = G__11052;
          i__11041 = G__11053;
          continue;
        } else {
          var vec__11043 = cljs.core.first(seq__11038__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11043, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11043, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__11054 = cljs.core.next(seq__11038__$1);
          var G__11055 = null;
          var G__11056 = 0;
          var G__11057 = 0;
          seq__11038 = G__11054;
          chunk__11039 = G__11055;
          count__11040 = G__11056;
          i__11041 = G__11057;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter;
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__11058 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__11059 = cljs.core.next(es);
          ret = G__11058;
          es = G__11059;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__11060 = null;
  var G__11060__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11060__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11060 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11060__2.call(this, self__, k);
      case 3:
        return G__11060__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11060.cljs$core$IFn$_invoke$arity$2 = G__11060__2;
  G__11060.cljs$core$IFn$_invoke$arity$3 = G__11060__3;
  return G__11060;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args11037) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11037)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__11061 = i + 2;
      var G__11062 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__11061;
      ret = G__11062;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__11063 = i + 1;
      var G__11064 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__11063;
      out = G__11064;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 258;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 2048 || o.cljs$core$IMapEntry$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, o)) {
      return tcoll.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null, o), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null, o));
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4423__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          var G__11066 = cljs.core.next(es);
          var G__11067 = tcoll__$1.assoc_BANG_(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null, e), cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null, e));
          es = G__11066;
          tcoll__$1 = G__11067;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__11068 = ascending_QMARK_ ? t.left : t.right;
      var G__11069 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__11068;
      stack__$1 = G__11069;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? cljs$core$tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$1) : cljs.core.deref.call(null, init__$1);
  } else {
    var init__$2 = function() {
      var G__11079 = init__$1;
      var G__11080 = node.key;
      var G__11081 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11079, G__11080, G__11081) : f.call(null, G__11079, G__11080, G__11081);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$2) : cljs.core.deref.call(null, init__$2);
    } else {
      var init__$3 = !(node.right == null) ? cljs$core$tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(init__$3) : cljs.core.deref.call(null, init__$3);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__11083 = null;
  var G__11083__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11083__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11083 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11083__2.call(this, self__, k);
      case 3:
        return G__11083__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11083.cljs$core$IFn$_invoke$arity$2 = G__11083__2;
  G__11083.cljs$core$IFn$_invoke$arity$3 = G__11083__3;
  return G__11083;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args11082) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11082)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__11085 = null;
  var G__11085__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11085__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11085 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11085__2.call(this, self__, k);
      case 3:
        return G__11085__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11085.cljs$core$IFn$_invoke$arity$2 = G__11085__2;
  G__11085.cljs$core$IFn$_invoke$arity$3 = G__11085__3;
  return G__11085;
}();
cljs.core.RedNode.prototype.apply = function(self__, args11084) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11084)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__11098 = k;
      var G__11099 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11098, G__11099) : comp.call(null, G__11098, G__11099);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = cljs$core$tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = cljs$core$tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, cljs$core$tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, cljs$core$tree_map_append(left, right.left), right.right, null);
        } else {
          var app = cljs$core$tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__11118 = k;
      var G__11119 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11118, G__11119) : comp.call(null, G__11118, G__11119);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = cljs$core$tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = cljs$core$tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, cljs$core$tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, cljs$core$tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11129 = cljs.core.seq(coll);
  var chunk__11130 = null;
  var count__11131 = 0;
  var i__11132 = 0;
  while (true) {
    if (i__11132 < count__11131) {
      var vec__11133 = chunk__11130.cljs$core$IIndexed$_nth$arity$2(null, i__11132);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11133, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11133, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__11139 = seq__11129;
      var G__11140 = chunk__11130;
      var G__11141 = count__11131;
      var G__11142 = i__11132 + 1;
      seq__11129 = G__11139;
      chunk__11130 = G__11140;
      count__11131 = G__11141;
      i__11132 = G__11142;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__11129);
      if (temp__4425__auto__) {
        var seq__11129__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__11129__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__11129__$1);
          var G__11143 = cljs.core.chunk_rest(seq__11129__$1);
          var G__11144 = c__5310__auto__;
          var G__11145 = cljs.core.count(c__5310__auto__);
          var G__11146 = 0;
          seq__11129 = G__11143;
          chunk__11130 = G__11144;
          count__11131 = G__11145;
          i__11132 = G__11146;
          continue;
        } else {
          var vec__11134 = cljs.core.first(seq__11129__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11134, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11134, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__11147 = cljs.core.next(seq__11129__$1);
          var G__11148 = null;
          var G__11149 = 0;
          var G__11150 = 0;
          seq__11129 = G__11147;
          chunk__11130 = G__11148;
          count__11131 = G__11149;
          i__11132 = G__11150;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null, coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__11135 = k;
        var G__11136 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__11135, G__11136) : self__.comp.call(null, G__11135, G__11136);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__11151 = t.left;
          t = G__11151;
          continue;
        } else {
          var G__11152 = t.right;
          t = G__11152;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__11153 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__11154 = cljs.core.next(es);
          ret = G__11153;
          es = G__11154;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__11155 = null;
  var G__11155__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11155__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11155 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11155__2.call(this, self__, k);
      case 3:
        return G__11155__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11155.cljs$core$IFn$_invoke$arity$2 = G__11155__2;
  G__11155.cljs$core$IFn$_invoke$arity$3 = G__11155__3;
  return G__11155;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args11128) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11128)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__11137 = k;
          var G__11138 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__11137, G__11138) : self__.comp.call(null, G__11137, G__11138);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__11156 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__11157 = t.left;
              stack = G__11156;
              t = G__11157;
              continue;
            } else {
              var G__11158 = stack;
              var G__11159 = t.right;
              stack = G__11158;
              t = G__11159;
              continue;
            }
          } else {
            if (c > 0) {
              var G__11160 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__11161 = t.right;
              stack = G__11160;
              t = G__11161;
              continue;
            } else {
              var G__11162 = stack;
              var G__11163 = t.left;
              stack = G__11162;
              t = G__11163;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null, entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.hash_map = function cljs$core$hash_map() {
  var args__5572__auto__ = [];
  var len__5565__auto___11165 = arguments.length;
  var i__5566__auto___11166 = 0;
  while (true) {
    if (i__5566__auto___11166 < len__5565__auto___11165) {
      args__5572__auto__.push(arguments[i__5566__auto___11166]);
      var G__11167 = i__5566__auto___11166 + 1;
      i__5566__auto___11166 = G__11167;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__11168 = cljs.core.nnext(in$);
      var G__11169 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__11168;
      out = G__11169;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq11164) {
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11164));
};
cljs.core.array_map = function cljs$core$array_map() {
  var args__5572__auto__ = [];
  var len__5565__auto___11171 = arguments.length;
  var i__5566__auto___11172 = 0;
  while (true) {
    if (i__5566__auto___11172 < len__5565__auto___11171) {
      args__5572__auto__.push(arguments[i__5566__auto___11172]);
      var G__11173 = i__5566__auto___11172 + 1;
      i__5566__auto___11172 = G__11173;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.fromArray(arr, true, false);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq11170) {
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11170));
};
cljs.core.obj_map = function cljs$core$obj_map() {
  var args__5572__auto__ = [];
  var len__5565__auto___11177 = arguments.length;
  var i__5566__auto___11178 = 0;
  while (true) {
    if (i__5566__auto___11178 < len__5565__auto___11177) {
      args__5572__auto__.push(arguments[i__5566__auto___11178]);
      var G__11179 = i__5566__auto___11178 + 1;
      i__5566__auto___11178 = G__11179;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
      var G__11180 = cljs.core.nnext(kvs);
      kvs = G__11180;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq11174) {
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11174));
};
cljs.core.sorted_map = function cljs$core$sorted_map() {
  var args__5572__auto__ = [];
  var len__5565__auto___11182 = arguments.length;
  var i__5566__auto___11183 = 0;
  while (true) {
    if (i__5566__auto___11183 < len__5565__auto___11182) {
      args__5572__auto__.push(arguments[i__5566__auto___11183]);
      var G__11184 = i__5566__auto___11183 + 1;
      i__5566__auto___11183 = G__11184;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__11185 = cljs.core.nnext(in$);
      var G__11186 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__11185;
      out = G__11186;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq11181) {
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11181));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by() {
  var args__5572__auto__ = [];
  var len__5565__auto___11189 = arguments.length;
  var i__5566__auto___11190 = 0;
  while (true) {
    if (i__5566__auto___11190 < len__5565__auto___11189) {
      args__5572__auto__.push(arguments[i__5566__auto___11190]);
      var G__11191 = i__5566__auto___11190 + 1;
      i__5566__auto___11190 = G__11191;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__11192 = cljs.core.nnext(in$);
      var G__11193 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__11192;
      out = G__11193;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq11187) {
  var G__11188 = cljs.core.first(seq11187);
  var seq11187__$1 = cljs.core.next(seq11187);
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(G__11188, seq11187__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.keys = function cljs$core$keys(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.vals = function cljs$core$vals(hash_map) {
  var temp__4425__auto__ = cljs.core.seq(hash_map);
  if (temp__4425__auto__) {
    var mseq = temp__4425__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge() {
  var args__5572__auto__ = [];
  var len__5565__auto___11201 = arguments.length;
  var i__5566__auto___11202 = 0;
  while (true) {
    if (i__5566__auto___11202 < len__5565__auto___11201) {
      args__5572__auto__.push(arguments[i__5566__auto___11202]);
      var G__11203 = i__5566__auto___11202 + 1;
      i__5566__auto___11202 = G__11203;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__11198_SHARP_, p2__11199_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__4526__auto__ = p1__11198_SHARP_;
        if (cljs.core.truth_(or__4526__auto__)) {
          return or__4526__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__11199_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq11200) {
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11200));
};
cljs.core.merge_with = function cljs$core$merge_with() {
  var args__5572__auto__ = [];
  var len__5565__auto___11208 = arguments.length;
  var i__5566__auto___11209 = 0;
  while (true) {
    if (i__5566__auto___11209 < len__5565__auto___11208) {
      args__5572__auto__.push(arguments[i__5566__auto___11209]);
      var G__11210 = i__5566__auto___11209 + 1;
      i__5566__auto___11209 = G__11210;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.first(e);
      var v = cljs.core.second(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__11206 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__11207 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11206, G__11207) : f.call(null, G__11206, G__11207);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(merge_entry) {
      return function(m1, m2) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
          var or__4526__auto__ = m1;
          if (cljs.core.truth_(or__4526__auto__)) {
            return or__4526__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), cljs.core.seq(m2));
      };
    }(merge_entry);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq11204) {
  var G__11205 = cljs.core.first(seq11204);
  var seq11204__$1 = cljs.core.next(seq11204);
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(G__11205, seq11204__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__11211 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__11212 = cljs.core.next(keys);
      ret = G__11211;
      keys = G__11212;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().tail[0];
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11215 = cljs.core.seq(coll);
  var chunk__11216 = null;
  var count__11217 = 0;
  var i__11218 = 0;
  while (true) {
    if (i__11218 < count__11217) {
      var vec__11219 = chunk__11216.cljs$core$IIndexed$_nth$arity$2(null, i__11218);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11219, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11219, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__11221 = seq__11215;
      var G__11222 = chunk__11216;
      var G__11223 = count__11217;
      var G__11224 = i__11218 + 1;
      seq__11215 = G__11221;
      chunk__11216 = G__11222;
      count__11217 = G__11223;
      i__11218 = G__11224;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__11215);
      if (temp__4425__auto__) {
        var seq__11215__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__11215__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__11215__$1);
          var G__11225 = cljs.core.chunk_rest(seq__11215__$1);
          var G__11226 = c__5310__auto__;
          var G__11227 = cljs.core.count(c__5310__auto__);
          var G__11228 = 0;
          seq__11215 = G__11225;
          chunk__11216 = G__11226;
          count__11217 = G__11227;
          i__11218 = G__11228;
          continue;
        } else {
          var vec__11220 = cljs.core.first(seq__11215__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11220, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11220, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__11229 = cljs.core.next(seq__11215__$1);
          var G__11230 = null;
          var G__11231 = 0;
          var G__11232 = 0;
          seq__11215 = G__11229;
          chunk__11216 = G__11230;
          count__11217 = G__11231;
          i__11218 = G__11232;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__11213_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__11213_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__11233 = null;
  var G__11233__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11233__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11233 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11233__2.call(this, self__, k);
      case 3:
        return G__11233__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11233.cljs$core$IFn$_invoke$arity$2 = G__11233__2;
  G__11233.cljs$core$IFn$_invoke$arity$3 = G__11233__3;
  return G__11233;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args11214) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11214)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__11234 = i + 1;
        var G__11235 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__11234;
        out = G__11235;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__11236 = i + 1;
        var G__11237 = cljs.core._conj_BANG_(out, items[i]);
        i = G__11236;
        out = G__11237;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__11239 = null;
  var G__11239__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__11239__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__11239 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11239__2.call(this, self__, k);
      case 3:
        return G__11239__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11239.cljs$core$IFn$_invoke$arity$2 = G__11239__2;
  G__11239.cljs$core$IFn$_invoke$arity$3 = G__11239__3;
  return G__11239;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args11238) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11238)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__11242 = cljs.core.seq(coll);
  var chunk__11243 = null;
  var count__11244 = 0;
  var i__11245 = 0;
  while (true) {
    if (i__11245 < count__11244) {
      var vec__11246 = chunk__11243.cljs$core$IIndexed$_nth$arity$2(null, i__11245);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11246, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11246, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__11248 = seq__11242;
      var G__11249 = chunk__11243;
      var G__11250 = count__11244;
      var G__11251 = i__11245 + 1;
      seq__11242 = G__11248;
      chunk__11243 = G__11249;
      count__11244 = G__11250;
      i__11245 = G__11251;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__11242);
      if (temp__4425__auto__) {
        var seq__11242__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__11242__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__11242__$1);
          var G__11252 = cljs.core.chunk_rest(seq__11242__$1);
          var G__11253 = c__5310__auto__;
          var G__11254 = cljs.core.count(c__5310__auto__);
          var G__11255 = 0;
          seq__11242 = G__11252;
          chunk__11243 = G__11253;
          count__11244 = G__11254;
          i__11245 = G__11255;
          continue;
        } else {
          var vec__11247 = cljs.core.first(seq__11242__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11247, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11247, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__11256 = cljs.core.next(seq__11242__$1);
          var G__11257 = null;
          var G__11258 = 0;
          var G__11259 = 0;
          seq__11242 = G__11256;
          chunk__11243 = G__11257;
          count__11244 = G__11258;
          i__11245 = G__11259;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__11240_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__11240_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__11260 = null;
  var G__11260__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__11260__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__11260 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11260__2.call(this, self__, k);
      case 3:
        return G__11260__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11260.cljs$core$IFn$_invoke$arity$2 = G__11260__2;
  G__11260.cljs$core$IFn$_invoke$arity$3 = G__11260__3;
  return G__11260;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args11241) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11241)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__5404__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__5404__auto__.length) {
        var G__11261 = i + 1;
        var G__11262 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__11261;
        res = G__11262;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__11263 = cljs.core.next(in$__$1);
          var G__11264 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__11263;
          out = G__11264;
          continue;
        } else {
          return cljs.core.persistent_BANG_(out);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set() {
  var args11265 = [];
  var len__5565__auto___11269 = arguments.length;
  var i__5566__auto___11270 = 0;
  while (true) {
    if (i__5566__auto___11270 < len__5565__auto___11269) {
      args11265.push(arguments[i__5566__auto___11270]);
      var G__11271 = i__5566__auto___11270 + 1;
      i__5566__auto___11270 = G__11271;
      continue;
    } else {
    }
    break;
  }
  var G__11268 = args11265.length;
  switch(G__11268) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args11265.slice(0), 0);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5584__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq11266) {
  return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11266));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set() {
  var args__5572__auto__ = [];
  var len__5565__auto___11274 = arguments.length;
  var i__5566__auto___11275 = 0;
  while (true) {
    if (i__5566__auto___11275 < len__5565__auto___11274) {
      args__5572__auto__.push(arguments[i__5566__auto___11275]);
      var G__11276 = i__5566__auto___11275 + 1;
      i__5566__auto___11275 = G__11276;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq11273) {
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11273));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by() {
  var args__5572__auto__ = [];
  var len__5565__auto___11279 = arguments.length;
  var i__5566__auto___11280 = 0;
  while (true) {
    if (i__5566__auto___11280 < len__5565__auto___11279) {
      args__5572__auto__.push(arguments[i__5566__auto___11280]);
      var G__11281 = i__5566__auto___11280 + 1;
      i__5566__auto___11280 = G__11281;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq11277) {
  var G__11278 = cljs.core.first(seq11277);
  var seq11277__$1 = cljs.core.next(seq11277);
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(G__11278, seq11277__$1);
};
cljs.core.replace = function cljs$core$replace() {
  var args11284 = [];
  var len__5565__auto___11287 = arguments.length;
  var i__5566__auto___11288 = 0;
  while (true) {
    if (i__5566__auto___11288 < len__5565__auto___11287) {
      args11284.push(arguments[i__5566__auto___11288]);
      var G__11289 = i__5566__auto___11288 + 1;
      i__5566__auto___11288 = G__11289;
      continue;
    } else {
    }
    break;
  }
  var G__11286 = args11284.length;
  switch(G__11286) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11284.length)].join(""));;
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__11282_SHARP_) {
    var temp__4423__auto__ = cljs.core.find(smap, p1__11282_SHARP_);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var e = temp__4423__auto__;
      return cljs.core.val(e);
    } else {
      return p1__11282_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
      return function(v, i) {
        var temp__4423__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
        if (cljs.core.truth_(temp__4423__auto__)) {
          var e = temp__4423__auto__;
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
        } else {
          return v;
        }
      };
    }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__11283_SHARP_) {
      var temp__4423__auto__ = cljs.core.find(smap, p1__11283_SHARP_);
      if (cljs.core.truth_(temp__4423__auto__)) {
        var e = temp__4423__auto__;
        return cljs.core.second(e);
      } else {
        return p1__11283_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct() {
  var args11291 = [];
  var len__5565__auto___11300 = arguments.length;
  var i__5566__auto___11301 = 0;
  while (true) {
    if (i__5566__auto___11301 < len__5565__auto___11300) {
      args11291.push(arguments[i__5566__auto___11301]);
      var G__11302 = i__5566__auto___11301 + 1;
      i__5566__auto___11301 = G__11302;
      continue;
    } else {
    }
    break;
  }
  var G__11293 = args11291.length;
  switch(G__11293) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11291.length)].join(""));;
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function(seen) {
      return function() {
        var G__11304 = null;
        var G__11304__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__11304__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__11304__2 = function(result, input) {
          if (cljs.core.contains_QMARK_(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(seen) : cljs.core.deref.call(null, seen), input)) {
            return result;
          } else {
            cljs.core._vreset_BANG_(seen, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core._deref(seen), input));
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__11304 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11304__0.call(this);
            case 1:
              return G__11304__1.call(this, result);
            case 2:
              return G__11304__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11304.cljs$core$IFn$_invoke$arity$0 = G__11304__0;
        G__11304.cljs$core$IFn$_invoke$arity$1 = G__11304__1;
        G__11304.cljs$core$IFn$_invoke$arity$2 = G__11304__2;
        return G__11304;
      }();
    }(seen);
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      return function(p__11298, seen__$1) {
        while (true) {
          var vec__11299 = p__11298;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11299, 0, null);
          var xs__$1 = vec__11299;
          var temp__4425__auto__ = cljs.core.seq(xs__$1);
          if (temp__4425__auto__) {
            var s = temp__4425__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__11305 = cljs.core.rest(s);
              var G__11306 = seen__$1;
              p__11298 = G__11305;
              seen__$1 = G__11306;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      }.call(null, xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__11307 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__11308 = cljs.core.next(s__$1);
      ret = G__11307;
      s__$1 = G__11308;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__11311 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__11312 = cljs.core.next(ks);
      var G__11313 = cljs.core.next(vs);
      map = G__11311;
      ks = G__11312;
      vs = G__11313;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key() {
  var args11316 = [];
  var len__5565__auto___11323 = arguments.length;
  var i__5566__auto___11324 = 0;
  while (true) {
    if (i__5566__auto___11324 < len__5565__auto___11323) {
      args11316.push(arguments[i__5566__auto___11324]);
      var G__11325 = i__5566__auto___11324 + 1;
      i__5566__auto___11324 = G__11325;
      continue;
    } else {
    }
    break;
  }
  var G__11322 = args11316.length;
  switch(G__11322) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args11316.slice(3), 0);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__11314_SHARP_, p2__11315_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__11314_SHARP_, p2__11315_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq11317) {
  var G__11318 = cljs.core.first(seq11317);
  var seq11317__$1 = cljs.core.next(seq11317);
  var G__11319 = cljs.core.first(seq11317__$1);
  var seq11317__$2 = cljs.core.next(seq11317__$1);
  var G__11320 = cljs.core.first(seq11317__$2);
  var seq11317__$3 = cljs.core.next(seq11317__$2);
  return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(G__11318, G__11319, G__11320, seq11317__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key() {
  var args11329 = [];
  var len__5565__auto___11336 = arguments.length;
  var i__5566__auto___11337 = 0;
  while (true) {
    if (i__5566__auto___11337 < len__5565__auto___11336) {
      args11329.push(arguments[i__5566__auto___11337]);
      var G__11338 = i__5566__auto___11337 + 1;
      i__5566__auto___11337 = G__11338;
      continue;
    } else {
    }
    break;
  }
  var G__11335 = args11329.length;
  switch(G__11335) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args11329.slice(3), 0);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__11327_SHARP_, p2__11328_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__11327_SHARP_, p2__11328_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq11330) {
  var G__11331 = cljs.core.first(seq11330);
  var seq11330__$1 = cljs.core.next(seq11330);
  var G__11332 = cljs.core.first(seq11330__$1);
  var seq11330__$2 = cljs.core.next(seq11330__$1);
  var G__11333 = cljs.core.first(seq11330__$2);
  var seq11330__$3 = cljs.core.next(seq11330__$2);
  return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(G__11331, G__11332, G__11333, seq11330__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all() {
  var args11340 = [];
  var len__5565__auto___11343 = arguments.length;
  var i__5566__auto___11344 = 0;
  while (true) {
    if (i__5566__auto___11344 < len__5565__auto___11343) {
      args11340.push(arguments[i__5566__auto___11344]);
      var G__11345 = i__5566__auto___11344 + 1;
      i__5566__auto___11344 = G__11345;
      continue;
    } else {
    }
    break;
  }
  var G__11342 = args11340.length;
  switch(G__11342) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11340.length)].join(""));;
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function(a) {
      return function() {
        var G__11347 = null;
        var G__11347__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__11347__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__11347__2 = function(result, input) {
          a.add(input);
          if (n === a.size()) {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          } else {
            return result;
          }
        };
        G__11347 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11347__0.call(this);
            case 1:
              return G__11347__1.call(this, result);
            case 2:
              return G__11347__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11347.cljs$core$IFn$_invoke$arity$0 = G__11347__0;
        G__11347.cljs$core$IFn$_invoke$arity$1 = G__11347__1;
        G__11347.cljs$core$IFn$_invoke$arity$2 = G__11347__2;
        return G__11347;
      }();
    }(a);
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while() {
  var args11348 = [];
  var len__5565__auto___11352 = arguments.length;
  var i__5566__auto___11353 = 0;
  while (true) {
    if (i__5566__auto___11353 < len__5565__auto___11352) {
      args11348.push(arguments[i__5566__auto___11353]);
      var G__11354 = i__5566__auto___11353 + 1;
      i__5566__auto___11353 = G__11354;
      continue;
    } else {
    }
    break;
  }
  var G__11350 = args11348.length;
  switch(G__11350) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11348.length)].join(""));;
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__11356 = null;
      var G__11356__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__11356__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__11356__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__11356 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__11356__0.call(this);
          case 1:
            return G__11356__1.call(this, result);
          case 2:
            return G__11356__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11356.cljs$core$IFn$_invoke$arity$0 = G__11356__0;
      G__11356.cljs$core$IFn$_invoke$arity$1 = G__11356__1;
      G__11356.cljs$core$IFn$_invoke$arity$2 = G__11356__2;
      return G__11356;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      if (cljs.core.truth_(function() {
        var G__11351 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11351) : pred.call(null, G__11351);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__11365 = function() {
      var G__11367 = cljs.core._entry_key(sc, e);
      var G__11368 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__11367, G__11368) : comp.call(null, G__11367, G__11368);
    }();
    var G__11366 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__11365, G__11366) : test.call(null, G__11365, G__11366);
  };
};
cljs.core.subseq = function cljs$core$subseq() {
  var args11369 = [];
  var len__5565__auto___11374 = arguments.length;
  var i__5566__auto___11375 = 0;
  while (true) {
    if (i__5566__auto___11375 < len__5565__auto___11374) {
      args11369.push(arguments[i__5566__auto___11375]);
      var G__11376 = i__5566__auto___11375 + 1;
      i__5566__auto___11375 = G__11376;
      continue;
    } else {
    }
    break;
  }
  var G__11371 = args11369.length;
  switch(G__11371) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11369.length)].join(""));;
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__11372 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11372, 0, null);
      var s = vec__11372;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__11373 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11373, 0, null);
    var s = vec__11373;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq() {
  var args11378 = [];
  var len__5565__auto___11383 = arguments.length;
  var i__5566__auto___11384 = 0;
  while (true) {
    if (i__5566__auto___11384 < len__5565__auto___11383) {
      args11378.push(arguments[i__5566__auto___11384]);
      var G__11385 = i__5566__auto___11384 + 1;
      i__5566__auto___11384 = G__11385;
      continue;
    } else {
    }
    break;
  }
  var G__11380 = args11378.length;
  switch(G__11380) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11378.length)].join(""));;
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
    var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__11381 = temp__4425__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11381, 0, null);
      var s = vec__11381;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__4425__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var vec__11382 = temp__4425__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11382, 0, null);
    var s = vec__11382;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__11387 = (self__.end - self__.start) / self__.step;
    return Math.ceil(G__11387);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(ret__$1) : cljs.core.deref.call(null, ret__$1);
      } else {
        var G__11388 = i + self__.step;
        var G__11389 = ret__$1;
        i = G__11388;
        ret = G__11389;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.range = function cljs$core$range() {
  var args11390 = [];
  var len__5565__auto___11393 = arguments.length;
  var i__5566__auto___11394 = 0;
  while (true) {
    if (i__5566__auto___11394 < len__5565__auto___11393) {
      args11390.push(arguments[i__5566__auto___11394]);
      var G__11395 = i__5566__auto___11394 + 1;
      i__5566__auto___11394 = G__11395;
      continue;
    } else {
    }
    break;
  }
  var G__11392 = args11390.length;
  switch(G__11392) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11390.length)].join(""));;
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  return new cljs.core.Range(null, start, end, step, null);
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth() {
  var args11397 = [];
  var len__5565__auto___11402 = arguments.length;
  var i__5566__auto___11403 = 0;
  while (true) {
    if (i__5566__auto___11403 < len__5565__auto___11402) {
      args11397.push(arguments[i__5566__auto___11403]);
      var G__11404 = i__5566__auto___11403 + 1;
      i__5566__auto___11403 = G__11404;
      continue;
    } else {
    }
    break;
  }
  var G__11399 = args11397.length;
  switch(G__11399) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11397.length)].join(""));;
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__11400 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__11400) : cljs.core.pr_str.call(null, G__11400);
    }())].join(""));
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function(ia) {
      return function() {
        var G__11406 = null;
        var G__11406__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__11406__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__11406__2 = function(result, input) {
          var i = cljs.core._vreset_BANG_(ia, cljs.core._deref(ia) + 1);
          if (cljs.core.rem(i, n) === 0) {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          } else {
            return result;
          }
        };
        G__11406 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11406__0.call(this);
            case 1:
              return G__11406__1.call(this, result);
            case 2:
              return G__11406__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11406.cljs$core$IFn$_invoke$arity$0 = G__11406__0;
        G__11406.cljs$core$IFn$_invoke$arity$1 = G__11406__1;
        G__11406.cljs$core$IFn$_invoke$arity$2 = G__11406__2;
        return G__11406;
      }();
    }(ia);
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(function() {
      var G__11401 = cljs.core.list(new cljs.core.Symbol(null, "number?", "number?", -1747282210, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null));
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__11401) : cljs.core.pr_str.call(null, G__11401);
    }())].join(""));
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by() {
  var args11408 = [];
  var len__5565__auto___11411 = arguments.length;
  var i__5566__auto___11412 = 0;
  while (true) {
    if (i__5566__auto___11412 < len__5565__auto___11411) {
      args11408.push(arguments[i__5566__auto___11412]);
      var G__11413 = i__5566__auto___11412 + 1;
      i__5566__auto___11412 = G__11413;
      continue;
    } else {
    }
    break;
  }
  var G__11410 = args11408.length;
  switch(G__11410) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11408.length)].join(""));;
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(a, pa) {
      return function() {
        var G__11415 = null;
        var G__11415__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__11415__1 = function(result) {
          var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
          }();
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
        };
        var G__11415__2 = function(result, input) {
          var pval = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
          cljs.core.vreset_BANG_(pa, val);
          if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
            a.add(input);
            return result;
          } else {
            var v = cljs.core.vec(a.toArray());
            a.clear();
            var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
            if (cljs.core.reduced_QMARK_(ret)) {
            } else {
              a.add(input);
            }
            return ret;
          }
        };
        G__11415 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11415__0.call(this);
            case 1:
              return G__11415__1.call(this, result);
            case 2:
              return G__11415__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11415.cljs$core$IFn$_invoke$arity$0 = G__11415__0;
        G__11415.cljs$core$IFn$_invoke$arity$1 = G__11415__1;
        G__11415.cljs$core$IFn$_invoke$arity$2 = G__11415__2;
        return G__11415;
      }();
    }(a, pa);
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4425__auto__) {
        return function(p1__11407_SHARP_) {
          return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__11407_SHARP_) : f.call(null, p1__11407_SHARP_));
        };
      }(fst, fv, s, temp__4425__auto__), cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions() {
  var args11416 = [];
  var len__5565__auto___11421 = arguments.length;
  var i__5566__auto___11422 = 0;
  while (true) {
    if (i__5566__auto___11422 < len__5565__auto___11421) {
      args11416.push(arguments[i__5566__auto___11422]);
      var G__11423 = i__5566__auto___11422 + 1;
      i__5566__auto___11422 = G__11423;
      continue;
    } else {
    }
    break;
  }
  var G__11418 = args11416.length;
  switch(G__11418) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11416.length)].join(""));;
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4423__auto__ = cljs.core.seq(coll);
    if (temp__4423__auto__) {
      var s = temp__4423__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
    var temp__4425__auto__ = cljs.core.seq(coll);
    if (temp__4425__auto__) {
      var s = temp__4425__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
        var G__11419 = init;
        var G__11420 = cljs.core.first(s);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11419, G__11420) : f.call(null, G__11419, G__11420);
      }(), cljs.core.rest(s));
    } else {
      return null;
    }
  }, null, null));
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt() {
  var args11435 = [];
  var len__5565__auto___11442 = arguments.length;
  var i__5566__auto___11443 = 0;
  while (true) {
    if (i__5566__auto___11443 < len__5565__auto___11442) {
      args11435.push(arguments[i__5566__auto___11443]);
      var G__11444 = i__5566__auto___11443 + 1;
      i__5566__auto___11443 = G__11444;
      continue;
    } else {
    }
    break;
  }
  var G__11441 = args11435.length;
  switch(G__11441) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args11435.slice(3), 0);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__5584__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__11446 = null;
    var G__11446__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__11446__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__11446__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__11446__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__11446__4 = function() {
      var G__11447__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__11447 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11448__i = 0, G__11448__a = new Array(arguments.length - 3);
          while (G__11448__i < G__11448__a.length) {
            G__11448__a[G__11448__i] = arguments[G__11448__i + 3];
            ++G__11448__i;
          }
          args = new cljs.core.IndexedSeq(G__11448__a, 0);
        }
        return G__11447__delegate.call(this, x, y, z, args);
      };
      G__11447.cljs$lang$maxFixedArity = 3;
      G__11447.cljs$lang$applyTo = function(arglist__11449) {
        var x = cljs.core.first(arglist__11449);
        arglist__11449 = cljs.core.next(arglist__11449);
        var y = cljs.core.first(arglist__11449);
        arglist__11449 = cljs.core.next(arglist__11449);
        var z = cljs.core.first(arglist__11449);
        var args = cljs.core.rest(arglist__11449);
        return G__11447__delegate(x, y, z, args);
      };
      G__11447.cljs$core$IFn$_invoke$arity$variadic = G__11447__delegate;
      return G__11447;
    }();
    G__11446 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__11446__0.call(this);
        case 1:
          return G__11446__1.call(this, x);
        case 2:
          return G__11446__2.call(this, x, y);
        case 3:
          return G__11446__3.call(this, x, y, z);
        default:
          var G__11450 = null;
          if (arguments.length > 3) {
            var G__11451__i = 0, G__11451__a = new Array(arguments.length - 3);
            while (G__11451__i < G__11451__a.length) {
              G__11451__a[G__11451__i] = arguments[G__11451__i + 3];
              ++G__11451__i;
            }
            G__11450 = new cljs.core.IndexedSeq(G__11451__a, 0);
          }
          return G__11446__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11450);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11446.cljs$lang$maxFixedArity = 3;
    G__11446.cljs$lang$applyTo = G__11446__4.cljs$lang$applyTo;
    G__11446.cljs$core$IFn$_invoke$arity$0 = G__11446__0;
    G__11446.cljs$core$IFn$_invoke$arity$1 = G__11446__1;
    G__11446.cljs$core$IFn$_invoke$arity$2 = G__11446__2;
    G__11446.cljs$core$IFn$_invoke$arity$3 = G__11446__3;
    G__11446.cljs$core$IFn$_invoke$arity$variadic = G__11446__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__11446;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__11452 = null;
    var G__11452__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__11452__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__11452__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__11452__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__11452__4 = function() {
      var G__11453__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__11453 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11454__i = 0, G__11454__a = new Array(arguments.length - 3);
          while (G__11454__i < G__11454__a.length) {
            G__11454__a[G__11454__i] = arguments[G__11454__i + 3];
            ++G__11454__i;
          }
          args = new cljs.core.IndexedSeq(G__11454__a, 0);
        }
        return G__11453__delegate.call(this, x, y, z, args);
      };
      G__11453.cljs$lang$maxFixedArity = 3;
      G__11453.cljs$lang$applyTo = function(arglist__11455) {
        var x = cljs.core.first(arglist__11455);
        arglist__11455 = cljs.core.next(arglist__11455);
        var y = cljs.core.first(arglist__11455);
        arglist__11455 = cljs.core.next(arglist__11455);
        var z = cljs.core.first(arglist__11455);
        var args = cljs.core.rest(arglist__11455);
        return G__11453__delegate(x, y, z, args);
      };
      G__11453.cljs$core$IFn$_invoke$arity$variadic = G__11453__delegate;
      return G__11453;
    }();
    G__11452 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__11452__0.call(this);
        case 1:
          return G__11452__1.call(this, x);
        case 2:
          return G__11452__2.call(this, x, y);
        case 3:
          return G__11452__3.call(this, x, y, z);
        default:
          var G__11456 = null;
          if (arguments.length > 3) {
            var G__11457__i = 0, G__11457__a = new Array(arguments.length - 3);
            while (G__11457__i < G__11457__a.length) {
              G__11457__a[G__11457__i] = arguments[G__11457__i + 3];
              ++G__11457__i;
            }
            G__11456 = new cljs.core.IndexedSeq(G__11457__a, 0);
          }
          return G__11452__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11456);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11452.cljs$lang$maxFixedArity = 3;
    G__11452.cljs$lang$applyTo = G__11452__4.cljs$lang$applyTo;
    G__11452.cljs$core$IFn$_invoke$arity$0 = G__11452__0;
    G__11452.cljs$core$IFn$_invoke$arity$1 = G__11452__1;
    G__11452.cljs$core$IFn$_invoke$arity$2 = G__11452__2;
    G__11452.cljs$core$IFn$_invoke$arity$3 = G__11452__3;
    G__11452.cljs$core$IFn$_invoke$arity$variadic = G__11452__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__11452;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__11458 = null;
    var G__11458__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__11458__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__11458__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__11458__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__11458__4 = function() {
      var G__11459__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__11459 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__11460__i = 0, G__11460__a = new Array(arguments.length - 3);
          while (G__11460__i < G__11460__a.length) {
            G__11460__a[G__11460__i] = arguments[G__11460__i + 3];
            ++G__11460__i;
          }
          args = new cljs.core.IndexedSeq(G__11460__a, 0);
        }
        return G__11459__delegate.call(this, x, y, z, args);
      };
      G__11459.cljs$lang$maxFixedArity = 3;
      G__11459.cljs$lang$applyTo = function(arglist__11461) {
        var x = cljs.core.first(arglist__11461);
        arglist__11461 = cljs.core.next(arglist__11461);
        var y = cljs.core.first(arglist__11461);
        arglist__11461 = cljs.core.next(arglist__11461);
        var z = cljs.core.first(arglist__11461);
        var args = cljs.core.rest(arglist__11461);
        return G__11459__delegate(x, y, z, args);
      };
      G__11459.cljs$core$IFn$_invoke$arity$variadic = G__11459__delegate;
      return G__11459;
    }();
    G__11458 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__11458__0.call(this);
        case 1:
          return G__11458__1.call(this, x);
        case 2:
          return G__11458__2.call(this, x, y);
        case 3:
          return G__11458__3.call(this, x, y, z);
        default:
          var G__11462 = null;
          if (arguments.length > 3) {
            var G__11463__i = 0, G__11463__a = new Array(arguments.length - 3);
            while (G__11463__i < G__11463__a.length) {
              G__11463__a[G__11463__i] = arguments[G__11463__i + 3];
              ++G__11463__i;
            }
            G__11462 = new cljs.core.IndexedSeq(G__11463__a, 0);
          }
          return G__11458__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11462);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11458.cljs$lang$maxFixedArity = 3;
    G__11458.cljs$lang$applyTo = G__11458__4.cljs$lang$applyTo;
    G__11458.cljs$core$IFn$_invoke$arity$0 = G__11458__0;
    G__11458.cljs$core$IFn$_invoke$arity$1 = G__11458__1;
    G__11458.cljs$core$IFn$_invoke$arity$2 = G__11458__2;
    G__11458.cljs$core$IFn$_invoke$arity$3 = G__11458__3;
    G__11458.cljs$core$IFn$_invoke$arity$variadic = G__11458__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__11458;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function(fs__$1) {
    return function() {
      var G__11464 = null;
      var G__11464__0 = function() {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__11425_SHARP_, p2__11426_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11425_SHARP_, p2__11426_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__11426_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__11426_SHARP_.call(null));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__11464__1 = function(x) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__11427_SHARP_, p2__11428_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11427_SHARP_, p2__11428_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__11428_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__11428_SHARP_.call(null, x));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__11464__2 = function(x, y) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__11429_SHARP_, p2__11430_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11429_SHARP_, p2__11430_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__11430_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__11430_SHARP_.call(null, x, y));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__11464__3 = function(x, y, z) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
          return function(p1__11431_SHARP_, p2__11432_SHARP_) {
            return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11431_SHARP_, p2__11432_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__11432_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__11432_SHARP_.call(null, x, y, z));
          };
        }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__11464__4 = function() {
        var G__11465__delegate = function(x, y, z, args) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
            return function(p1__11433_SHARP_, p2__11434_SHARP_) {
              return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11433_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__11434_SHARP_, x, y, z, args));
            };
          }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
        };
        var G__11465 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__11466__i = 0, G__11466__a = new Array(arguments.length - 3);
            while (G__11466__i < G__11466__a.length) {
              G__11466__a[G__11466__i] = arguments[G__11466__i + 3];
              ++G__11466__i;
            }
            args = new cljs.core.IndexedSeq(G__11466__a, 0);
          }
          return G__11465__delegate.call(this, x, y, z, args);
        };
        G__11465.cljs$lang$maxFixedArity = 3;
        G__11465.cljs$lang$applyTo = function(arglist__11467) {
          var x = cljs.core.first(arglist__11467);
          arglist__11467 = cljs.core.next(arglist__11467);
          var y = cljs.core.first(arglist__11467);
          arglist__11467 = cljs.core.next(arglist__11467);
          var z = cljs.core.first(arglist__11467);
          var args = cljs.core.rest(arglist__11467);
          return G__11465__delegate(x, y, z, args);
        };
        G__11465.cljs$core$IFn$_invoke$arity$variadic = G__11465__delegate;
        return G__11465;
      }();
      G__11464 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11464__0.call(this);
          case 1:
            return G__11464__1.call(this, x);
          case 2:
            return G__11464__2.call(this, x, y);
          case 3:
            return G__11464__3.call(this, x, y, z);
          default:
            var G__11468 = null;
            if (arguments.length > 3) {
              var G__11469__i = 0, G__11469__a = new Array(arguments.length - 3);
              while (G__11469__i < G__11469__a.length) {
                G__11469__a[G__11469__i] = arguments[G__11469__i + 3];
                ++G__11469__i;
              }
              G__11468 = new cljs.core.IndexedSeq(G__11469__a, 0);
            }
            return G__11464__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11468);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11464.cljs$lang$maxFixedArity = 3;
      G__11464.cljs$lang$applyTo = G__11464__4.cljs$lang$applyTo;
      G__11464.cljs$core$IFn$_invoke$arity$0 = G__11464__0;
      G__11464.cljs$core$IFn$_invoke$arity$1 = G__11464__1;
      G__11464.cljs$core$IFn$_invoke$arity$2 = G__11464__2;
      G__11464.cljs$core$IFn$_invoke$arity$3 = G__11464__3;
      G__11464.cljs$core$IFn$_invoke$arity$variadic = G__11464__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11464;
    }();
  }(fs__$1);
};
cljs.core.juxt.cljs$lang$applyTo = function(seq11436) {
  var G__11437 = cljs.core.first(seq11436);
  var seq11436__$1 = cljs.core.next(seq11436);
  var G__11438 = cljs.core.first(seq11436__$1);
  var seq11436__$2 = cljs.core.next(seq11436__$1);
  var G__11439 = cljs.core.first(seq11436__$2);
  var seq11436__$3 = cljs.core.next(seq11436__$2);
  return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(G__11437, G__11438, G__11439, seq11436__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun() {
  var args11470 = [];
  var len__5565__auto___11473 = arguments.length;
  var i__5566__auto___11474 = 0;
  while (true) {
    if (i__5566__auto___11474 < len__5565__auto___11473) {
      args11470.push(arguments[i__5566__auto___11474]);
      var G__11475 = i__5566__auto___11474 + 1;
      i__5566__auto___11474 = G__11475;
      continue;
    } else {
    }
    break;
  }
  var G__11472 = args11470.length;
  switch(G__11472) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11470.length)].join(""));;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var G__11477 = cljs.core.next(coll);
      coll = G__11477;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__11478 = n - 1;
      var G__11479 = cljs.core.next(coll);
      n = G__11478;
      coll = G__11479;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall() {
  var args11480 = [];
  var len__5565__auto___11483 = arguments.length;
  var i__5566__auto___11484 = 0;
  while (true) {
    if (i__5566__auto___11484 < len__5565__auto___11483) {
      args11480.push(arguments[i__5566__auto___11484]);
      var G__11485 = i__5566__auto___11484 + 1;
      i__5566__auto___11484 = G__11485;
      continue;
    } else {
    }
    break;
  }
  var G__11482 = args11480.length;
  switch(G__11482) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11480.length)].join(""));;
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? cljs$core$re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__11488 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11488, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11488, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, cljs.core.count(prefix));
    return new RegExp(pattern, function() {
      var or__4526__auto__ = flags;
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_11496 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4526__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4526__auto__)) {
              return or__4526__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__11497_11503 = cljs.core.first(coll);
          var G__11498_11504 = writer;
          var G__11499_11505 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11497_11503, G__11498_11504, G__11499_11505) : print_one.call(null, G__11497_11503, G__11498_11504, G__11499_11505);
        } else {
        }
        var coll_11506__$1 = cljs.core.next(coll);
        var n_11507 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_11506__$1 && (n_11507 == null || !(n_11507 === 0))) {
            cljs.core._write(writer, sep);
            var G__11500_11508 = cljs.core.first(coll_11506__$1);
            var G__11501_11509 = writer;
            var G__11502_11510 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11500_11508, G__11501_11509, G__11502_11510) : print_one.call(null, G__11500_11508, G__11501_11509, G__11502_11510);
            var G__11511 = cljs.core.next(coll_11506__$1);
            var G__11512 = n_11507 - 1;
            coll_11506__$1 = G__11511;
            n_11507 = G__11512;
            continue;
          } else {
            if (cljs.core.seq(coll_11506__$1) && n_11507 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4526__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4526__auto__)) {
                  return or__4526__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_11496;
  }
};
cljs.core.write_all = function cljs$core$write_all() {
  var args__5572__auto__ = [];
  var len__5565__auto___11519 = arguments.length;
  var i__5566__auto___11520 = 0;
  while (true) {
    if (i__5566__auto___11520 < len__5565__auto___11519) {
      args__5572__auto__.push(arguments[i__5566__auto___11520]);
      var G__11521 = i__5566__auto___11520 + 1;
      i__5566__auto___11520 = G__11521;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__11515 = cljs.core.seq(ss);
  var chunk__11516 = null;
  var count__11517 = 0;
  var i__11518 = 0;
  while (true) {
    if (i__11518 < count__11517) {
      var s = chunk__11516.cljs$core$IIndexed$_nth$arity$2(null, i__11518);
      cljs.core._write(writer, s);
      var G__11522 = seq__11515;
      var G__11523 = chunk__11516;
      var G__11524 = count__11517;
      var G__11525 = i__11518 + 1;
      seq__11515 = G__11522;
      chunk__11516 = G__11523;
      count__11517 = G__11524;
      i__11518 = G__11525;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__11515);
      if (temp__4425__auto__) {
        var seq__11515__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__11515__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__11515__$1);
          var G__11526 = cljs.core.chunk_rest(seq__11515__$1);
          var G__11527 = c__5310__auto__;
          var G__11528 = cljs.core.count(c__5310__auto__);
          var G__11529 = 0;
          seq__11515 = G__11526;
          chunk__11516 = G__11527;
          count__11517 = G__11528;
          i__11518 = G__11529;
          continue;
        } else {
          var s = cljs.core.first(seq__11515__$1);
          cljs.core._write(writer, s);
          var G__11530 = cljs.core.next(seq__11515__$1);
          var G__11531 = null;
          var G__11532 = 0;
          var G__11533 = 0;
          seq__11515 = G__11530;
          chunk__11516 = G__11531;
          count__11517 = G__11532;
          i__11518 = G__11533;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq11513) {
  var G__11514 = cljs.core.first(seq11513);
  var seq11513__$1 = cljs.core.next(seq11513);
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(G__11514, seq11513__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj11535 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj11535;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return [cljs.core.str('"'), cljs.core.str(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  var and__4514__auto__ = cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)));
  if (and__4514__auto__) {
    var and__4514__auto____$1 = !(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || obj.cljs$core$IMeta$ ? true : false : false;
    if (and__4514__auto____$1) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return and__4514__auto____$1;
    }
  } else {
    return and__4514__auto__;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      var G__11551_11560 = cljs.core.meta(obj);
      var G__11552_11561 = writer;
      var G__11553_11562 = opts;
      cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__11551_11560, G__11552_11561, G__11553_11562) : cljs.core.pr_writer.call(null, G__11551_11560, G__11552_11561, G__11553_11562);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
        return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
      } else {
        if (obj === true || obj === false || typeof obj === "number") {
          return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
        } else {
          if (cljs.core.object_QMARK_(obj)) {
            cljs.core._write(writer, "#js ");
            var G__11555 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
            }, cljs.core.js_keys(obj));
            var G__11556 = cljs.core.pr_writer;
            var G__11557 = writer;
            var G__11558 = opts;
            return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__11555, G__11556, G__11557, G__11558) : cljs.core.print_map.call(null, G__11555, G__11556, G__11557, G__11558);
          } else {
            if (cljs.core.array_QMARK_(obj)) {
              return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
            } else {
              if (goog.isString(obj)) {
                if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                  return cljs.core._write(writer, cljs.core.quote_string(obj));
                } else {
                  return cljs.core._write(writer, obj);
                }
              } else {
                if (goog.isFunction(obj)) {
                  var name = obj.name;
                  var name__$1 = cljs.core.truth_(function() {
                    var or__4526__auto__ = name == null;
                    if (or__4526__auto__) {
                      return or__4526__auto__;
                    } else {
                      return goog.string.isEmpty(name);
                    }
                  }()) ? "Function" : name;
                  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, ' "', [cljs.core.str(obj)].join(""), '"]'], 0));
                } else {
                  if (obj instanceof Date) {
                    var normalize = function(n, len) {
                      var ns = [cljs.core.str(n)].join("");
                      while (true) {
                        if (cljs.core.count(ns) < len) {
                          var G__11563 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                          ns = G__11563;
                          continue;
                        } else {
                          return ns;
                        }
                        break;
                      }
                    };
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                  } else {
                    if (cljs.core.regexp_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                    } else {
                      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || obj.cljs$core$IPrintWithWriter$ ? true : false : false) {
                        return cljs.core._pr_writer(obj, writer, opts);
                      } else {
                        if (cljs.core.truth_(obj.constructor.cljs$lang$ctorStr)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                        } else {
                          var name = obj.constructor.name;
                          var name__$1 = cljs.core.truth_(function() {
                            var or__4526__auto__ = name == null;
                            if (or__4526__auto__) {
                              return or__4526__auto__;
                            } else {
                              return goog.string.isEmpty(name);
                            }
                          }()) ? "Object" : name;
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#object[", name__$1, " ", [cljs.core.str(obj)].join(""), "]"], 0));
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var alt_impl = temp__4423__auto__;
    var G__11567 = obj;
    var G__11568 = writer;
    var G__11569 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__11567, G__11568, G__11569) : alt_impl.call(null, G__11567, G__11568, G__11569);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__11574 = cljs.core.seq(cljs.core.next(objs));
  var chunk__11575 = null;
  var count__11576 = 0;
  var i__11577 = 0;
  while (true) {
    if (i__11577 < count__11576) {
      var obj = chunk__11575.cljs$core$IIndexed$_nth$arity$2(null, i__11577);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__11578 = seq__11574;
      var G__11579 = chunk__11575;
      var G__11580 = count__11576;
      var G__11581 = i__11577 + 1;
      seq__11574 = G__11578;
      chunk__11575 = G__11579;
      count__11576 = G__11580;
      i__11577 = G__11581;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq(seq__11574);
      if (temp__4425__auto__) {
        var seq__11574__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__11574__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first(seq__11574__$1);
          var G__11582 = cljs.core.chunk_rest(seq__11574__$1);
          var G__11583 = c__5310__auto__;
          var G__11584 = cljs.core.count(c__5310__auto__);
          var G__11585 = 0;
          seq__11574 = G__11582;
          chunk__11575 = G__11583;
          count__11576 = G__11584;
          i__11577 = G__11585;
          continue;
        } else {
          var obj = cljs.core.first(seq__11574__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__11586 = cljs.core.next(seq__11574__$1);
          var G__11587 = null;
          var G__11588 = 0;
          var G__11589 = 0;
          seq__11574 = G__11586;
          chunk__11575 = G__11587;
          count__11576 = G__11588;
          i__11577 = G__11589;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return [cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return [cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline() {
  var args11590 = [];
  var len__5565__auto___11593 = arguments.length;
  var i__5566__auto___11594 = 0;
  while (true) {
    if (i__5566__auto___11594 < len__5565__auto___11593) {
      args11590.push(arguments[i__5566__auto___11594]);
      var G__11595 = i__5566__auto___11594 + 1;
      i__5566__auto___11594 = G__11595;
      continue;
    } else {
    }
    break;
  }
  var G__11592 = args11590.length;
  switch(G__11592) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11590.length)].join(""));;
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str() {
  var args__5572__auto__ = [];
  var len__5565__auto___11598 = arguments.length;
  var i__5566__auto___11599 = 0;
  while (true) {
    if (i__5566__auto___11599 < len__5565__auto___11598) {
      args__5572__auto__.push(arguments[i__5566__auto___11599]);
      var G__11600 = i__5566__auto___11599 + 1;
      i__5566__auto___11599 = G__11600;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq11597) {
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11597));
};
cljs.core.prn_str = function cljs$core$prn_str() {
  var args__5572__auto__ = [];
  var len__5565__auto___11602 = arguments.length;
  var i__5566__auto___11603 = 0;
  while (true) {
    if (i__5566__auto___11603 < len__5565__auto___11602) {
      args__5572__auto__.push(arguments[i__5566__auto___11603]);
      var G__11604 = i__5566__auto___11603 + 1;
      i__5566__auto___11603 = G__11604;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq11601) {
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11601));
};
cljs.core.pr = function cljs$core$pr() {
  var args__5572__auto__ = [];
  var len__5565__auto___11606 = arguments.length;
  var i__5566__auto___11607 = 0;
  while (true) {
    if (i__5566__auto___11607 < len__5565__auto___11606) {
      args__5572__auto__.push(arguments[i__5566__auto___11607]);
      var G__11608 = i__5566__auto___11607 + 1;
      i__5566__auto___11607 = G__11608;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq11605) {
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11605));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__11609__i = 0, G__11609__a = new Array(arguments.length - 0);
      while (G__11609__i < G__11609__a.length) {
        G__11609__a[G__11609__i] = arguments[G__11609__i + 0];
        ++G__11609__i;
      }
      objs = new cljs.core.IndexedSeq(G__11609__a, 0);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__11610) {
    var objs = cljs.core.seq(arglist__11610);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str() {
  var args__5572__auto__ = [];
  var len__5565__auto___11612 = arguments.length;
  var i__5566__auto___11613 = 0;
  while (true) {
    if (i__5566__auto___11613 < len__5565__auto___11612) {
      args__5572__auto__.push(arguments[i__5566__auto___11613]);
      var G__11614 = i__5566__auto___11613 + 1;
      i__5566__auto___11613 = G__11614;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq11611) {
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11611));
};
cljs.core.println = function cljs$core$println() {
  var args__5572__auto__ = [];
  var len__5565__auto___11616 = arguments.length;
  var i__5566__auto___11617 = 0;
  while (true) {
    if (i__5566__auto___11617 < len__5565__auto___11616) {
      args__5572__auto__.push(arguments[i__5566__auto___11617]);
      var G__11618 = i__5566__auto___11617 + 1;
      i__5566__auto___11617 = G__11618;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq11615) {
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11615));
};
cljs.core.println_str = function cljs$core$println_str() {
  var args__5572__auto__ = [];
  var len__5565__auto___11620 = arguments.length;
  var i__5566__auto___11621 = 0;
  while (true) {
    if (i__5566__auto___11621 < len__5565__auto___11620) {
      args__5572__auto__.push(arguments[i__5566__auto___11621]);
      var G__11622 = i__5566__auto___11621 + 1;
      i__5566__auto___11621 = G__11622;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq11619) {
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11619));
};
cljs.core.prn = function cljs$core$prn() {
  var args__5572__auto__ = [];
  var len__5565__auto___11624 = arguments.length;
  var i__5566__auto___11625 = 0;
  while (true) {
    if (i__5566__auto___11625 < len__5565__auto___11624) {
      args__5572__auto__.push(arguments[i__5566__auto___11625]);
      var G__11626 = i__5566__auto___11625 + 1;
      i__5566__auto___11625 = G__11626;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq11623) {
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11623));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__11633_11639 = cljs.core.key(e);
    var G__11634_11640 = w;
    var G__11635_11641 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11633_11639, G__11634_11640, G__11635_11641) : print_one.call(null, G__11633_11639, G__11634_11640, G__11635_11641);
    cljs.core._write(w, " ");
    var G__11636 = cljs.core.val(e);
    var G__11637 = w;
    var G__11638 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11636, G__11637, G__11638) : print_one.call(null, G__11636, G__11637, G__11638);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object [cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error([cljs.core.str("Cannot compare "), cljs.core.str(x__$1), cljs.core.str(" to "), cljs.core.str(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_() {
  var args__5572__auto__ = [];
  var len__5565__auto___11645 = arguments.length;
  var i__5566__auto___11646 = 0;
  while (true) {
    if (i__5566__auto___11646 < len__5565__auto___11645) {
      args__5572__auto__.push(arguments[i__5566__auto___11646]);
      var G__11647 = i__5566__auto___11646 + 1;
      i__5566__auto___11646 = G__11647;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 2 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(2), 0) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5573__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq11642) {
  var G__11643 = cljs.core.first(seq11642);
  var seq11642__$1 = cljs.core.next(seq11642);
  var G__11644 = cljs.core.first(seq11642__$1);
  var seq11642__$2 = cljs.core.next(seq11642__$1);
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__11643, G__11644, seq11642__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym() {
  var args11648 = [];
  var len__5565__auto___11651 = arguments.length;
  var i__5566__auto___11652 = 0;
  while (true) {
    if (i__5566__auto___11652 < len__5565__auto___11651) {
      args11648.push(arguments[i__5566__auto___11652]);
      var G__11653 = i__5566__auto___11652 + 1;
      i__5566__auto___11652 = G__11653;
      continue;
    } else {
    }
    break;
  }
  var G__11650 = args11648.length;
  switch(G__11650) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11648.length)].join(""));;
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0) : cljs.core.atom.call(null, 0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null, x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__11655_SHARP_, p2__11656_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__11655_SHARP_, p2__11656_SHARP_) : rf.call(null, p1__11655_SHARP_, p2__11656_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__11657 = null;
      var G__11657__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__11657__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__11657__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__11657 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__11657__0.call(this);
          case 1:
            return G__11657__1.call(this, result);
          case 2:
            return G__11657__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11657.cljs$core$IFn$_invoke$arity$0 = G__11657__0;
      G__11657.cljs$core$IFn$_invoke$arity$1 = G__11657__1;
      G__11657.cljs$core$IFn$_invoke$arity$2 = G__11657__2;
      return G__11657;
    }();
  }(rf1);
};
cljs.core.dedupe = function cljs$core$dedupe() {
  var args11658 = [];
  var len__5565__auto___11661 = arguments.length;
  var i__5566__auto___11662 = 0;
  while (true) {
    if (i__5566__auto___11662 < len__5565__auto___11661) {
      args11658.push(arguments[i__5566__auto___11662]);
      var G__11663 = i__5566__auto___11662 + 1;
      i__5566__auto___11662 = G__11663;
      continue;
    } else {
    }
    break;
  }
  var G__11660 = args11658.length;
  switch(G__11660) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11658.length)].join(""));;
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function(pa) {
      return function() {
        var G__11665 = null;
        var G__11665__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__11665__1 = function(result) {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        };
        var G__11665__2 = function(result, input) {
          var prior = cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(pa) : cljs.core.deref.call(null, pa);
          cljs.core.vreset_BANG_(pa, input);
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
            return result;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
          }
        };
        G__11665 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__11665__0.call(this);
            case 1:
              return G__11665__1.call(this, result);
            case 2:
              return G__11665__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__11665.cljs$core$IFn$_invoke$arity$0 = G__11665__0;
        G__11665.cljs$core$IFn$_invoke$arity$1 = G__11665__1;
        G__11665.cljs$core$IFn$_invoke$arity$2 = G__11665__2;
        return G__11665;
      }();
    }(pa);
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample() {
  var args11666 = [];
  var len__5565__auto___11669 = arguments.length;
  var i__5566__auto___11670 = 0;
  while (true) {
    if (i__5566__auto___11670 < len__5565__auto___11669) {
      args11666.push(arguments[i__5566__auto___11670]);
      var G__11671 = i__5566__auto___11670 + 1;
      i__5566__auto___11670 = G__11671;
      continue;
    } else {
    }
    break;
  }
  var G__11668 = args11666.length;
  switch(G__11668) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11666.length)].join(""));;
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__5501__auto__ = this;
  return cljs.core.es6_iterator(this__5501__auto__);
};
cljs.core.eduction = function cljs$core$eduction() {
  var args__5572__auto__ = [];
  var len__5565__auto___11674 = arguments.length;
  var i__5566__auto___11675 = 0;
  while (true) {
    if (i__5566__auto___11675 < len__5565__auto___11674) {
      args__5572__auto__.push(arguments[i__5566__auto___11675]);
      var G__11676 = i__5566__auto___11675 + 1;
      i__5566__auto___11675 = G__11676;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq11673) {
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11673));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__11678_SHARP_, p2__11677_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__11677_SHARP_) : proc.call(null, p2__11677_SHARP_);
  }, null, coll);
};
cljs.core.IEncodeJS = {};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__5162__auto__ = x == null ? null : x;
    var m__5163__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto__.call(null, x);
    } else {
      var m__5163__auto____$1 = cljs.core._clj__GT_js["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
      }
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__5162__auto__ = x == null ? null : x;
    var m__5163__auto__ = cljs.core._key__GT_js[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto__.call(null, x);
    } else {
      var m__5163__auto____$1 = cljs.core._key__GT_js["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(x) : m__5163__auto____$1.call(null, x);
      } else {
        throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
      }
    }
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(k) {
  if (!(k == null) ? false || k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(k) : cljs.core.clj__GT_js.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (!(x == null) ? false || x.cljs$core$IEncodeJS$ ? true : !x.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x)) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return [cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = {};
            var seq__11699_11709 = cljs.core.seq(x);
            var chunk__11700_11710 = null;
            var count__11701_11711 = 0;
            var i__11702_11712 = 0;
            while (true) {
              if (i__11702_11712 < count__11701_11711) {
                var vec__11703_11713 = chunk__11700_11710.cljs$core$IIndexed$_nth$arity$2(null, i__11702_11712);
                var k_11714 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11703_11713, 0, null);
                var v_11715 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11703_11713, 1, null);
                m[cljs.core.key__GT_js(k_11714)] = cljs$core$clj__GT_js(v_11715);
                var G__11716 = seq__11699_11709;
                var G__11717 = chunk__11700_11710;
                var G__11718 = count__11701_11711;
                var G__11719 = i__11702_11712 + 1;
                seq__11699_11709 = G__11716;
                chunk__11700_11710 = G__11717;
                count__11701_11711 = G__11718;
                i__11702_11712 = G__11719;
                continue;
              } else {
                var temp__4425__auto___11720 = cljs.core.seq(seq__11699_11709);
                if (temp__4425__auto___11720) {
                  var seq__11699_11721__$1 = temp__4425__auto___11720;
                  if (cljs.core.chunked_seq_QMARK_(seq__11699_11721__$1)) {
                    var c__5310__auto___11722 = cljs.core.chunk_first(seq__11699_11721__$1);
                    var G__11723 = cljs.core.chunk_rest(seq__11699_11721__$1);
                    var G__11724 = c__5310__auto___11722;
                    var G__11725 = cljs.core.count(c__5310__auto___11722);
                    var G__11726 = 0;
                    seq__11699_11709 = G__11723;
                    chunk__11700_11710 = G__11724;
                    count__11701_11711 = G__11725;
                    i__11702_11712 = G__11726;
                    continue;
                  } else {
                    var vec__11704_11727 = cljs.core.first(seq__11699_11721__$1);
                    var k_11728 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11704_11727, 0, null);
                    var v_11729 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11704_11727, 1, null);
                    m[cljs.core.key__GT_js(k_11728)] = cljs$core$clj__GT_js(v_11729);
                    var G__11730 = cljs.core.next(seq__11699_11721__$1);
                    var G__11731 = null;
                    var G__11732 = 0;
                    var G__11733 = 0;
                    seq__11699_11709 = G__11730;
                    chunk__11700_11710 = G__11731;
                    count__11701_11711 = G__11732;
                    i__11702_11712 = G__11733;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__11705_11734 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js, x));
              var chunk__11706_11735 = null;
              var count__11707_11736 = 0;
              var i__11708_11737 = 0;
              while (true) {
                if (i__11708_11737 < count__11707_11736) {
                  var x_11738__$1 = chunk__11706_11735.cljs$core$IIndexed$_nth$arity$2(null, i__11708_11737);
                  arr.push(x_11738__$1);
                  var G__11739 = seq__11705_11734;
                  var G__11740 = chunk__11706_11735;
                  var G__11741 = count__11707_11736;
                  var G__11742 = i__11708_11737 + 1;
                  seq__11705_11734 = G__11739;
                  chunk__11706_11735 = G__11740;
                  count__11707_11736 = G__11741;
                  i__11708_11737 = G__11742;
                  continue;
                } else {
                  var temp__4425__auto___11743 = cljs.core.seq(seq__11705_11734);
                  if (temp__4425__auto___11743) {
                    var seq__11705_11744__$1 = temp__4425__auto___11743;
                    if (cljs.core.chunked_seq_QMARK_(seq__11705_11744__$1)) {
                      var c__5310__auto___11745 = cljs.core.chunk_first(seq__11705_11744__$1);
                      var G__11746 = cljs.core.chunk_rest(seq__11705_11744__$1);
                      var G__11747 = c__5310__auto___11745;
                      var G__11748 = cljs.core.count(c__5310__auto___11745);
                      var G__11749 = 0;
                      seq__11705_11734 = G__11746;
                      chunk__11706_11735 = G__11747;
                      count__11707_11736 = G__11748;
                      i__11708_11737 = G__11749;
                      continue;
                    } else {
                      var x_11750__$1 = cljs.core.first(seq__11705_11744__$1);
                      arr.push(x_11750__$1);
                      var G__11751 = cljs.core.next(seq__11705_11744__$1);
                      var G__11752 = null;
                      var G__11753 = 0;
                      var G__11754 = 0;
                      seq__11705_11734 = G__11751;
                      chunk__11706_11735 = G__11752;
                      count__11707_11736 = G__11753;
                      i__11708_11737 = G__11754;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = {};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__5162__auto__ = x == null ? null : x;
    var m__5163__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__5163__auto__.call(null, x, options);
    } else {
      var m__5163__auto____$1 = cljs.core._js__GT_clj["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(x, options) : m__5163__auto____$1.call(null, x, options);
      } else {
        throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
      }
    }
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj() {
  var args11757 = [];
  var len__5565__auto___11782 = arguments.length;
  var i__5566__auto___11783 = 0;
  while (true) {
    if (i__5566__auto___11783 < len__5565__auto___11782) {
      args11757.push(arguments[i__5566__auto___11783]);
      var G__11784 = i__5566__auto___11783 + 1;
      i__5566__auto___11783 = G__11784;
      continue;
    } else {
    }
    break;
  }
  var G__11761 = args11757.length;
  switch(G__11761) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args11757.slice(1), 0);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__11762 = opts;
  var map__11762__$1 = (!(map__11762 == null) ? map__11762.cljs$lang$protocol_mask$partition0$ & 64 || map__11762.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__11762) : map__11762;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11762__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function(map__11762, map__11762__$1, keywordize_keys, keyfn) {
    return function cljs$core$thisfn(x__$1) {
      if (!(x__$1 == null) ? false || x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
        return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
      } else {
        if (cljs.core.seq_QMARK_(x__$1)) {
          return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                  var iter__5279__auto__ = function(map__11762, map__11762__$1, keywordize_keys, keyfn) {
                    return function cljs$core$thisfn_$_iter__11776(s__11777) {
                      return new cljs.core.LazySeq(null, function(map__11762, map__11762__$1, keywordize_keys, keyfn) {
                        return function() {
                          var s__11777__$1 = s__11777;
                          while (true) {
                            var temp__4425__auto__ = cljs.core.seq(s__11777__$1);
                            if (temp__4425__auto__) {
                              var s__11777__$2 = temp__4425__auto__;
                              if (cljs.core.chunked_seq_QMARK_(s__11777__$2)) {
                                var c__5277__auto__ = cljs.core.chunk_first(s__11777__$2);
                                var size__5278__auto__ = cljs.core.count(c__5277__auto__);
                                var b__11779 = cljs.core.chunk_buffer(size__5278__auto__);
                                if (function() {
                                  var i__11778 = 0;
                                  while (true) {
                                    if (i__11778 < size__5278__auto__) {
                                      var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__5277__auto__, i__11778);
                                      cljs.core.chunk_append(b__11779, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null));
                                      var G__11786 = i__11778 + 1;
                                      i__11778 = G__11786;
                                      continue;
                                    } else {
                                      return true;
                                    }
                                    break;
                                  }
                                }()) {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__11779), cljs$core$thisfn_$_iter__11776(cljs.core.chunk_rest(s__11777__$2)));
                                } else {
                                  return cljs.core.chunk_cons(cljs.core.chunk(b__11779), null);
                                }
                              } else {
                                var k = cljs.core.first(s__11777__$2);
                                return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(x__$1[k])], null), cljs$core$thisfn_$_iter__11776(cljs.core.rest(s__11777__$2)));
                              }
                            } else {
                              return null;
                            }
                            break;
                          }
                        };
                      }(map__11762, map__11762__$1, keywordize_keys, keyfn), null, null);
                    };
                  }(map__11762, map__11762__$1, keywordize_keys, keyfn);
                  return iter__5279__auto__(cljs.core.js_keys(x__$1));
                }());
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    };
  }(map__11762, map__11762__$1, keywordize_keys, keyfn);
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq11758) {
  var G__11759 = cljs.core.first(seq11758);
  var seq11758__$1 = cljs.core.next(seq11758);
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(G__11759, seq11758__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = function() {
    var G__11788 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11788) : cljs.core.atom.call(null, G__11788);
  }();
  return function(mem) {
    return function() {
      var G__11789__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(mem) : cljs.core.deref.call(null, mem), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__11789 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__11790__i = 0, G__11790__a = new Array(arguments.length - 0);
          while (G__11790__i < G__11790__a.length) {
            G__11790__a[G__11790__i] = arguments[G__11790__i + 0];
            ++G__11790__i;
          }
          args = new cljs.core.IndexedSeq(G__11790__a, 0);
        }
        return G__11789__delegate.call(this, args);
      };
      G__11789.cljs$lang$maxFixedArity = 0;
      G__11789.cljs$lang$applyTo = function(arglist__11791) {
        var args = cljs.core.seq(arglist__11791);
        return G__11789__delegate(args);
      };
      G__11789.cljs$core$IFn$_invoke$arity$variadic = G__11789__delegate;
      return G__11789;
    }();
  }(mem);
};
cljs.core.trampoline = function cljs$core$trampoline() {
  var args11792 = [];
  var len__5565__auto___11797 = arguments.length;
  var i__5566__auto___11798 = 0;
  while (true) {
    if (i__5566__auto___11798 < len__5565__auto___11797) {
      args11792.push(arguments[i__5566__auto___11798]);
      var G__11799 = i__5566__auto___11798 + 1;
      i__5566__auto___11798 = G__11799;
      continue;
    } else {
    }
    break;
  }
  var G__11796 = args11792.length;
  switch(G__11796) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__5584__auto__ = new cljs.core.IndexedSeq(args11792.slice(1), 0);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5584__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__11801 = ret;
      f = G__11801;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq11793) {
  var G__11794 = cljs.core.first(seq11793);
  var seq11793__$1 = cljs.core.next(seq11793);
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(G__11794, seq11793__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand() {
  var args11802 = [];
  var len__5565__auto___11805 = arguments.length;
  var i__5566__auto___11806 = 0;
  while (true) {
    if (i__5566__auto___11806 < len__5565__auto___11805) {
      args11802.push(arguments[i__5566__auto___11806]);
      var G__11807 = i__5566__auto___11806 + 1;
      i__5566__auto___11806 = G__11807;
      continue;
    } else {
    }
    break;
  }
  var G__11804 = args11802.length;
  switch(G__11804) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11802.length)].join(""));;
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__11810 = Math.random() * n;
  return Math.floor(G__11810);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__11812 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11812) : cljs.core.atom.call(null, G__11812);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_() {
  var args__5572__auto__ = [];
  var len__5565__auto___11815 = arguments.length;
  var i__5566__auto___11816 = 0;
  while (true) {
    if (i__5566__auto___11816 < len__5565__auto___11815) {
      args__5572__auto__.push(arguments[i__5566__auto___11816]);
      var G__11817 = i__5566__auto___11816 + 1;
      i__5566__auto___11816 = G__11817;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq11813) {
  var G__11814 = cljs.core.first(seq11813);
  var seq11813__$1 = cljs.core.next(seq11813);
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__11814, seq11813__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_() {
  var args11818 = [];
  var len__5565__auto___11822 = arguments.length;
  var i__5566__auto___11823 = 0;
  while (true) {
    if (i__5566__auto___11823 < len__5565__auto___11822) {
      args11818.push(arguments[i__5566__auto___11823]);
      var G__11824 = i__5566__auto___11823 + 1;
      i__5566__auto___11823 = G__11824;
      continue;
    } else {
    }
    break;
  }
  var G__11820 = args11818.length;
  switch(G__11820) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11818.length)].join(""));;
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
    var G__11821 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11821) : cljs.core.deref.call(null, G__11821);
  }(), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__4526__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__4526__auto__) {
    return or__4526__auto__;
  } else {
    var or__4526__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
    if (or__4526__auto____$1) {
      return or__4526__auto____$1;
    } else {
      var and__4514__auto__ = cljs.core.vector_QMARK_(parent);
      if (and__4514__auto__) {
        var and__4514__auto____$1 = cljs.core.vector_QMARK_(child);
        if (and__4514__auto____$1) {
          var and__4514__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
          if (and__4514__auto____$2) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__11826 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__11827 = i + 1;
                ret = G__11826;
                i = G__11827;
                continue;
              }
              break;
            }
          } else {
            return and__4514__auto____$2;
          }
        } else {
          return and__4514__auto____$1;
        }
      } else {
        return and__4514__auto__;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents() {
  var args11828 = [];
  var len__5565__auto___11832 = arguments.length;
  var i__5566__auto___11833 = 0;
  while (true) {
    if (i__5566__auto___11833 < len__5565__auto___11832) {
      args11828.push(arguments[i__5566__auto___11833]);
      var G__11834 = i__5566__auto___11833 + 1;
      i__5566__auto___11833 = G__11834;
      continue;
    } else {
    }
    break;
  }
  var G__11830 = args11828.length;
  switch(G__11830) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11828.length)].join(""));;
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(function() {
    var G__11831 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11831) : cljs.core.deref.call(null, G__11831);
  }(), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors() {
  var args11836 = [];
  var len__5565__auto___11840 = arguments.length;
  var i__5566__auto___11841 = 0;
  while (true) {
    if (i__5566__auto___11841 < len__5565__auto___11840) {
      args11836.push(arguments[i__5566__auto___11841]);
      var G__11842 = i__5566__auto___11841 + 1;
      i__5566__auto___11841 = G__11842;
      continue;
    } else {
    }
    break;
  }
  var G__11838 = args11836.length;
  switch(G__11838) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11836.length)].join(""));;
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(function() {
    var G__11839 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11839) : cljs.core.deref.call(null, G__11839);
  }(), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants() {
  var args11844 = [];
  var len__5565__auto___11848 = arguments.length;
  var i__5566__auto___11849 = 0;
  while (true) {
    if (i__5566__auto___11849 < len__5565__auto___11848) {
      args11844.push(arguments[i__5566__auto___11849]);
      var G__11850 = i__5566__auto___11849 + 1;
      i__5566__auto___11849 = G__11850;
      continue;
    } else {
    }
    break;
  }
  var G__11846 = args11844.length;
  switch(G__11846) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11844.length)].join(""));;
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(function() {
    var G__11847 = cljs.core.get_global_hierarchy();
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__11847) : cljs.core.deref.call(null, G__11847);
  }(), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive() {
  var args11852 = [];
  var len__5565__auto___11855 = arguments.length;
  var i__5566__auto___11856 = 0;
  while (true) {
    if (i__5566__auto___11856 < len__5565__auto___11855) {
      args11852.push(arguments[i__5566__auto___11856]);
      var G__11857 = i__5566__auto___11856 + 1;
      i__5566__auto___11856 = G__11857;
      continue;
    } else {
    }
    break;
  }
  var G__11854 = args11852.length;
  switch(G__11854) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11852.length)].join(""));;
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(tp, td, ta) {
    return function(m, source, sources, target, targets) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
        return function(ret, k) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
        };
      }(tp, td, ta), m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
    };
  }(tp, td, ta);
  var or__4526__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__4526__auto__)) {
    return or__4526__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive() {
  var args11862 = [];
  var len__5565__auto___11865 = arguments.length;
  var i__5566__auto___11866 = 0;
  while (true) {
    if (i__5566__auto___11866 < len__5565__auto___11865) {
      args11862.push(arguments[i__5566__auto___11866]);
      var G__11867 = i__5566__auto___11866 + 1;
      i__5566__auto___11866 = G__11867;
      continue;
    } else {
    }
    break;
  }
  var G__11864 = args11862.length;
  switch(G__11864) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11862.length)].join(""));;
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.array_seq([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
    return function(p1__11859_SHARP_) {
      return cljs.core.cons(cljs.core.first(p1__11859_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__11859_SHARP_), cljs.core.second(p1__11859_SHARP_)));
    };
  }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
      return function(p1__11860_SHARP_, p2__11861_SHARP_) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__11860_SHARP_, p2__11861_SHARP_);
      };
    }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(prefer_table) : cljs.core.deref.call(null, prefer_table)).call(null, x);
  var or__4526__auto__ = cljs.core.truth_(function() {
    var and__4514__auto__ = xprefs;
    if (cljs.core.truth_(and__4514__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__4514__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4526__auto__)) {
    return or__4526__auto__;
  } else {
    var or__4526__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(cljs$core$prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__11881 = cljs.core.rest(ps);
          ps = G__11881;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4526__auto____$1)) {
      return or__4526__auto____$1;
    } else {
      var or__4526__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__11882 = cljs.core.rest(ps);
            ps = G__11882;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4526__auto____$2)) {
        return or__4526__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table) {
  var or__4526__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4526__auto__)) {
    return or__4526__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__11885) {
    var vec__11886 = p__11885;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11886, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11886, 1, null);
    var e = vec__11886;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__4526__auto__ = be == null;
        if (or__4526__auto__) {
          return or__4526__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(method_table) : cljs.core.deref.call(null, method_table));
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cached_hierarchy) : cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(hierarchy) : cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._reset[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto__.call(null, mf);
    } else {
      var m__5163__auto____$1 = cljs.core._reset["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
      }
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._add_method[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__5163__auto__.call(null, mf, dispatch_val, method);
    } else {
      var m__5163__auto____$1 = cljs.core._add_method["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__5163__auto____$1.call(null, mf, dispatch_val, method);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
      }
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._remove_method[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5163__auto__.call(null, mf, dispatch_val);
    } else {
      var m__5163__auto____$1 = cljs.core._remove_method["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5163__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
      }
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._prefer_method[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__5163__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      var m__5163__auto____$1 = cljs.core._prefer_method["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__5163__auto____$1.call(null, mf, dispatch_val, dispatch_val_y);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
      }
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._get_method[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5163__auto__.call(null, mf, dispatch_val);
    } else {
      var m__5163__auto____$1 = cljs.core._get_method["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__5163__auto____$1.call(null, mf, dispatch_val);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
      }
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._methods[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto__.call(null, mf);
    } else {
      var m__5163__auto____$1 = cljs.core._methods["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
      }
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._prefers[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto__.call(null, mf);
    } else {
      var m__5163__auto____$1 = cljs.core._prefers["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
      }
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto__.call(null, mf);
    } else {
      var m__5163__auto____$1 = cljs.core._default_dispatch_val["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
      }
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    var x__5162__auto__ = mf == null ? null : mf;
    var m__5163__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto__.call(null, mf);
    } else {
      var m__5163__auto____$1 = cljs.core._dispatch_fn["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1 ? m__5163__auto____$1.cljs$core$IFn$_invoke$arity$1(mf) : m__5163__auto____$1.call(null, mf);
      } else {
        throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
      }
    }
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__11890 = null;
  var G__11890__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__11890__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__11890__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__11890__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__11890__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__11890__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__11890__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__11890__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__11890__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__11890__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__11890__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__11890__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__11890__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__11890__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__11890__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__11890__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__11890__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__11890__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__11890__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__11890__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__11890__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__11890__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__11890 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__11890__1.call(this, self__);
      case 2:
        return G__11890__2.call(this, self__, a);
      case 3:
        return G__11890__3.call(this, self__, a, b);
      case 4:
        return G__11890__4.call(this, self__, a, b, c);
      case 5:
        return G__11890__5.call(this, self__, a, b, c, d);
      case 6:
        return G__11890__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__11890__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__11890__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__11890__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__11890__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__11890__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__11890__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__11890__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__11890__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__11890__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__11890__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__11890__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__11890__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__11890__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__11890__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__11890__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__11890__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11890.cljs$core$IFn$_invoke$arity$1 = G__11890__1;
  G__11890.cljs$core$IFn$_invoke$arity$2 = G__11890__2;
  G__11890.cljs$core$IFn$_invoke$arity$3 = G__11890__3;
  G__11890.cljs$core$IFn$_invoke$arity$4 = G__11890__4;
  G__11890.cljs$core$IFn$_invoke$arity$5 = G__11890__5;
  G__11890.cljs$core$IFn$_invoke$arity$6 = G__11890__6;
  G__11890.cljs$core$IFn$_invoke$arity$7 = G__11890__7;
  G__11890.cljs$core$IFn$_invoke$arity$8 = G__11890__8;
  G__11890.cljs$core$IFn$_invoke$arity$9 = G__11890__9;
  G__11890.cljs$core$IFn$_invoke$arity$10 = G__11890__10;
  G__11890.cljs$core$IFn$_invoke$arity$11 = G__11890__11;
  G__11890.cljs$core$IFn$_invoke$arity$12 = G__11890__12;
  G__11890.cljs$core$IFn$_invoke$arity$13 = G__11890__13;
  G__11890.cljs$core$IFn$_invoke$arity$14 = G__11890__14;
  G__11890.cljs$core$IFn$_invoke$arity$15 = G__11890__15;
  G__11890.cljs$core$IFn$_invoke$arity$16 = G__11890__16;
  G__11890.cljs$core$IFn$_invoke$arity$17 = G__11890__17;
  G__11890.cljs$core$IFn$_invoke$arity$18 = G__11890__18;
  G__11890.cljs$core$IFn$_invoke$arity$19 = G__11890__19;
  G__11890.cljs$core$IFn$_invoke$arity$20 = G__11890__20;
  G__11890.cljs$core$IFn$_invoke$arity$21 = G__11890__21;
  G__11890.cljs$core$IFn$_invoke$arity$22 = G__11890__22;
  return G__11890;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args11889) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11889)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.prefer_table) : cljs.core.deref.call(null, self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.cached_hierarchy) : cljs.core.deref.call(null, self__.cached_hierarchy), cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.hierarchy) : cljs.core.deref.call(null, self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4423__auto__ = (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_cache) : cljs.core.deref.call(null, self__.method_cache)).call(null, dispatch_val);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var target_fn = temp__4423__auto__;
    return target_fn;
  } else {
    var temp__4423__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var target_fn = temp__4423__auto____$1;
      return target_fn;
    } else {
      return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(self__.method_table) : cljs.core.deref.call(null, self__.method_table)).call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = goog.string.hashCode(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  var G__11891 = self__.uuid;
  var G__11892 = other.uuid;
  return goog.array.defaultCompare(G__11891, G__11892);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  return new cljs.core.UUID(s, null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(15).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(14)).toString(16);
  return cljs.core.uuid([cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str("4"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str("-"), cljs.core.str(rhex), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), 
  cljs.core.str("-"), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex()), cljs.core.str(hex())].join(""));
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info() {
  var args11893 = [];
  var len__5565__auto___11896 = arguments.length;
  var i__5566__auto___11897 = 0;
  while (true) {
    if (i__5566__auto___11897 < len__5565__auto___11896) {
      args11893.push(arguments[i__5566__auto___11897]);
      var G__11898 = i__5566__auto___11897 + 1;
      i__5566__auto___11897 = G__11898;
      continue;
    } else {
    }
    break;
  }
  var G__11895 = args11893.length;
  switch(G__11895) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11893.length)].join(""));;
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(this$__$1, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__11900 = v instanceof cljs.core.Keyword ? v.fqn : null;
  switch(G__11900) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, [cljs.core.str("#"), cljs.core.str(self__.tag), cljs.core.str(" ")].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "symbol?", "symbol?", 1820680511, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null))], 0)))].join(""));
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["abstract", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", "throw", "throws", 
"transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__11902_SHARP_, p2__11903_SHARP_) {
      goog.object.set(p1__11902_SHARP_, p2__11903_SHARP_, true);
      return p1__11902_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return goog.object.containsKey(cljs.core.js_reserved, x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__11906 = cljs.core.next(ks__$1);
          var G__11907 = [cljs.core.str(function() {
            var G__11905 = ret;
            var G__11905__$1 = !(ret === "") ? [cljs.core.str(G__11905), cljs.core.str("|")].join("") : G__11905;
            return G__11905__$1;
          }()), cljs.core.str(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__11906;
          ret = G__11907;
          continue;
        } else {
          return [cljs.core.str(ret), cljs.core.str("|\\$")].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_11908 = 0;
  while (true) {
    if (i_11908 < name.length) {
      var c_11909 = name.charAt(i_11908);
      var sub_11910 = goog.object.get(cljs.core.CHAR_MAP, c_11909);
      if (!(sub_11910 == null)) {
        sb.append(sub_11910);
      } else {
        sb.append(c_11909);
      }
      var G__11911 = i_11908 + 1;
      i_11908 = G__11911;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str([cljs.core.str(name)].join(""));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [cljs.core.str(name_SINGLEQUOTE_), cljs.core.str("$")].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return [cljs.core.str(name_SINGLEQUOTE___$1)].join("");
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = cljs.core.truth_(goog.string.endsWith(munged_name, "$")) ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__4423__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__4423__auto__)) {
      var match = temp__4423__auto__;
      var vec__11913 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11913, 0, null);
      var G__11914 = [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__11915 = r.lastIndex;
      ret = G__11914;
      last_match_end = G__11915;
      continue;
    } else {
      return [cljs.core.str(ret), cljs.core.str(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  return (name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str).call(null, function() {
    var name_SINGLEQUOTE_ = [cljs.core.str(name)].join("");
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str([cljs.core.str(name)].join(""));
    }
  }());
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge([cljs.core.str(sym)].join(""));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(self__.name)].join(""), [cljs.core.str(sym)].join(""));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [cljs.core.str(self__.name)].join("");
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
  return cljs.core._write(writer__5106__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__11920 = function() {
          var G__11918 = ctxt;
          var G__11919 = cljs.core.first(xs);
          return goog.object.get(G__11918, G__11919);
        }();
        var G__11921 = cljs.core.next(xs);
        ctxt = G__11920;
        xs = G__11921;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge([cljs.core.str(ns)].join(""));
  var segs = munged_ns.split(".");
  var G__11923 = cljs.core._STAR_target_STAR_;
  switch(G__11923) {
    case "nodejs":
      if (COMPILED) {
        return eval(munged_ns);
      } else {
        return cljs.core.find_ns_obj_STAR_(global, segs);
      }
      break;
    case "default":
      return cljs.core.find_ns_obj_STAR_(window, segs);
      break;
    default:
      throw new Error([cljs.core.str("find-ns-obj not supported for target "), cljs.core.str(cljs.core._STAR_target_STAR_)].join(""));;
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function(ns_obj, ns) {
    return function cljs$core$ns_interns_STAR__$_step(ret, k) {
      var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function(var_sym, ns_obj, ns) {
        return function() {
          return goog.object.get(ns_obj, k);
        };
      }(var_sym, ns_obj, ns), cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([cljs.core.str(sym)].join(""), [cljs.core.str(var_sym)].join("")), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
    };
  }(ns_obj, ns);
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns() {
  var args11925 = [];
  var len__5565__auto___11928 = arguments.length;
  var i__5566__auto___11929 = 0;
  while (true) {
    if (i__5566__auto___11929 < len__5565__auto___11928) {
      args11925.push(arguments[i__5566__auto___11929]);
      var G__11930 = i__5566__auto___11929 + 1;
      i__5566__auto___11929 = G__11930;
      continue;
    } else {
    }
    break;
  }
  var G__11927 = args11925.length;
  switch(G__11927) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11925.length)].join(""));;
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__11933 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11933) : cljs.core.atom.call(null, G__11933);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = function() {
      var G__11935 = cljs.core.PersistentArrayMap.EMPTY;
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__11935) : cljs.core.atom.call(null, G__11935);
    }();
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(cljs.core.NS_CACHE) : cljs.core.deref.call(null, cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_str = [cljs.core.str(ns)].join("");
    var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(ns_str), cljs.core.str("$macros")].join("")) : ns;
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw [cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join() {
  var args7838 = [];
  var len__5565__auto___7841 = arguments.length;
  var i__5566__auto___7842 = 0;
  while (true) {
    if (i__5566__auto___7842 < len__5565__auto___7841) {
      args7838.push(arguments[i__5566__auto___7842]);
      var G__7843 = i__5566__auto___7842 + 1;
      i__5566__auto___7842 = G__7843;
      continue;
    } else {
    }
    break;
  }
  var G__7840 = args7838.length;
  switch(G__7840) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7838.length)].join(""));;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__7845 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var G__7846 = cljs.core.next.call(null, coll__$1);
      sb = G__7845;
      coll__$1 = G__7846;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__7847 = sb;
      var G__7848 = coll__$2;
      sb = G__7847;
      coll__$1 = G__7848;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return [cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek.call(null, v__$1)) {
      var G__7849 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__7849;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__7853 = cljs.core._EQ__EQ_;
    var expr__7854 = limit;
    if (cljs.core.truth_(pred__7853.call(null, 1, expr__7854))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__7853.call(null, 2, expr__7854))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split() {
  var args7856 = [];
  var len__5565__auto___7859 = arguments.length;
  var i__5566__auto___7860 = 0;
  while (true) {
    if (i__5566__auto___7860 < len__5565__auto___7859) {
      args7856.push(arguments[i__5566__auto___7860]);
      var G__7861 = i__5566__auto___7860 + 1;
      i__5566__auto___7860 = G__7861;
      continue;
    } else {
    }
    break;
  }
  var G__7858 = args7856.length;
  switch(G__7858) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7856.length)].join(""));;
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, "/(?:)/" === [cljs.core.str(re)].join("") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var m = cljs.core.re_find.call(null, re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__7863 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__7864 = limit__$1 - 1;
          var G__7865 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__7863;
          limit__$1 = G__7864;
          parts = G__7865;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__7866 = index - 1;
        index = G__7866;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.call(null, cmap, ch);
      if (!(replacement == null)) {
        buffer.append([cljs.core.str(replacement)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__7867 = index + 1;
      index = G__7867;
      continue;
    }
    break;
  }
};
goog.provide("cljs.pprint");
goog.require("cljs.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.pprint.print = function cljs$pprint$print() {
  var args__5572__auto__ = [];
  var len__5565__auto___7871 = arguments.length;
  var i__5566__auto___7872 = 0;
  while (true) {
    if (i__5566__auto___7872 < len__5565__auto___7871) {
      args__5572__auto__.push(arguments[i__5566__auto___7872]);
      var G__7873 = i__5566__auto___7872 + 1;
      i__5566__auto___7872 = G__7873;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.print_str, more));
};
cljs.pprint.print.cljs$lang$maxFixedArity = 0;
cljs.pprint.print.cljs$lang$applyTo = function(seq7870) {
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7870));
};
cljs.pprint.println = function cljs$pprint$println() {
  var args__5572__auto__ = [];
  var len__5565__auto___7875 = arguments.length;
  var i__5566__auto___7876 = 0;
  while (true) {
    if (i__5566__auto___7876 < len__5565__auto___7875) {
      args__5572__auto__.push(arguments[i__5566__auto___7876]);
      var G__7877 = i__5566__auto___7876 + 1;
      i__5566__auto___7876 = G__7877;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.print, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.println.cljs$lang$maxFixedArity = 0;
cljs.pprint.println.cljs$lang$applyTo = function(seq7874) {
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7874));
};
cljs.pprint.print_char = function cljs$pprint$print_char(c) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, function() {
    var pred__7881 = cljs.core._EQ_;
    var expr__7882 = c;
    if (cljs.core.truth_(pred__7881.call(null, "\b", expr__7882))) {
      return "\\backspace";
    } else {
      if (cljs.core.truth_(pred__7881.call(null, "\t", expr__7882))) {
        return "\\tab";
      } else {
        if (cljs.core.truth_(pred__7881.call(null, "\n", expr__7882))) {
          return "\\newline";
        } else {
          if (cljs.core.truth_(pred__7881.call(null, "\f", expr__7882))) {
            return "\\formfeed";
          } else {
            if (cljs.core.truth_(pred__7881.call(null, "\r", expr__7882))) {
              return "\\return";
            } else {
              if (cljs.core.truth_(pred__7881.call(null, '"', expr__7882))) {
                return '\\"';
              } else {
                if (cljs.core.truth_(pred__7881.call(null, "\\", expr__7882))) {
                  return "\\\\";
                } else {
                  return [cljs.core.str("\\"), cljs.core.str(c)].join("");
                }
              }
            }
          }
        }
      }
    }
  }());
};
cljs.pprint.pr = function cljs$pprint$pr() {
  var args__5572__auto__ = [];
  var len__5565__auto___7885 = arguments.length;
  var i__5566__auto___7886 = 0;
  while (true) {
    if (i__5566__auto___7886 < len__5565__auto___7885) {
      args__5572__auto__.push(arguments[i__5566__auto___7886]);
      var G__7887 = i__5566__auto___7886 + 1;
      i__5566__auto___7886 = G__7887;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.pr_str, more));
};
cljs.pprint.pr.cljs$lang$maxFixedArity = 0;
cljs.pprint.pr.cljs$lang$applyTo = function(seq7884) {
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7884));
};
cljs.pprint.prn = function cljs$pprint$prn() {
  var args__5572__auto__ = [];
  var len__5565__auto___7889 = arguments.length;
  var i__5566__auto___7890 = 0;
  while (true) {
    if (i__5566__auto___7890 < len__5565__auto___7889) {
      args__5572__auto__.push(arguments[i__5566__auto___7890]);
      var G__7891 = i__5566__auto___7890 + 1;
      i__5566__auto___7890 = G__7891;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 0 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(0), 0) : null;
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__5573__auto__);
};
cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.pr, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.prn.cljs$lang$maxFixedArity = 0;
cljs.pprint.prn.cljs$lang$applyTo = function(seq7888) {
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq7888));
};
cljs.pprint.float_QMARK_ = function cljs$pprint$float_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && !(parseFloat(n) === parseInt(n, 10));
};
cljs.pprint.char_code = function cljs$pprint$char_code(c) {
  if (typeof c === "number") {
    return c;
  } else {
    if (typeof c === "string" && c.length === 1) {
      return c.charCodeAt(0);
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.pprint.map_passing_context = function cljs$pprint$map_passing_context(func, initial_context, lis) {
  var context = initial_context;
  var lis__$1 = lis;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, lis__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var this$ = cljs.core.first.call(null, lis__$1);
      var remainder = cljs.core.next.call(null, lis__$1);
      var vec__7893 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, context], null));
      var result = cljs.core.nth.call(null, vec__7893, 0, null);
      var new_context = cljs.core.nth.call(null, vec__7893, 1, null);
      var G__7894 = new_context;
      var G__7895 = remainder;
      var G__7896 = cljs.core.conj.call(null, acc, result);
      context = G__7894;
      lis__$1 = G__7895;
      acc = G__7896;
      continue;
    }
    break;
  }
};
cljs.pprint.consume = function cljs$pprint$consume(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__7898 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__7898, 0, null);
    var new_context = cljs.core.nth.call(null, vec__7898, 1, null);
    if (cljs.core.not.call(null, result)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, new_context], null);
    } else {
      var G__7899 = new_context;
      var G__7900 = cljs.core.conj.call(null, acc, result);
      context = G__7899;
      acc = G__7900;
      continue;
    }
    break;
  }
};
cljs.pprint.consume_while = function cljs$pprint$consume_while(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__7902 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__7902, 0, null);
    var continue$ = cljs.core.nth.call(null, vec__7902, 1, null);
    var new_context = cljs.core.nth.call(null, vec__7902, 2, null);
    if (cljs.core.not.call(null, continue$)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var G__7903 = new_context;
      var G__7904 = cljs.core.conj.call(null, acc, result);
      context = G__7903;
      acc = G__7904;
      continue;
    }
    break;
  }
};
cljs.pprint.unzip_map = function cljs$pprint$unzip_map(m) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__5279__auto__ = function cljs$pprint$unzip_map_$_iter__7929(s__7930) {
      return new cljs.core.LazySeq(null, function() {
        var s__7930__$1 = s__7930;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__7930__$1);
          if (temp__4425__auto__) {
            var s__7930__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__7930__$2)) {
              var c__5277__auto__ = cljs.core.chunk_first.call(null, s__7930__$2);
              var size__5278__auto__ = cljs.core.count.call(null, c__5277__auto__);
              var b__7932 = cljs.core.chunk_buffer.call(null, size__5278__auto__);
              if (function() {
                var i__7931 = 0;
                while (true) {
                  if (i__7931 < size__5278__auto__) {
                    var vec__7937 = cljs.core._nth.call(null, c__5277__auto__, i__7931);
                    var k = cljs.core.nth.call(null, vec__7937, 0, null);
                    var vec__7938 = cljs.core.nth.call(null, vec__7937, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__7938, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__7938, 1, null);
                    cljs.core.chunk_append.call(null, b__7932, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null));
                    var G__7953 = i__7931 + 1;
                    i__7931 = G__7953;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__7932), cljs$pprint$unzip_map_$_iter__7929.call(null, cljs.core.chunk_rest.call(null, s__7930__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__7932), null);
              }
            } else {
              var vec__7939 = cljs.core.first.call(null, s__7930__$2);
              var k = cljs.core.nth.call(null, vec__7939, 0, null);
              var vec__7940 = cljs.core.nth.call(null, vec__7939, 1, null);
              var v1 = cljs.core.nth.call(null, vec__7940, 0, null);
              var v2 = cljs.core.nth.call(null, vec__7940, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null), cljs$pprint$unzip_map_$_iter__7929.call(null, cljs.core.rest.call(null, s__7930__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5279__auto__.call(null, m);
  }()), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__5279__auto__ = function cljs$pprint$unzip_map_$_iter__7941(s__7942) {
      return new cljs.core.LazySeq(null, function() {
        var s__7942__$1 = s__7942;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__7942__$1);
          if (temp__4425__auto__) {
            var s__7942__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__7942__$2)) {
              var c__5277__auto__ = cljs.core.chunk_first.call(null, s__7942__$2);
              var size__5278__auto__ = cljs.core.count.call(null, c__5277__auto__);
              var b__7944 = cljs.core.chunk_buffer.call(null, size__5278__auto__);
              if (function() {
                var i__7943 = 0;
                while (true) {
                  if (i__7943 < size__5278__auto__) {
                    var vec__7949 = cljs.core._nth.call(null, c__5277__auto__, i__7943);
                    var k = cljs.core.nth.call(null, vec__7949, 0, null);
                    var vec__7950 = cljs.core.nth.call(null, vec__7949, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__7950, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__7950, 1, null);
                    cljs.core.chunk_append.call(null, b__7944, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null));
                    var G__7954 = i__7943 + 1;
                    i__7943 = G__7954;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__7944), cljs$pprint$unzip_map_$_iter__7941.call(null, cljs.core.chunk_rest.call(null, s__7942__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__7944), null);
              }
            } else {
              var vec__7951 = cljs.core.first.call(null, s__7942__$2);
              var k = cljs.core.nth.call(null, vec__7951, 0, null);
              var vec__7952 = cljs.core.nth.call(null, vec__7951, 1, null);
              var v1 = cljs.core.nth.call(null, vec__7952, 0, null);
              var v2 = cljs.core.nth.call(null, vec__7952, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null), cljs$pprint$unzip_map_$_iter__7941.call(null, cljs.core.rest.call(null, s__7942__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5279__auto__.call(null, m);
  }())], null);
};
cljs.pprint.tuple_map = function cljs$pprint$tuple_map(m, v1) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__5279__auto__ = function cljs$pprint$tuple_map_$_iter__7963(s__7964) {
      return new cljs.core.LazySeq(null, function() {
        var s__7964__$1 = s__7964;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__7964__$1);
          if (temp__4425__auto__) {
            var s__7964__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__7964__$2)) {
              var c__5277__auto__ = cljs.core.chunk_first.call(null, s__7964__$2);
              var size__5278__auto__ = cljs.core.count.call(null, c__5277__auto__);
              var b__7966 = cljs.core.chunk_buffer.call(null, size__5278__auto__);
              if (function() {
                var i__7965 = 0;
                while (true) {
                  if (i__7965 < size__5278__auto__) {
                    var vec__7969 = cljs.core._nth.call(null, c__5277__auto__, i__7965);
                    var k = cljs.core.nth.call(null, vec__7969, 0, null);
                    var v = cljs.core.nth.call(null, vec__7969, 1, null);
                    cljs.core.chunk_append.call(null, b__7966, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null));
                    var G__7971 = i__7965 + 1;
                    i__7965 = G__7971;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__7966), cljs$pprint$tuple_map_$_iter__7963.call(null, cljs.core.chunk_rest.call(null, s__7964__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__7966), null);
              }
            } else {
              var vec__7970 = cljs.core.first.call(null, s__7964__$2);
              var k = cljs.core.nth.call(null, vec__7970, 0, null);
              var v = cljs.core.nth.call(null, vec__7970, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null), cljs$pprint$tuple_map_$_iter__7963.call(null, cljs.core.rest.call(null, s__7964__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5279__auto__.call(null, m);
  }());
};
cljs.pprint.rtrim = function cljs$pprint$rtrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1), c)) {
    var n = len - 1;
    while (true) {
      if (n < 0) {
        return "";
      } else {
        if (!cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
          return cljs.core.subs.call(null, s, 0, n + 1);
        } else {
          var G__7972 = n - 1;
          n = G__7972;
          continue;
        }
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.ltrim = function cljs$pprint$ltrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, 0), c)) {
    var n = 0;
    while (true) {
      if (cljs.core._EQ_.call(null, n, len) || !cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
        return cljs.core.subs.call(null, s, n);
      } else {
        var G__7973 = n + 1;
        n = G__7973;
        continue;
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.prefix_count = function cljs$pprint$prefix_count(aseq, val) {
  var test = cljs.core.coll_QMARK_.call(null, val) ? cljs.core.set.call(null, val) : cljs.core.PersistentHashSet.fromArray([val], true);
  var pos = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, pos, cljs.core.count.call(null, aseq)) || cljs.core.not.call(null, test.call(null, cljs.core.nth.call(null, aseq, pos)))) {
      return pos;
    } else {
      var G__7974 = pos + 1;
      pos = G__7974;
      continue;
    }
    break;
  }
};
cljs.pprint.IPrettyFlush = {};
cljs.pprint._ppflush = function cljs$pprint$_ppflush(pp) {
  if (!(pp == null) && !(pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1 == null)) {
    return pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1(pp);
  } else {
    var x__5162__auto__ = pp == null ? null : pp;
    var m__5163__auto__ = cljs.pprint._ppflush[goog.typeOf(x__5162__auto__)];
    if (!(m__5163__auto__ == null)) {
      return m__5163__auto__.call(null, pp);
    } else {
      var m__5163__auto____$1 = cljs.pprint._ppflush["_"];
      if (!(m__5163__auto____$1 == null)) {
        return m__5163__auto____$1.call(null, pp);
      } else {
        throw cljs.core.missing_protocol.call(null, "IPrettyFlush.-ppflush", pp);
      }
    }
  }
};
cljs.pprint._STAR_default_page_width_STAR_ = 72;
cljs.pprint.get_field = function cljs$pprint$get_field(this$, sym) {
  return sym.call(null, cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint.set_field = function cljs$pprint$set_field(this$, sym, new_val) {
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, sym, new_val);
};
cljs.pprint.get_column = function cljs$pprint$get_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599));
};
cljs.pprint.get_line = function cljs$pprint$get_line(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235));
};
cljs.pprint.get_max_column = function cljs$pprint$get_max_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548));
};
cljs.pprint.set_max_column = function cljs$pprint$set_max_column(this$, new_max) {
  cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548), new_max);
  return null;
};
cljs.pprint.get_writer = function cljs$pprint$get_writer(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322));
};
cljs.pprint.c_write_char = function cljs$pprint$c_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, c, "\n")) {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0);
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235)) + 1);
  } else {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + 1);
  }
  return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322)), c);
};
cljs.pprint.column_writer = function cljs$pprint$column_writer() {
  var args7978 = [];
  var len__5565__auto___7987 = arguments.length;
  var i__5566__auto___7988 = 0;
  while (true) {
    if (i__5566__auto___7988 < len__5565__auto___7987) {
      args7978.push(arguments[i__5566__auto___7988]);
      var G__7989 = i__5566__auto___7988 + 1;
      i__5566__auto___7988 = G__7989;
      continue;
    } else {
    }
    break;
  }
  var G__7980 = args7978.length;
  switch(G__7980) {
    case 1:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7978.length)].join(""));;
  }
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1 = function(writer) {
  return cljs.pprint.column_writer.call(null, writer, cljs.pprint._STAR_default_page_width_STAR_);
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2 = function(writer, max_columns) {
  var fields = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "max", "max", 61366548), max_columns, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0, new cljs.core.Keyword(null, "line", "line", 212345235), 0, new cljs.core.Keyword(null, "base", "base", 185279322), writer], null));
  if (typeof cljs.pprint.t7981 !== "undefined") {
  } else {
    cljs.pprint.t7981 = function(writer, max_columns, fields, meta7982) {
      this.writer = writer;
      this.max_columns = max_columns;
      this.fields = fields;
      this.meta7982 = meta7982;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t7981.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(fields) {
      return function(_7983, meta7982__$1) {
        var self__ = this;
        var _7983__$1 = this;
        return new cljs.pprint.t7981(self__.writer, self__.max_columns, self__.fields, meta7982__$1);
      };
    }(fields);
    cljs.pprint.t7981.prototype.cljs$core$IMeta$_meta$arity$1 = function(fields) {
      return function(_7983) {
        var self__ = this;
        var _7983__$1 = this;
        return self__.meta7982;
      };
    }(fields);
    cljs.pprint.t7981.prototype.cljs$core$IDeref$_deref$arity$1 = function(fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.fields;
      };
    }(fields);
    cljs.pprint.t7981.prototype.cljs$core$IWriter$_flush$arity$1 = function(fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(fields);
    cljs.pprint.t7981.prototype.cljs$core$IWriter$_write$arity$2 = function(fields) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__7984 = cljs.core._EQ_;
        var expr__7985 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__7984.call(null, String, expr__7985))) {
          var s = x;
          var nl = s.lastIndexOf("\n");
          if (nl < 0) {
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + cljs.core.count.call(null, s));
          } else {
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.core.count.call(null, s) - nl - 1);
            cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235)) + cljs.core.count.call(null, cljs.core.filter.call(null, function(s, nl, pred__7984, expr__7985, this$__$1, fields) {
              return function(p1__7977_SHARP_) {
                return cljs.core._EQ_.call(null, p1__7977_SHARP_, "\n");
              };
            }(s, nl, pred__7984, expr__7985, this$__$1, fields), s)));
          }
          return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "base", "base", 185279322)), s);
        } else {
          if (cljs.core.truth_(pred__7984.call(null, Number, expr__7985))) {
            return cljs.pprint.c_write_char.call(null, this$__$1, x);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__7985)].join(""));
          }
        }
      };
    }(fields);
    cljs.pprint.t7981.getBasis = function(fields) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta7982", "meta7982", -188323388, null)], null);
      };
    }(fields);
    cljs.pprint.t7981.cljs$lang$type = true;
    cljs.pprint.t7981.cljs$lang$ctorStr = "cljs.pprint/t7981";
    cljs.pprint.t7981.cljs$lang$ctorPrWriter = function(fields) {
      return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
        return cljs.core._write.call(null, writer__5106__auto__, "cljs.pprint/t7981");
      };
    }(fields);
    cljs.pprint.__GT_t7981 = function(fields) {
      return function cljs$pprint$__GT_t7981(writer__$1, max_columns__$1, fields__$1, meta7982) {
        return new cljs.pprint.t7981(writer__$1, max_columns__$1, fields__$1, meta7982);
      };
    }(fields);
  }
  return new cljs.pprint.t7981(writer, max_columns, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.column_writer.cljs$lang$maxFixedArity = 2;
cljs.pprint.logical_block = function(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, __meta, __extmap, __hash) {
  this.parent = parent;
  this.section = section;
  this.start_col = start_col;
  this.indent = indent;
  this.done_nl = done_nl;
  this.intra_block_nl = intra_block_nl;
  this.prefix = prefix;
  this.per_line_prefix = per_line_prefix;
  this.suffix = suffix;
  this.logical_block_callback = logical_block_callback;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k7992, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__7994 = k7992 instanceof cljs.core.Keyword ? k7992.fqn : null;
  switch(G__7994) {
    case "suffix":
      return self__.suffix;
      break;
    case "indent":
      return self__.indent;
      break;
    case "parent":
      return self__.parent;
      break;
    case "section":
      return self__.section;
      break;
    case "done-nl":
      return self__.done_nl;
      break;
    case "start-col":
      return self__.start_col;
      break;
    case "prefix":
      return self__.prefix;
      break;
    case "per-line-prefix":
      return self__.per_line_prefix;
      break;
    case "logical-block-callback":
      return self__.logical_block_callback;
      break;
    case "intra-block-nl":
      return self__.intra_block_nl;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k7992, else__5124__auto__);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#cljs.pprint.logical-block{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), 
  self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IIterable$ = true;
cljs.pprint.logical_block.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__7991) {
  var self__ = this;
  var G__7991__$1 = this;
  return new cljs.core.RecordIter(0, G__7991__$1, 10, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 
  1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.logical_block.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 10 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.logical_block.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), null, new cljs.core.Keyword(null, "indent", "indent", -148200125), null, new cljs.core.Keyword(null, "parent", "parent", -878878779), null, new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), null, new cljs.core.Keyword(null, "start-col", 
  "start-col", 668080143), null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__7991) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__7995 = cljs.core.keyword_identical_QMARK_;
  var expr__7996 = k__5129__auto__;
  if (cljs.core.truth_(pred__7995.call(null, new cljs.core.Keyword(null, "parent", "parent", -878878779), expr__7996))) {
    return new cljs.pprint.logical_block(G__7991, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__7995.call(null, new cljs.core.Keyword(null, "section", "section", -300141526), expr__7996))) {
      return new cljs.pprint.logical_block(self__.parent, G__7991, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__7995.call(null, new cljs.core.Keyword(null, "start-col", "start-col", 668080143), expr__7996))) {
        return new cljs.pprint.logical_block(self__.parent, self__.section, G__7991, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__7995.call(null, new cljs.core.Keyword(null, "indent", "indent", -148200125), expr__7996))) {
          return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, G__7991, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__7995.call(null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), expr__7996))) {
            return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, G__7991, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__7995.call(null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), expr__7996))) {
              return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, G__7991, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__7995.call(null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), expr__7996))) {
                return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, G__7991, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
              } else {
                if (cljs.core.truth_(pred__7995.call(null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), expr__7996))) {
                  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, G__7991, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                } else {
                  if (cljs.core.truth_(pred__7995.call(null, new cljs.core.Keyword(null, "suffix", "suffix", 367373057), expr__7996))) {
                    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, G__7991, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                  } else {
                    if (cljs.core.truth_(pred__7995.call(null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), expr__7996))) {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, G__7991, self__.__meta, self__.__extmap, null);
                    } else {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__7991), null);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.pprint.logical_block.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__7991) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, G__7991, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
cljs.pprint.logical_block.getBasis = function() {
  return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.Symbol(null, "section", "section", 1340390001, null), new cljs.core.Symbol(null, "start-col", "start-col", -1986355626, null), new cljs.core.Symbol(null, "indent", "indent", 1492331402, null), new cljs.core.Symbol(null, "done-nl", "done-nl", 1259507187, null), new cljs.core.Symbol(null, "intra-block-nl", "intra-block-nl", -845608894, 
  null), new cljs.core.Symbol(null, "prefix", "prefix", 1374623062, null), new cljs.core.Symbol(null, "per-line-prefix", "per-line-prefix", -1807493956, null), new cljs.core.Symbol(null, "suffix", "suffix", 2007904584, null), new cljs.core.Symbol(null, "logical-block-callback", "logical-block-callback", -1041744575, null)], null);
};
cljs.pprint.logical_block.cljs$lang$type = true;
cljs.pprint.logical_block.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/logical-block");
};
cljs.pprint.logical_block.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "cljs.pprint/logical-block");
};
cljs.pprint.__GT_logical_block = function cljs$pprint$__GT_logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback) {
  return new cljs.pprint.logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, null, null, null);
};
cljs.pprint.map__GT_logical_block = function cljs$pprint$map__GT_logical_block(G__7993) {
  return new cljs.pprint.logical_block((new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(G__7993), (new cljs.core.Keyword(null, "section", "section", -300141526)).cljs$core$IFn$_invoke$arity$1(G__7993), (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(G__7993), (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(G__7993), (new cljs.core.Keyword(null, "done-nl", "done-nl", 
  -381024340)).cljs$core$IFn$_invoke$arity$1(G__7993), (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(G__7993), (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(G__7993), (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(G__7993), (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(G__7993), (new cljs.core.Keyword(null, 
  "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(G__7993), null, cljs.core.dissoc.call(null, G__7993, new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", 
  "intra-block-nl", 1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)), null);
};
cljs.pprint.ancestor_QMARK_ = function cljs$pprint$ancestor_QMARK_(parent, child) {
  var child__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child);
  while (true) {
    if (child__$1 == null) {
      return false;
    } else {
      if (parent === child__$1) {
        return true;
      } else {
        var G__7999 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child__$1);
        child__$1 = G__7999;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.buffer_length = function cljs$pprint$buffer_length(l) {
  var l__$1 = cljs.core.seq.call(null, l);
  if (l__$1) {
    return (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(cljs.core.last.call(null, l__$1)) - (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, l__$1));
  } else {
    return 0;
  }
};
cljs.pprint.buffer_blob = function(type_tag, data, trailing_white_space, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.data = data;
  this.trailing_white_space = trailing_white_space;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k8001, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__8003 = k8001 instanceof cljs.core.Keyword ? k8001.fqn : null;
  switch(G__8003) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "data":
      return self__.data;
      break;
    case "trailing-white-space":
      return self__.trailing_white_space;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k8001, else__5124__auto__);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#cljs.pprint.buffer-blob{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$ = true;
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__8000) {
  var self__ = this;
  var G__8000__$1 = this;
  return new cljs.core.RecordIter(0, G__8000__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, 
  self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null, new cljs.core.Keyword(null, "data", "data", -232669377), null], null), 
  null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__8000) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__8004 = cljs.core.keyword_identical_QMARK_;
  var expr__8005 = k__5129__auto__;
  if (cljs.core.truth_(pred__8004.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__8005))) {
    return new cljs.pprint.buffer_blob(G__8000, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__8004.call(null, new cljs.core.Keyword(null, "data", "data", -232669377), expr__8005))) {
      return new cljs.pprint.buffer_blob(self__.type_tag, G__8000, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__8004.call(null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), expr__8005))) {
        return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, G__8000, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__8004.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__8005))) {
          return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, G__8000, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__8004.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__8005))) {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, G__8000, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__8000), null);
          }
        }
      }
    }
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], 
  null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__8000) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, G__8000, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
cljs.pprint.buffer_blob.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "trailing-white-space", "trailing-white-space", -1158428773, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.buffer_blob.cljs$lang$type = true;
cljs.pprint.buffer_blob.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/buffer-blob");
};
cljs.pprint.buffer_blob.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "cljs.pprint/buffer-blob");
};
cljs.pprint.__GT_buffer_blob = function cljs$pprint$__GT_buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_buffer_blob = function cljs$pprint$map__GT_buffer_blob(G__8002) {
  return new cljs.pprint.buffer_blob((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__8002), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(G__8002), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(G__8002), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__8002), (new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__8002), null, cljs.core.dissoc.call(null, G__8002, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_buffer_blob = function cljs$pprint$make_buffer_blob(data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.buffer_blob_QMARK_ = function cljs$pprint$buffer_blob_QMARK_(x__6759__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__6759__auto__), new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173));
};
cljs.pprint.nl_t = function(type_tag, type, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.type = type;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k8009, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__8011 = k8009 instanceof cljs.core.Keyword ? k8009.fqn : null;
  switch(G__8011) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "type":
      return self__.type;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k8009, else__5124__auto__);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#cljs.pprint.nl-t{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.nl_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__8008) {
  var self__ = this;
  var G__8008__$1 = this;
  return new cljs.core.RecordIter(0, G__8008__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, 
  self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.nl_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.nl_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "type", "type", 1174270348), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__8008) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__8012 = cljs.core.keyword_identical_QMARK_;
  var expr__8013 = k__5129__auto__;
  if (cljs.core.truth_(pred__8012.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__8013))) {
    return new cljs.pprint.nl_t(G__8008, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__8012.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), expr__8013))) {
      return new cljs.pprint.nl_t(self__.type_tag, G__8008, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__8012.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__8013))) {
        return new cljs.pprint.nl_t(self__.type_tag, self__.type, G__8008, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__8012.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__8013))) {
          return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, G__8008, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__8012.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__8013))) {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, G__8008, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__8008), null);
          }
        }
      }
    }
  }
};
cljs.pprint.nl_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), 
  self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__8008) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, G__8008, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
cljs.pprint.nl_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.nl_t.cljs$lang$type = true;
cljs.pprint.nl_t.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/nl-t");
};
cljs.pprint.nl_t.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "cljs.pprint/nl-t");
};
cljs.pprint.__GT_nl_t = function cljs$pprint$__GT_nl_t(type_tag, type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(type_tag, type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_nl_t = function cljs$pprint$map__GT_nl_t(G__8010) {
  return new cljs.pprint.nl_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__8010), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(G__8010), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__8010), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__8010), (new cljs.core.Keyword(null, "end-pos", "end-pos", 
  -1643883926)).cljs$core$IFn$_invoke$arity$1(G__8010), null, cljs.core.dissoc.call(null, G__8010, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_nl_t = function cljs$pprint$make_nl_t(type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.nl_t_QMARK_ = function cljs$pprint$nl_t_QMARK_(x__6759__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__6759__auto__), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114));
};
cljs.pprint.start_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k8017, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__8019 = k8017 instanceof cljs.core.Keyword ? k8017.fqn : null;
  switch(G__8019) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k8017, else__5124__auto__);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#cljs.pprint.start-block-t{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__8016) {
  var self__ = this;
  var G__8016__$1 = this;
  return new cljs.core.RecordIter(0, G__8016__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.start_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.start_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__8016) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__8020 = cljs.core.keyword_identical_QMARK_;
  var expr__8021 = k__5129__auto__;
  if (cljs.core.truth_(pred__8020.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__8021))) {
    return new cljs.pprint.start_block_t(G__8016, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__8020.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__8021))) {
      return new cljs.pprint.start_block_t(self__.type_tag, G__8016, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__8020.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__8021))) {
        return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, G__8016, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__8020.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__8021))) {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__8016, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__8016), null);
        }
      }
    }
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__8016) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__8016, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
cljs.pprint.start_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.start_block_t.cljs$lang$type = true;
cljs.pprint.start_block_t.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/start-block-t");
};
cljs.pprint.start_block_t.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "cljs.pprint/start-block-t");
};
cljs.pprint.__GT_start_block_t = function cljs$pprint$__GT_start_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_start_block_t = function cljs$pprint$map__GT_start_block_t(G__8018) {
  return new cljs.pprint.start_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__8018), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__8018), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__8018), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__8018), null, cljs.core.dissoc.call(null, 
  G__8018, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_start_block_t = function cljs$pprint$make_start_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.start_block_t_QMARK_ = function cljs$pprint$start_block_t_QMARK_(x__6759__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__6759__auto__), new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594));
};
cljs.pprint.end_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k8025, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__8027 = k8025 instanceof cljs.core.Keyword ? k8025.fqn : null;
  switch(G__8027) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k8025, else__5124__auto__);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#cljs.pprint.end-block-t{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__8024) {
  var self__ = this;
  var G__8024__$1 = this;
  return new cljs.core.RecordIter(0, G__8024__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.end_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.end_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__8024) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__8028 = cljs.core.keyword_identical_QMARK_;
  var expr__8029 = k__5129__auto__;
  if (cljs.core.truth_(pred__8028.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__8029))) {
    return new cljs.pprint.end_block_t(G__8024, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__8028.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__8029))) {
      return new cljs.pprint.end_block_t(self__.type_tag, G__8024, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__8028.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__8029))) {
        return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, G__8024, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__8028.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__8029))) {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__8024, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__8024), null);
        }
      }
    }
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__8024) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__8024, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
cljs.pprint.end_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.end_block_t.cljs$lang$type = true;
cljs.pprint.end_block_t.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/end-block-t");
};
cljs.pprint.end_block_t.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "cljs.pprint/end-block-t");
};
cljs.pprint.__GT_end_block_t = function cljs$pprint$__GT_end_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_end_block_t = function cljs$pprint$map__GT_end_block_t(G__8026) {
  return new cljs.pprint.end_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__8026), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__8026), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__8026), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__8026), null, cljs.core.dissoc.call(null, 
  G__8026, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_end_block_t = function cljs$pprint$make_end_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.end_block_t_QMARK_ = function cljs$pprint$end_block_t_QMARK_(x__6759__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__6759__auto__), new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735));
};
cljs.pprint.indent_t = function(type_tag, logical_block, relative_to, offset, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.relative_to = relative_to;
  this.offset = offset;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k8033, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__8035 = k8033 instanceof cljs.core.Keyword ? k8033.fqn : null;
  switch(G__8035) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "relative-to":
      return self__.relative_to;
      break;
    case "offset":
      return self__.offset;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k8033, else__5124__auto__);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#cljs.pprint.indent-t{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IIterable$ = true;
cljs.pprint.indent_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__8032) {
  var self__ = this;
  var G__8032__$1 = this;
  return new cljs.core.RecordIter(0, G__8032__$1, 6, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.indent_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 6 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.indent_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__8032) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__8036 = cljs.core.keyword_identical_QMARK_;
  var expr__8037 = k__5129__auto__;
  if (cljs.core.truth_(pred__8036.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__8037))) {
    return new cljs.pprint.indent_t(G__8032, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__8036.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__8037))) {
      return new cljs.pprint.indent_t(self__.type_tag, G__8032, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__8036.call(null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), expr__8037))) {
        return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, G__8032, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__8036.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__8037))) {
          return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, G__8032, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__8036.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__8037))) {
            return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, G__8032, self__.end_pos, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__8036.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__8037))) {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, G__8032, self__.__meta, self__.__extmap, null);
            } else {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__8032), null);
            }
          }
        }
      }
    }
  }
};
cljs.pprint.indent_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), 
  new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__8032) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, G__8032, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
cljs.pprint.indent_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "relative-to", "relative-to", 1170431476, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", 
  -3352399, null)], null);
};
cljs.pprint.indent_t.cljs$lang$type = true;
cljs.pprint.indent_t.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/indent-t");
};
cljs.pprint.indent_t.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "cljs.pprint/indent-t");
};
cljs.pprint.__GT_indent_t = function cljs$pprint$__GT_indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_indent_t = function cljs$pprint$map__GT_indent_t(G__8034) {
  return new cljs.pprint.indent_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__8034), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__8034), (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(G__8034), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__8034), (new cljs.core.Keyword(null, "start-pos", 
  "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__8034), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__8034), null, cljs.core.dissoc.call(null, G__8034, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)), null);
};
cljs.pprint.make_indent_t = function cljs$pprint$make_indent_t(logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.indent_t_QMARK_ = function cljs$pprint$indent_t_QMARK_(x__6759__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__6759__auto__), new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969));
};
cljs.pprint.pp_newline = function cljs$pprint$pp_newline() {
  return "\n";
};
if (typeof cljs.pprint.write_token !== "undefined") {
} else {
  cljs.pprint.write_token = function() {
    var method_table__5420__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5421__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5422__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5423__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5424__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "write-token"), function(method_table__5420__auto__, prefer_table__5421__auto__, method_cache__5422__auto__, cached_hierarchy__5423__auto__, hierarchy__5424__auto__) {
      return function(p1__8041_SHARP_, p2__8040_SHARP_) {
        return (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(p2__8040_SHARP_);
      };
    }(method_table__5420__auto__, prefer_table__5421__auto__, method_cache__5422__auto__, cached_hierarchy__5423__auto__, hierarchy__5424__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5424__auto__, method_table__5420__auto__, prefer_table__5421__auto__, method_cache__5422__auto__, cached_hierarchy__5423__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), function(this$, token) {
  var temp__4425__auto___8042 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4425__auto___8042)) {
    var cb_8043 = temp__4425__auto___8042;
    cb_8043.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
  } else {
  }
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  var temp__4425__auto___8044 = (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(temp__4425__auto___8044)) {
    var prefix_8045 = temp__4425__auto___8044;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix_8045);
  } else {
  }
  var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), function(this$, token) {
  var temp__4425__auto___8046 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4425__auto___8046)) {
    var cb_8047 = temp__4425__auto___8046;
    cb_8047.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
  } else {
  }
  var temp__4425__auto__ = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token));
  if (cljs.core.truth_(temp__4425__auto__)) {
    var suffix = temp__4425__auto__;
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), function(this$, token) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(token) + function() {
    var pred__8048 = cljs.core._EQ_;
    var expr__8049 = (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(token);
    if (cljs.core.truth_(pred__8048.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__8049))) {
      return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
    } else {
      if (cljs.core.truth_(pred__8048.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__8049))) {
        return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
      } else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__8049)].join(""));
      }
    }
  }());
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), function(this$, token) {
  return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(token));
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), function(this$, token) {
  if (cljs.core.truth_(function() {
    var or__4526__auto__ = cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336));
    if (or__4526__auto__) {
      return or__4526__auto__;
    } else {
      var and__4514__auto__ = !cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "fill", "fill", 883462889));
      if (and__4514__auto__) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token)));
      } else {
        return and__4514__auto__;
      }
    }
  }())) {
    cljs.pprint.emit_nl.call(null, this$, token);
  } else {
    var temp__4423__auto___8051 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4423__auto___8051)) {
      var tws_8052 = temp__4423__auto___8051;
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_8052);
    } else {
    }
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
});
cljs.pprint.write_tokens = function cljs$pprint$write_tokens(this$, tokens, force_trailing_whitespace) {
  var seq__8057 = cljs.core.seq.call(null, tokens);
  var chunk__8058 = null;
  var count__8059 = 0;
  var i__8060 = 0;
  while (true) {
    if (i__8060 < count__8059) {
      var token = cljs.core._nth.call(null, chunk__8058, i__8060);
      if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
        var temp__4423__auto___8061 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
        if (cljs.core.truth_(temp__4423__auto___8061)) {
          var tws_8062 = temp__4423__auto___8061;
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_8062);
        } else {
        }
      } else {
      }
      cljs.pprint.write_token.call(null, this$, token);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
      var tws_8063 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      if (cljs.core.truth_(function() {
        var and__4514__auto__ = force_trailing_whitespace;
        if (cljs.core.truth_(and__4514__auto__)) {
          return tws_8063;
        } else {
          return and__4514__auto__;
        }
      }())) {
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_8063);
        cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
      } else {
      }
      var G__8064 = seq__8057;
      var G__8065 = chunk__8058;
      var G__8066 = count__8059;
      var G__8067 = i__8060 + 1;
      seq__8057 = G__8064;
      chunk__8058 = G__8065;
      count__8059 = G__8066;
      i__8060 = G__8067;
      continue;
    } else {
      var temp__4425__auto__ = cljs.core.seq.call(null, seq__8057);
      if (temp__4425__auto__) {
        var seq__8057__$1 = temp__4425__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__8057__$1)) {
          var c__5310__auto__ = cljs.core.chunk_first.call(null, seq__8057__$1);
          var G__8068 = cljs.core.chunk_rest.call(null, seq__8057__$1);
          var G__8069 = c__5310__auto__;
          var G__8070 = cljs.core.count.call(null, c__5310__auto__);
          var G__8071 = 0;
          seq__8057 = G__8068;
          chunk__8058 = G__8069;
          count__8059 = G__8070;
          i__8060 = G__8071;
          continue;
        } else {
          var token = cljs.core.first.call(null, seq__8057__$1);
          if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
            var temp__4423__auto___8072 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
            if (cljs.core.truth_(temp__4423__auto___8072)) {
              var tws_8073 = temp__4423__auto___8072;
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_8073);
            } else {
            }
          } else {
          }
          cljs.pprint.write_token.call(null, this$, token);
          cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
          var tws_8074 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
          if (cljs.core.truth_(function() {
            var and__4514__auto__ = force_trailing_whitespace;
            if (cljs.core.truth_(and__4514__auto__)) {
              return tws_8074;
            } else {
              return and__4514__auto__;
            }
          }())) {
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_8074);
            cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
          } else {
          }
          var G__8075 = cljs.core.next.call(null, seq__8057__$1);
          var G__8076 = null;
          var G__8077 = 0;
          var G__8078 = 0;
          seq__8057 = G__8075;
          chunk__8058 = G__8076;
          count__8059 = G__8077;
          i__8060 = G__8078;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.pprint.tokens_fit_QMARK_ = function cljs$pprint$tokens_fit_QMARK_(this$, tokens) {
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  return maxcol == null || cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))) + cljs.pprint.buffer_length.call(null, tokens) < maxcol;
};
cljs.pprint.linear_nl_QMARK_ = function cljs$pprint$linear_nl_QMARK_(this$, lb, section) {
  var or__4526__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__4526__auto__)) {
    return or__4526__auto__;
  } else {
    return cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, section));
  }
};
cljs.pprint.miser_nl_QMARK_ = function cljs$pprint$miser_nl_QMARK_(this$, lb, section) {
  var miser_width = cljs.pprint.get_miser_width.call(null, this$);
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  var and__4514__auto__ = miser_width;
  if (cljs.core.truth_(and__4514__auto__)) {
    var and__4514__auto____$1 = maxcol;
    if (cljs.core.truth_(and__4514__auto____$1)) {
      var and__4514__auto____$2 = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb)) >= maxcol - miser_width;
      if (and__4514__auto____$2) {
        return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
      } else {
        return and__4514__auto____$2;
      }
    } else {
      return and__4514__auto____$1;
    }
  } else {
    return and__4514__auto__;
  }
};
if (typeof cljs.pprint.emit_nl_QMARK_ !== "undefined") {
} else {
  cljs.pprint.emit_nl_QMARK_ = function() {
    var method_table__5420__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5421__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5422__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5423__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5424__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "emit-nl?"), function(method_table__5420__auto__, prefer_table__5421__auto__, method_cache__5422__auto__, cached_hierarchy__5423__auto__, hierarchy__5424__auto__) {
      return function(t, _, ___$1, ___$2) {
        return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(t);
      };
    }(method_table__5420__auto__, prefer_table__5421__auto__, method_cache__5422__auto__, cached_hierarchy__5423__auto__, hierarchy__5424__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5424__auto__, method_table__5420__auto__, prefer_table__5421__auto__, method_cache__5422__auto__, cached_hierarchy__5423__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "linear", "linear", 872268697), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "miser", "miser", -556060186), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "fill", "fill", 883462889), function(newl, this$, section, subsection) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  var or__4526__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__4526__auto__)) {
    return or__4526__auto__;
  } else {
    var or__4526__auto____$1 = cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, subsection));
    if (or__4526__auto____$1) {
      return or__4526__auto____$1;
    } else {
      return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
    }
  }
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), function(_, ___$1, ___$2, ___$3) {
  return true;
});
cljs.pprint.get_section = function cljs$pprint$get_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(nl, lb) {
    return function(p1__8079_SHARP_) {
      return cljs.core.not.call(null, function() {
        var and__4514__auto__ = cljs.pprint.nl_t_QMARK_.call(null, p1__8079_SHARP_);
        if (cljs.core.truth_(and__4514__auto__)) {
          return cljs.pprint.ancestor_QMARK_.call(null, (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__8079_SHARP_), lb);
        } else {
          return and__4514__auto__;
        }
      }());
    };
  }(nl, lb), cljs.core.next.call(null, buffer)));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [section, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, section) + 1, buffer))], null);
};
cljs.pprint.get_sub_section = function cljs$pprint$get_sub_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(nl, lb) {
    return function(p1__8080_SHARP_) {
      var nl_lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__8080_SHARP_);
      return cljs.core.not.call(null, function() {
        var and__4514__auto__ = cljs.pprint.nl_t_QMARK_.call(null, p1__8080_SHARP_);
        if (cljs.core.truth_(and__4514__auto__)) {
          var or__4526__auto__ = cljs.core._EQ_.call(null, nl_lb, lb);
          if (or__4526__auto__) {
            return or__4526__auto__;
          } else {
            return cljs.pprint.ancestor_QMARK_.call(null, nl_lb, lb);
          }
        } else {
          return and__4514__auto__;
        }
      }());
    };
  }(nl, lb), cljs.core.next.call(null, buffer)));
  return section;
};
cljs.pprint.update_nl_state = function cljs$pprint$update_nl_state(lb) {
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb), true);
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb), true);
  var lb__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb);
  while (true) {
    if (cljs.core.truth_(lb__$1)) {
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      var G__8081 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb__$1);
      lb__$1 = G__8081;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.emit_nl = function cljs$pprint$emit_nl(this$, nl) {
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(prefix)) {
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
  } else {
  }
  var istr_8082 = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb)) - cljs.core.count.call(null, prefix), " "));
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), istr_8082);
  return cljs.pprint.update_nl_state.call(null, lb);
};
cljs.pprint.split_at_newline = function cljs$pprint$split_at_newline(tokens) {
  var pre = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(p1__8083_SHARP_) {
    return cljs.core.not.call(null, cljs.pprint.nl_t_QMARK_.call(null, p1__8083_SHARP_));
  }, tokens));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pre, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, pre), tokens))], null);
};
cljs.pprint.write_token_string = function cljs$pprint$write_token_string(this$, tokens) {
  var vec__8086 = cljs.pprint.split_at_newline.call(null, tokens);
  var a = cljs.core.nth.call(null, vec__8086, 0, null);
  var b = cljs.core.nth.call(null, vec__8086, 1, null);
  if (cljs.core.truth_(a)) {
    cljs.pprint.write_tokens.call(null, this$, a, false);
  } else {
  }
  if (cljs.core.truth_(b)) {
    var vec__8087 = cljs.pprint.get_section.call(null, b);
    var section = cljs.core.nth.call(null, vec__8087, 0, null);
    var remainder = cljs.core.nth.call(null, vec__8087, 1, null);
    var newl = cljs.core.first.call(null, b);
    var do_nl = cljs.pprint.emit_nl_QMARK_.call(null, newl, this$, section, cljs.pprint.get_sub_section.call(null, b));
    var result = cljs.core.truth_(do_nl) ? function() {
      cljs.pprint.emit_nl.call(null, this$, newl);
      return cljs.core.next.call(null, b);
    }() : b;
    var long_section = cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, result));
    var result__$1 = long_section ? function() {
      var rem2 = cljs$pprint$write_token_string.call(null, this$, section);
      if (cljs.core._EQ_.call(null, rem2, section)) {
        cljs.pprint.write_tokens.call(null, this$, section, false);
        return remainder;
      } else {
        return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.concat.call(null, rem2, remainder));
      }
    }() : result;
    return result__$1;
  } else {
    return null;
  }
};
cljs.pprint.write_line = function cljs$pprint$write_line(this$) {
  var buffer = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  while (true) {
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, buffer));
    if (cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, buffer))) {
      var new_buffer = cljs.pprint.write_token_string.call(null, this$, buffer);
      if (!(buffer === new_buffer)) {
        var G__8088 = new_buffer;
        buffer = G__8088;
        continue;
      } else {
        return null;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.add_to_buffer = function cljs$pprint$add_to_buffer(this$, token) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), token));
  if (cljs.core.not.call(null, cljs.pprint.tokens_fit_QMARK_.call(null, this$, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))))) {
    return cljs.pprint.write_line.call(null, this$);
  } else {
    return null;
  }
};
cljs.pprint.write_buffered_output = function cljs$pprint$write_buffered_output(this$) {
  cljs.pprint.write_line.call(null, this$);
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var buf = temp__4423__auto__;
    cljs.pprint.write_tokens.call(null, this$, buf, true);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
  } else {
    return null;
  }
};
cljs.pprint.write_white_space = function cljs$pprint$write_white_space(this$) {
  var temp__4425__auto__ = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__4425__auto__)) {
    var tws = temp__4425__auto__;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  } else {
    return null;
  }
};
cljs.pprint.write_initial_lines = function cljs$pprint$write_initial_lines(this$, s) {
  var lines = clojure.string.split.call(null, s, "\n", -1);
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, lines), 1)) {
    return s;
  } else {
    var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))));
    var l = cljs.core.first.call(null, lines);
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))))) {
      var oldpos_8097 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos_8098 = oldpos_8097 + cljs.core.count.call(null, l);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_8098);
      cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, l, null, oldpos_8097, newpos_8098));
      cljs.pprint.write_buffered_output.call(null, this$);
    } else {
      cljs.pprint.write_white_space.call(null, this$);
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l);
    }
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), "\n");
    var seq__8093_8099 = cljs.core.seq.call(null, cljs.core.next.call(null, cljs.core.butlast.call(null, lines)));
    var chunk__8094_8100 = null;
    var count__8095_8101 = 0;
    var i__8096_8102 = 0;
    while (true) {
      if (i__8096_8102 < count__8095_8101) {
        var l_8103__$1 = cljs.core._nth.call(null, chunk__8094_8100, i__8096_8102);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_8103__$1);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
        if (cljs.core.truth_(prefix)) {
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
        } else {
        }
        var G__8104 = seq__8093_8099;
        var G__8105 = chunk__8094_8100;
        var G__8106 = count__8095_8101;
        var G__8107 = i__8096_8102 + 1;
        seq__8093_8099 = G__8104;
        chunk__8094_8100 = G__8105;
        count__8095_8101 = G__8106;
        i__8096_8102 = G__8107;
        continue;
      } else {
        var temp__4425__auto___8108 = cljs.core.seq.call(null, seq__8093_8099);
        if (temp__4425__auto___8108) {
          var seq__8093_8109__$1 = temp__4425__auto___8108;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__8093_8109__$1)) {
            var c__5310__auto___8110 = cljs.core.chunk_first.call(null, seq__8093_8109__$1);
            var G__8111 = cljs.core.chunk_rest.call(null, seq__8093_8109__$1);
            var G__8112 = c__5310__auto___8110;
            var G__8113 = cljs.core.count.call(null, c__5310__auto___8110);
            var G__8114 = 0;
            seq__8093_8099 = G__8111;
            chunk__8094_8100 = G__8112;
            count__8095_8101 = G__8113;
            i__8096_8102 = G__8114;
            continue;
          } else {
            var l_8115__$1 = cljs.core.first.call(null, seq__8093_8109__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_8115__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
            if (cljs.core.truth_(prefix)) {
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
            } else {
            }
            var G__8116 = cljs.core.next.call(null, seq__8093_8109__$1);
            var G__8117 = null;
            var G__8118 = 0;
            var G__8119 = 0;
            seq__8093_8099 = G__8116;
            chunk__8094_8100 = G__8117;
            count__8095_8101 = G__8118;
            i__8096_8102 = G__8119;
            continue;
          }
        } else {
        }
      }
      break;
    }
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), new cljs.core.Keyword(null, "writing", "writing", -1486865108));
    return cljs.core.last.call(null, lines);
  }
};
cljs.pprint.p_write_char = function cljs$pprint$p_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), c);
  } else {
    if (cljs.core._EQ_.call(null, c, "\n")) {
      return cljs.pprint.write_initial_lines.call(null, this$, "\n");
    } else {
      var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos = oldpos + 1;
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
      return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, cljs.core.char$.call(null, c), null, oldpos, newpos));
    }
  }
};
cljs.pprint.pretty_writer = function cljs$pprint$pretty_writer(writer, max_columns, miser_width) {
  var lb = new cljs.pprint.logical_block(null, null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), null, null, null, null, null, null, null);
  var fields = cljs.core.atom.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "buffer-block", "buffer-block", -10937307), new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267), new cljs.core.Keyword(null, "sections", "sections", -886710106), new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.Keyword(null, "buffer-level", "buffer-level", 928864731), new cljs.core.Keyword(null, "buffer", "buffer", 617295198)], [lb, miser_width, lb, true, null, new cljs.core.Keyword(null, "writing", "writing", -1486865108), 0, null, cljs.pprint.column_writer.call(null, writer, max_columns), 1, cljs.core.PersistentVector.EMPTY]));
  if (typeof cljs.pprint.t8126 !== "undefined") {
  } else {
    cljs.pprint.t8126 = function(pretty_writer, writer, max_columns, miser_width, lb, fields, meta8127) {
      this.pretty_writer = pretty_writer;
      this.writer = writer;
      this.max_columns = max_columns;
      this.miser_width = miser_width;
      this.lb = lb;
      this.fields = fields;
      this.meta8127 = meta8127;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t8126.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(lb, fields) {
      return function(_8128, meta8127__$1) {
        var self__ = this;
        var _8128__$1 = this;
        return new cljs.pprint.t8126(self__.pretty_writer, self__.writer, self__.max_columns, self__.miser_width, self__.lb, self__.fields, meta8127__$1);
      };
    }(lb, fields);
    cljs.pprint.t8126.prototype.cljs$core$IMeta$_meta$arity$1 = function(lb, fields) {
      return function(_8128) {
        var self__ = this;
        var _8128__$1 = this;
        return self__.meta8127;
      };
    }(lb, fields);
    cljs.pprint.t8126.prototype.cljs$core$IDeref$_deref$arity$1 = function(lb, fields) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return self__.fields;
      };
    }(lb, fields);
    cljs.pprint.t8126.prototype.cljs$core$IWriter$_write$arity$2 = function(lb, fields) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__8129 = cljs.core._EQ_;
        var expr__8130 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__8129.call(null, String, expr__8130))) {
          var s0 = cljs.pprint.write_initial_lines.call(null, this$__$1, x);
          var s = clojure.string.replace_first.call(null, s0, /\s+$/, "");
          var white_space = cljs.core.subs.call(null, s0, cljs.core.count.call(null, s));
          var mode = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
          if (cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
            cljs.pprint.write_white_space.call(null, this$__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), s);
            return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), white_space);
          } else {
            var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
            var newpos = oldpos + cljs.core.count.call(null, s0);
            cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
            return cljs.pprint.add_to_buffer.call(null, this$__$1, cljs.pprint.make_buffer_blob.call(null, s, white_space, oldpos, newpos));
          }
        } else {
          if (cljs.core.truth_(pred__8129.call(null, Number, expr__8130))) {
            return cljs.pprint.p_write_char.call(null, this$__$1, x);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__8130)].join(""));
          }
        }
      };
    }(lb, fields);
    cljs.pprint.t8126.prototype.cljs$core$IWriter$_flush$arity$1 = function(lb, fields) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        cljs.pprint._ppflush.call(null, this$__$1);
        return cljs.core._flush.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))));
      };
    }(lb, fields);
    cljs.pprint.t8126.prototype.cljs$pprint$IPrettyFlush$ = true;
    cljs.pprint.t8126.prototype.cljs$pprint$IPrettyFlush$_ppflush$arity$1 = function(lb, fields) {
      return function(this$) {
        var self__ = this;
        var this$__$1 = this;
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), new cljs.core.Keyword(null, "buffering", "buffering", -876713613))) {
          cljs.pprint.write_tokens.call(null, this$__$1, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), true);
          return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
        } else {
          return cljs.pprint.write_white_space.call(null, this$__$1);
        }
      };
    }(lb, fields);
    cljs.pprint.t8126.getBasis = function(lb, fields) {
      return function() {
        return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "pretty-writer", "pretty-writer", 417697260, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null)], null)))], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null), 
        new cljs.core.Symbol(null, "lb", "lb", 950310490, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta8127", "meta8127", -2048173040, null)], null);
      };
    }(lb, fields);
    cljs.pprint.t8126.cljs$lang$type = true;
    cljs.pprint.t8126.cljs$lang$ctorStr = "cljs.pprint/t8126";
    cljs.pprint.t8126.cljs$lang$ctorPrWriter = function(lb, fields) {
      return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
        return cljs.core._write.call(null, writer__5106__auto__, "cljs.pprint/t8126");
      };
    }(lb, fields);
    cljs.pprint.__GT_t8126 = function(lb, fields) {
      return function cljs$pprint$pretty_writer_$___GT_t8126(pretty_writer__$1, writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta8127) {
        return new cljs.pprint.t8126(pretty_writer__$1, writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta8127);
      };
    }(lb, fields);
  }
  return new cljs.pprint.t8126(cljs$pprint$pretty_writer, writer, max_columns, miser_width, lb, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.start_block = function cljs$pprint$start_block(this$, prefix, per_line_prefix, suffix) {
  var lb = new cljs.pprint.logical_block((new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), prefix, per_line_prefix, suffix, null, null, null, null);
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    var temp__4425__auto___8132 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4425__auto___8132)) {
      var cb_8133 = temp__4425__auto___8132;
      cb_8133.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
    } else {
    }
    if (cljs.core.truth_(prefix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
    } else {
    }
    var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
    cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
    return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
  } else {
    var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos = oldpos + (cljs.core.truth_(prefix) ? cljs.core.count.call(null, prefix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_start_block_t.call(null, lb, oldpos, newpos));
  }
};
cljs.pprint.end_block = function cljs$pprint$end_block(this$) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  var suffix = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    if (cljs.core.truth_(suffix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
    } else {
    }
    var temp__4425__auto___8134 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__4425__auto___8134)) {
      var cb_8135 = temp__4425__auto___8134;
      cb_8135.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
    } else {
    }
  } else {
    var oldpos_8136 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos_8137 = oldpos_8136 + (cljs.core.truth_(suffix) ? cljs.core.count.call(null, suffix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_8137);
    cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_end_block_t.call(null, lb, oldpos_8136, newpos_8137));
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb));
};
cljs.pprint.nl = function cljs$pprint$nl(this$, type) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "buffering", "buffering", -876713613));
  var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_nl_t.call(null, type, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), pos, pos));
};
cljs.pprint.indent = function cljs$pprint$indent(this$, relative_to, offset) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), offset + function() {
      var pred__8141 = cljs.core._EQ_;
      var expr__8142 = relative_to;
      if (cljs.core.truth_(pred__8141.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__8142))) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
      } else {
        if (cljs.core.truth_(pred__8141.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__8142))) {
          return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__8142)].join(""));
        }
      }
    }());
  } else {
    var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_indent_t.call(null, lb, relative_to, offset, pos, pos));
  }
};
cljs.pprint.get_miser_width = function cljs$pprint$get_miser_width(this$) {
  return (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint._STAR_print_pretty_STAR_ = true;
if (typeof cljs.pprint._STAR_print_pprint_dispatch_STAR_ !== "undefined") {
} else {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = null;
}
cljs.pprint._STAR_print_right_margin_STAR_ = 72;
cljs.pprint._STAR_print_miser_width_STAR_ = 40;
cljs.pprint._STAR_print_lines_STAR_ = null;
cljs.pprint._STAR_print_circle_STAR_ = null;
cljs.pprint._STAR_print_shared_STAR_ = null;
cljs.pprint._STAR_print_suppress_namespaces_STAR_ = null;
cljs.pprint._STAR_print_radix_STAR_ = null;
cljs.pprint._STAR_print_base_STAR_ = 10;
cljs.pprint._STAR_current_level_STAR_ = 0;
cljs.pprint._STAR_current_length_STAR_ = null;
cljs.pprint.write_option_table = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306), new cljs.core.Keyword(null, "circle", "circle", 1903212362), new cljs.core.Keyword(null, "lines", "lines", -700165781), new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956), new cljs.core.Keyword(null, "radix", "radix", 857016463), new cljs.core.Keyword(null, 
"level", "level", 1290497552), new cljs.core.Keyword(null, "readably", "readably", 1129599760), new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009), new cljs.core.Keyword(null, "length", "length", 588987862), new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), new cljs.core.Keyword(null, "base", "base", 185279322)], [new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_miser_width_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-miser-width*", "cljs.pprint/*print-miser-width*", 1588913450, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-miser-width*", "*print-miser-width*", 
1206624211, null), "/home/kenneth/md/target/cljsbuild-compiler-2/cljs/pprint.cljs", 21, 1, true, 632, 637, cljs.core.List.EMPTY, "The column at which to enter miser style. Depending on the dispatch table,\nmiser style add newlines in more places to try to keep lines short allowing for further\nlevels of nesting.", cljs.core.truth_(cljs.pprint._STAR_print_miser_width_STAR_) ? cljs.pprint._STAR_print_miser_width_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_right_margin_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-right-margin*", "cljs.pprint/*print-right-margin*", -56183119, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-right-margin*", "*print-right-margin*", 
-437272454, null), "/home/kenneth/md/target/cljsbuild-compiler-2/cljs/pprint.cljs", 22, 1, true, 625, 630, cljs.core.List.EMPTY, "Pretty printing will try to avoid anything going beyond this column.\nSet it to nil to have pprint let the line be arbitrarily long. This will ignore all\nnon-mandatory newlines.", cljs.core.truth_(cljs.pprint._STAR_print_right_margin_STAR_) ? cljs.pprint._STAR_print_right_margin_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_circle_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-circle*", "cljs.pprint/*print-circle*", 1606185849, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-circle*", "*print-circle*", 
1148404994, null), "/home/kenneth/md/target/cljsbuild-compiler-2/cljs/pprint.cljs", 15, 1, true, 646, 649, cljs.core.List.EMPTY, "Mark circular structures (N.B. This is not yet used)", cljs.core.truth_(cljs.pprint._STAR_print_circle_STAR_) ? cljs.pprint._STAR_print_circle_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_lines_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-lines*", "cljs.pprint/*print-lines*", 534683484, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-lines*", "*print-lines*", 
75920659, null), "/home/kenneth/md/target/cljsbuild-compiler-2/cljs/pprint.cljs", 14, 1, true, 640, 643, cljs.core.List.EMPTY, "Maximum number of lines to print in a pretty print instance (N.B. This is not yet used)", cljs.core.truth_(cljs.pprint._STAR_print_lines_STAR_) ? cljs.pprint._STAR_print_lines_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_suppress_namespaces_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-suppress-namespaces*", "cljs.pprint/*print-suppress-namespaces*", 1649488204, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", 
"column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-suppress-namespaces*", 
"*print-suppress-namespaces*", 1795828355, null), "/home/kenneth/md/target/cljsbuild-compiler-2/cljs/pprint.cljs", 28, 1, true, 657, 661, cljs.core.List.EMPTY, "Don't print namespaces with symbols. This is particularly useful when\npretty printing the results of macro expansions", cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_) ? cljs.pprint._STAR_print_suppress_namespaces_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_radix_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-radix*", "cljs.pprint/*print-radix*", 1558253641, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-radix*", "*print-radix*", 1168517744, null), "/home/kenneth/md/target/cljsbuild-compiler-2/cljs/pprint.cljs", 
14, 1, true, 665, 670, cljs.core.List.EMPTY, "Print a radix specifier in front of integers and rationals. If *print-base* is 2, 8,\nor 16, then the radix specifier used is #b, #o, or #x, respectively. Otherwise the\nradix specifier is in the form #XXr where XX is the decimal value of *print-base* ", cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? cljs.pprint._STAR_print_radix_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_level_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-level*", "cljs.core/*print-level*", 65848482, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-level*", "*print-level*", -634488505, null), "cljs/core.cljs", 16, 1, true, 112, 122, cljs.core.List.EMPTY, "*print-level* controls how many levels deep the printer will\n  print nested objects. If it is bound to logical false, there is no\n  limit. Otherwise, it must be bound to an integer indicating the maximum\n  level to print. Each argument to print is at level 0; if an argument is a\n  collection, its items are at level 1; and so on. If an object is a\n  collection and is at a level greater than or equal to the value bound to\n  *print-level*, the printer prints '#' to represent it. The root binding\n  is nil indicating no limit.", 
cljs.core.truth_(cljs.core._STAR_print_level_STAR_) ? cljs.core._STAR_print_level_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_readably_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-readably*", "cljs.core/*print-readably*", -354670250, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-readably*", "*print-readably*", -761361221, null), "cljs/core.cljs", 19, 1, true, 80, 86, cljs.core.List.EMPTY, 
"When set to logical false, strings and characters will be printed with\n  non-alphanumeric characters converted to the appropriate escape sequences.\n\n  Defaults to true", cljs.core.truth_(cljs.core._STAR_print_readably_STAR_) ? cljs.core._STAR_print_readably_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_pprint_dispatch_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-pprint-dispatch*", "cljs.pprint/*print-pprint-dispatch*", -1820734013, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-pprint-dispatch*", 
"*print-pprint-dispatch*", -1709114492, null), "/home/kenneth/md/target/cljsbuild-compiler-2/cljs/pprint.cljs", 25, 1, true, 619, 623, cljs.core.List.EMPTY, "The pretty print dispatch function. Use with-pprint-dispatch or\nset-pprint-dispatch to modify.", cljs.core.truth_(cljs.pprint._STAR_print_pprint_dispatch_STAR_) ? cljs.pprint._STAR_print_pprint_dispatch_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.core._STAR_print_length_STAR_;
}, new cljs.core.Symbol("cljs.core", "*print-length*", "cljs.core/*print-length*", -20766927, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "*print-length*", "*print-length*", -687693654, null), "cljs/core.cljs", 17, 1, true, 104, 110, cljs.core.List.EMPTY, "When set to logical true, objects will be printed in a way that preserves\n  their type when read in later.\n\n  Defaults to false.", 
cljs.core.truth_(cljs.core._STAR_print_length_STAR_) ? cljs.core._STAR_print_length_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_pretty_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-pretty*", "cljs.pprint/*print-pretty*", -762636861, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "dynamic", "dynamic", 704819571), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-pretty*", "*print-pretty*", 726795140, null), "/home/kenneth/md/target/cljsbuild-compiler-2/cljs/pprint.cljs", 
16, 1, true, 615, 617, cljs.core.List.EMPTY, "Bind to true if you want write to use pretty printing", cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_) ? cljs.pprint._STAR_print_pretty_STAR_.cljs$lang$test : null])), new cljs.core.Var(function() {
  return cljs.pprint._STAR_print_base_STAR_;
}, new cljs.core.Symbol("cljs.pprint", "*print-base*", "cljs.pprint/*print-base*", 1887526790, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "added", "added", 2057651688), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"dynamic", "dynamic", 704819571), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], ["1.2", new cljs.core.Symbol(null, "cljs.pprint", "cljs.pprint", -966900911, null), new cljs.core.Symbol(null, "*print-base*", "*print-base*", 2037937791, null), "/home/kenneth/md/target/cljsbuild-compiler-2/cljs/pprint.cljs", 
13, 1, true, 672, 675, cljs.core.List.EMPTY, "The base to use for printing integers and rationals.", cljs.core.truth_(cljs.pprint._STAR_print_base_STAR_) ? cljs.pprint._STAR_print_base_STAR_.cljs$lang$test : null]))]);
cljs.pprint.table_ize = function cljs$pprint$table_ize(t, m) {
  return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p1__8144_SHARP_) {
    var temp__4425__auto__ = cljs.core.get.call(null, t, cljs.core.key.call(null, p1__8144_SHARP_));
    if (cljs.core.truth_(temp__4425__auto__)) {
      var v = temp__4425__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, cljs.core.val.call(null, p1__8144_SHARP_)], null);
    } else {
      return null;
    }
  }, m));
};
cljs.pprint.pretty_writer_QMARK_ = function cljs$pprint$pretty_writer_QMARK_(x) {
  var and__4514__auto__ = !(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 32768 || x.cljs$core$IDeref$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x);
  if (and__4514__auto__) {
    return (new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, x)));
  } else {
    return and__4514__auto__;
  }
};
cljs.pprint.make_pretty_writer = function cljs$pprint$make_pretty_writer(base_writer, right_margin, miser_width) {
  return cljs.pprint.pretty_writer.call(null, base_writer, right_margin, miser_width);
};
cljs.pprint.write_out = function cljs$pprint$write_out(object) {
  var length_reached = function() {
    var and__4514__auto__ = cljs.pprint._STAR_current_length_STAR_;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = cljs.core._STAR_print_length_STAR_;
      if (cljs.core.truth_(and__4514__auto____$1)) {
        return cljs.pprint._STAR_current_length_STAR_ >= cljs.core._STAR_print_length_STAR_;
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }();
  if (cljs.core.not.call(null, cljs.pprint._STAR_print_pretty_STAR_)) {
    cljs.pprint.pr.call(null, object);
  } else {
    if (cljs.core.truth_(length_reached)) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
    } else {
      if (cljs.core.truth_(cljs.pprint._STAR_current_length_STAR_)) {
        cljs.pprint._STAR_current_length_STAR_ = cljs.pprint._STAR_current_length_STAR_ + 1;
      } else {
      }
      cljs.pprint._STAR_print_pprint_dispatch_STAR_.call(null, object);
    }
  }
  return length_reached;
};
cljs.pprint.write = function cljs$pprint$write() {
  var args__5572__auto__ = [];
  var len__5565__auto___8165 = arguments.length;
  var i__5566__auto___8166 = 0;
  while (true) {
    if (i__5566__auto___8166 < len__5565__auto___8165) {
      args__5572__auto__.push(arguments[i__5566__auto___8166]);
      var G__8167 = i__5566__auto___8166 + 1;
      i__5566__auto___8166 = G__8167;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 1 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(1), 0) : null;
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__5573__auto__);
};
cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic = function(object, kw_args) {
  var options = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "stream", "stream", 1534941648), true], null), cljs.core.apply.call(null, cljs.core.hash_map, kw_args));
  var _STAR_print_base_STAR_8151 = cljs.pprint._STAR_print_base_STAR_;
  var _STAR_print_circle_STAR_8152 = cljs.pprint._STAR_print_circle_STAR_;
  var _STAR_print_length_STAR_8153 = cljs.core._STAR_print_length_STAR_;
  var _STAR_print_level_STAR_8154 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_lines_STAR_8155 = cljs.pprint._STAR_print_lines_STAR_;
  var _STAR_print_miser_width_STAR_8156 = cljs.pprint._STAR_print_miser_width_STAR_;
  var _STAR_print_pprint_dispatch_STAR_8157 = cljs.pprint._STAR_print_pprint_dispatch_STAR_;
  var _STAR_print_pretty_STAR_8158 = cljs.pprint._STAR_print_pretty_STAR_;
  var _STAR_print_radix_STAR_8159 = cljs.pprint._STAR_print_radix_STAR_;
  var _STAR_print_readably_STAR_8160 = cljs.core._STAR_print_readably_STAR_;
  var _STAR_print_right_margin_STAR_8161 = cljs.pprint._STAR_print_right_margin_STAR_;
  var _STAR_print_suppress_namespaces_STAR_8162 = cljs.pprint._STAR_print_suppress_namespaces_STAR_;
  cljs.pprint._STAR_print_base_STAR_ = (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_base_STAR_);
  cljs.pprint._STAR_print_circle_STAR_ = (new cljs.core.Keyword(null, "circle", "circle", 1903212362)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_circle_STAR_);
  cljs.core._STAR_print_length_STAR_ = (new cljs.core.Keyword(null, "length", "length", 588987862)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_length_STAR_);
  cljs.core._STAR_print_level_STAR_ = (new cljs.core.Keyword(null, "level", "level", 1290497552)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_level_STAR_);
  cljs.pprint._STAR_print_lines_STAR_ = (new cljs.core.Keyword(null, "lines", "lines", -700165781)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_lines_STAR_);
  cljs.pprint._STAR_print_miser_width_STAR_ = (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_miser_width_STAR_);
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = (new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pprint_dispatch_STAR_);
  cljs.pprint._STAR_print_pretty_STAR_ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pretty_STAR_);
  cljs.pprint._STAR_print_radix_STAR_ = (new cljs.core.Keyword(null, "radix", "radix", 857016463)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_radix_STAR_);
  cljs.core._STAR_print_readably_STAR_ = (new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_readably_STAR_);
  cljs.pprint._STAR_print_right_margin_STAR_ = (new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_right_margin_STAR_);
  cljs.pprint._STAR_print_suppress_namespaces_STAR_ = (new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_suppress_namespaces_STAR_);
  try {
    try {
      var sb = new goog.string.StringBuffer;
      var optval = cljs.core.contains_QMARK_.call(null, options, new cljs.core.Keyword(null, "stream", "stream", 1534941648)) ? (new cljs.core.Keyword(null, "stream", "stream", 1534941648)).cljs$core$IFn$_invoke$arity$1(options) : true;
      var base_writer = optval === true || optval == null ? new cljs.core.StringBufferWriter(sb) : optval;
      if (cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_)) {
        var base_writer__6742__auto___8168 = base_writer;
        var new_writer__6743__auto___8169 = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__6742__auto___8168));
        var _STAR_out_STAR_8163_8170 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = new_writer__6743__auto___8169 ? cljs.pprint.make_pretty_writer.call(null, base_writer__6742__auto___8168, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__6742__auto___8168;
        try {
          cljs.pprint.write_out.call(null, object);
          cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_8163_8170;
        }
      } else {
        var _STAR_out_STAR_8164_8171 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = base_writer;
        try {
          cljs.pprint.pr.call(null, object);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_8164_8171;
        }
      }
      if (optval === true) {
        cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
      } else {
      }
      if (optval == null) {
        return [cljs.core.str(sb)].join("");
      } else {
        return null;
      }
    } finally {
    }
  } finally {
    cljs.pprint._STAR_print_suppress_namespaces_STAR_ = _STAR_print_suppress_namespaces_STAR_8162;
    cljs.pprint._STAR_print_right_margin_STAR_ = _STAR_print_right_margin_STAR_8161;
    cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR_8160;
    cljs.pprint._STAR_print_radix_STAR_ = _STAR_print_radix_STAR_8159;
    cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR_8158;
    cljs.pprint._STAR_print_pprint_dispatch_STAR_ = _STAR_print_pprint_dispatch_STAR_8157;
    cljs.pprint._STAR_print_miser_width_STAR_ = _STAR_print_miser_width_STAR_8156;
    cljs.pprint._STAR_print_lines_STAR_ = _STAR_print_lines_STAR_8155;
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_8154;
    cljs.core._STAR_print_length_STAR_ = _STAR_print_length_STAR_8153;
    cljs.pprint._STAR_print_circle_STAR_ = _STAR_print_circle_STAR_8152;
    cljs.pprint._STAR_print_base_STAR_ = _STAR_print_base_STAR_8151;
  }
};
cljs.pprint.write.cljs$lang$maxFixedArity = 1;
cljs.pprint.write.cljs$lang$applyTo = function(seq8149) {
  var G__8150 = cljs.core.first.call(null, seq8149);
  var seq8149__$1 = cljs.core.next.call(null, seq8149);
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(G__8150, seq8149__$1);
};
cljs.pprint.pprint = function cljs$pprint$pprint() {
  var args8172 = [];
  var len__5565__auto___8178 = arguments.length;
  var i__5566__auto___8179 = 0;
  while (true) {
    if (i__5566__auto___8179 < len__5565__auto___8178) {
      args8172.push(arguments[i__5566__auto___8179]);
      var G__8180 = i__5566__auto___8179 + 1;
      i__5566__auto___8179 = G__8180;
      continue;
    } else {
    }
    break;
  }
  var G__8174 = args8172.length;
  switch(G__8174) {
    case 1:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8172.length)].join(""));;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1 = function(object) {
  var sb = new goog.string.StringBuffer;
  var _STAR_out_STAR_8175 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(sb);
  try {
    cljs.pprint.pprint.call(null, object, cljs.core._STAR_out_STAR_);
    return cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_8175;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2 = function(object, writer) {
  var base_writer__6742__auto__ = writer;
  var new_writer__6743__auto__ = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__6742__auto__));
  var _STAR_out_STAR_8176 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = new_writer__6743__auto__ ? cljs.pprint.make_pretty_writer.call(null, base_writer__6742__auto__, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__6742__auto__;
  try {
    var _STAR_print_pretty_STAR_8177_8182 = cljs.pprint._STAR_print_pretty_STAR_;
    cljs.pprint._STAR_print_pretty_STAR_ = true;
    try {
      cljs.pprint.write_out.call(null, object);
    } finally {
      cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR_8177_8182;
    }
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, cljs.core._STAR_out_STAR_))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
    } else {
    }
    return cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_8176;
  }
};
cljs.pprint.pprint.cljs$lang$maxFixedArity = 2;
cljs.pprint.set_pprint_dispatch = function cljs$pprint$set_pprint_dispatch(function$) {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = function$;
  return null;
};
cljs.pprint.check_enumerated_arg = function cljs$pprint$check_enumerated_arg(arg, choices) {
  if (cljs.core.not.call(null, choices.call(null, arg))) {
    throw new Error([cljs.core.str("Bad argument: "), cljs.core.str(arg), cljs.core.str(". It must be one of "), cljs.core.str(choices)].join(""));
  } else {
    return null;
  }
};
cljs.pprint.level_exceeded = function cljs$pprint$level_exceeded() {
  var and__4514__auto__ = cljs.core._STAR_print_level_STAR_;
  if (cljs.core.truth_(and__4514__auto__)) {
    return cljs.pprint._STAR_current_level_STAR_ >= cljs.core._STAR_print_level_STAR_;
  } else {
    return and__4514__auto__;
  }
};
cljs.pprint.pprint_newline = function cljs$pprint$pprint_newline(kind) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), null, new cljs.core.Keyword(null, "miser", "miser", -556060186), null, new cljs.core.Keyword(null, "fill", "fill", 883462889), null, new cljs.core.Keyword(null, "linear", "linear", 872268697), null], null), null));
  return cljs.pprint.nl.call(null, cljs.core._STAR_out_STAR_, kind);
};
cljs.pprint.pprint_indent = function cljs$pprint$pprint_indent(relative_to, n) {
  cljs.pprint.check_enumerated_arg.call(null, relative_to, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "block", "block", 664686210), null, new cljs.core.Keyword(null, "current", "current", -1088038603), null], null), null));
  return cljs.pprint.indent.call(null, cljs.core._STAR_out_STAR_, relative_to, n);
};
cljs.pprint.pprint_tab = function cljs$pprint$pprint_tab(kind, colnum, colinc) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "line", "line", 212345235), null, new cljs.core.Keyword(null, "line-relative", "line-relative", 1149548219), null, new cljs.core.Keyword(null, "section-relative", "section-relative", -658298724), null], null), null));
  throw new Error("pprint-tab is not yet implemented");
};
cljs.pprint.cl_format = function cljs$pprint$cl_format() {
  var args__5572__auto__ = [];
  var len__5565__auto___8186 = arguments.length;
  var i__5566__auto___8187 = 0;
  while (true) {
    if (i__5566__auto___8187 < len__5565__auto___8186) {
      args__5572__auto__.push(arguments[i__5566__auto___8187]);
      var G__8188 = i__5566__auto___8187 + 1;
      i__5566__auto___8187 = G__8188;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 2 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(2), 0) : null;
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5573__auto__);
};
cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic = function(writer, format_in, args) {
  var compiled_format = typeof format_in === "string" ? cljs.pprint.compile_format.call(null, format_in) : format_in;
  var navigator = cljs.pprint.init_navigator.call(null, args);
  return cljs.pprint.execute_format.call(null, writer, compiled_format, navigator);
};
cljs.pprint.cl_format.cljs$lang$maxFixedArity = 2;
cljs.pprint.cl_format.cljs$lang$applyTo = function(seq8183) {
  var G__8184 = cljs.core.first.call(null, seq8183);
  var seq8183__$1 = cljs.core.next.call(null, seq8183);
  var G__8185 = cljs.core.first.call(null, seq8183__$1);
  var seq8183__$2 = cljs.core.next.call(null, seq8183__$1);
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(G__8184, G__8185, seq8183__$2);
};
cljs.pprint._STAR_format_str_STAR_ = null;
cljs.pprint.format_error = function cljs$pprint$format_error(message, offset) {
  var full_message = [cljs.core.str(message), cljs.core.str("\n"), cljs.core.str(cljs.pprint._STAR_format_str_STAR_), cljs.core.str("\n"), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, offset, " "))), cljs.core.str("^"), cljs.core.str("\n")].join("");
  throw Error(full_message);
};
cljs.pprint.arg_navigator = function(seq, rest, pos, __meta, __extmap, __hash) {
  this.seq = seq;
  this.rest = rest;
  this.pos = pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k8190, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__8192 = k8190 instanceof cljs.core.Keyword ? k8190.fqn : null;
  switch(G__8192) {
    case "seq":
      return self__.seq;
      break;
    case "rest":
      return self__.rest;
      break;
    case "pos":
      return self__.pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k8190, else__5124__auto__);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#cljs.pprint.arg-navigator{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$ = true;
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__8189) {
  var self__ = this;
  var G__8189__$1 = this;
  return new cljs.core.RecordIter(0, G__8189__$1, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, "pos", "pos", -864607220)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "pos", "pos", -864607220), null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__8189) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__8193 = cljs.core.keyword_identical_QMARK_;
  var expr__8194 = k__5129__auto__;
  if (cljs.core.truth_(pred__8193.call(null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), expr__8194))) {
    return new cljs.pprint.arg_navigator(G__8189, self__.rest, self__.pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__8193.call(null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), expr__8194))) {
      return new cljs.pprint.arg_navigator(self__.seq, G__8189, self__.pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__8193.call(null, new cljs.core.Keyword(null, "pos", "pos", -864607220), expr__8194))) {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, G__8189, self__.__meta, self__.__extmap, null);
      } else {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__8189), null);
      }
    }
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__8189) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, G__8189, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
cljs.pprint.arg_navigator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "seq", "seq", -177272256, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "pos", "pos", 775924307, null)], null);
};
cljs.pprint.arg_navigator.cljs$lang$type = true;
cljs.pprint.arg_navigator.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/arg-navigator");
};
cljs.pprint.arg_navigator.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "cljs.pprint/arg-navigator");
};
cljs.pprint.__GT_arg_navigator = function cljs$pprint$__GT_arg_navigator(seq, rest, pos) {
  return new cljs.pprint.arg_navigator(seq, rest, pos, null, null, null);
};
cljs.pprint.map__GT_arg_navigator = function cljs$pprint$map__GT_arg_navigator(G__8191) {
  return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(G__8191), (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(G__8191), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(G__8191), null, cljs.core.dissoc.call(null, G__8191, new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220)), null);
};
cljs.pprint.init_navigator = function cljs$pprint$init_navigator(s) {
  var s__$1 = cljs.core.seq.call(null, s);
  return new cljs.pprint.arg_navigator(s__$1, s__$1, 0, null, null, null);
};
cljs.pprint.next_arg = function cljs$pprint$next_arg(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    throw Error("Not enough arguments for format definition");
  }
};
cljs.pprint.next_arg_or_nil = function cljs$pprint$next_arg_or_nil(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, navigator], null);
  }
};
cljs.pprint.get_format_arg = function cljs$pprint$get_format_arg(navigator) {
  var vec__8198 = cljs.pprint.next_arg.call(null, navigator);
  var raw_format = cljs.core.nth.call(null, vec__8198, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__8198, 1, null);
  var compiled_format = typeof raw_format === "string" ? cljs.pprint.compile_format.call(null, raw_format) : raw_format;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [compiled_format, navigator__$1], null);
};
cljs.pprint.absolute_reposition = function cljs$pprint$absolute_reposition(navigator, position) {
  if (position >= (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator)) {
    return cljs.pprint.relative_reposition.call(null, navigator, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) - position);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator)), position, null, null, null);
  }
};
cljs.pprint.relative_reposition = function cljs$pprint$relative_reposition(navigator, position) {
  var newpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + position;
  if (position < 0) {
    return cljs.pprint.absolute_reposition.call(null, navigator, newpos);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), newpos, null, null, null);
  }
};
cljs.pprint.compiled_directive = function(func, def, params, offset, __meta, __extmap, __hash) {
  this.func = func;
  this.def = def;
  this.params = params;
  this.offset = offset;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__5121__auto__, k__5122__auto__) {
  var self__ = this;
  var this__5121__auto____$1 = this;
  return cljs.core._lookup.call(null, this__5121__auto____$1, k__5122__auto__, null);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__5123__auto__, k8200, else__5124__auto__) {
  var self__ = this;
  var this__5123__auto____$1 = this;
  var G__8202 = k8200 instanceof cljs.core.Keyword ? k8200.fqn : null;
  switch(G__8202) {
    case "func":
      return self__.func;
      break;
    case "def":
      return self__.def;
      break;
    case "params":
      return self__.params;
      break;
    case "offset":
      return self__.offset;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k8200, else__5124__auto__);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__5135__auto__, writer__5136__auto__, opts__5137__auto__) {
  var self__ = this;
  var this__5135__auto____$1 = this;
  var pr_pair__5138__auto__ = function(this__5135__auto____$1) {
    return function(keyval__5139__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, cljs.core.pr_writer, "", " ", "", opts__5137__auto__, keyval__5139__auto__);
    };
  }(this__5135__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__5136__auto__, pr_pair__5138__auto__, "#cljs.pprint.compiled-directive{", ", ", "}", opts__5137__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$ = true;
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__8199) {
  var self__ = this;
  var G__8199__$1 = this;
  return new cljs.core.RecordIter(0, G__8199__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core._iterator.call(null, self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__5119__auto__) {
  var self__ = this;
  var this__5119__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__5115__auto__) {
  var self__ = this;
  var this__5115__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICounted$_count$arity$1 = function(this__5125__auto__) {
  var self__ = this;
  var this__5125__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IHash$_hash$arity$1 = function(this__5116__auto__) {
  var self__ = this;
  var this__5116__auto____$1 = this;
  var h__4942__auto__ = self__.__hash;
  if (!(h__4942__auto__ == null)) {
    return h__4942__auto__;
  } else {
    var h__4942__auto____$1 = cljs.core.hash_imap.call(null, this__5116__auto____$1);
    self__.__hash = h__4942__auto____$1;
    return h__4942__auto____$1;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__5117__auto__, other__5118__auto__) {
  var self__ = this;
  var this__5117__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = other__5118__auto__;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = this__5117__auto____$1.constructor === other__5118__auto__.constructor;
      if (and__4514__auto____$1) {
        return cljs.core.equiv_map.call(null, this__5117__auto____$1, other__5118__auto__);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__5130__auto__, k__5131__auto__) {
  var self__ = this;
  var this__5130__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "func", "func", -238706040), null, new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "def", "def", -1043430536), null], null), null), k__5131__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__5130__auto____$1), self__.__meta), k__5131__auto__);
  } else {
    return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__5131__auto__)), null);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__5128__auto__, k__5129__auto__, G__8199) {
  var self__ = this;
  var this__5128__auto____$1 = this;
  var pred__8203 = cljs.core.keyword_identical_QMARK_;
  var expr__8204 = k__5129__auto__;
  if (cljs.core.truth_(pred__8203.call(null, new cljs.core.Keyword(null, "func", "func", -238706040), expr__8204))) {
    return new cljs.pprint.compiled_directive(G__8199, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__8203.call(null, new cljs.core.Keyword(null, "def", "def", -1043430536), expr__8204))) {
      return new cljs.pprint.compiled_directive(self__.func, G__8199, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__8203.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), expr__8204))) {
        return new cljs.pprint.compiled_directive(self__.func, self__.def, G__8199, self__.offset, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__8203.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__8204))) {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, G__8199, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__5129__auto__, G__8199), null);
        }
      }
    }
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__5133__auto__) {
  var self__ = this;
  var this__5133__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__5120__auto__, G__8199) {
  var self__ = this;
  var this__5120__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, G__8199, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__5126__auto__, entry__5127__auto__) {
  var self__ = this;
  var this__5126__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__5127__auto__)) {
    return cljs.core._assoc.call(null, this__5126__auto____$1, cljs.core._nth.call(null, entry__5127__auto__, 0), cljs.core._nth.call(null, entry__5127__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__5126__auto____$1, entry__5127__auto__);
  }
};
cljs.pprint.compiled_directive.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "func", "func", 1401825487, null), new cljs.core.Symbol(null, "def", "def", 597100991, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null)], null);
};
cljs.pprint.compiled_directive.cljs$lang$type = true;
cljs.pprint.compiled_directive.cljs$lang$ctorPrSeq = function(this__5155__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.pprint/compiled-directive");
};
cljs.pprint.compiled_directive.cljs$lang$ctorPrWriter = function(this__5155__auto__, writer__5156__auto__) {
  return cljs.core._write.call(null, writer__5156__auto__, "cljs.pprint/compiled-directive");
};
cljs.pprint.__GT_compiled_directive = function cljs$pprint$__GT_compiled_directive(func, def, params, offset) {
  return new cljs.pprint.compiled_directive(func, def, params, offset, null, null, null);
};
cljs.pprint.map__GT_compiled_directive = function cljs$pprint$map__GT_compiled_directive(G__8201) {
  return new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(G__8201), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(G__8201), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(G__8201), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__8201), null, cljs.core.dissoc.call(null, G__8201, new cljs.core.Keyword(null, 
  "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)), null);
};
cljs.pprint.realize_parameter = function cljs$pprint$realize_parameter(p__8207, navigator) {
  var vec__8211 = p__8207;
  var param = cljs.core.nth.call(null, vec__8211, 0, null);
  var vec__8212 = cljs.core.nth.call(null, vec__8211, 1, null);
  var raw_val = cljs.core.nth.call(null, vec__8212, 0, null);
  var offset = cljs.core.nth.call(null, vec__8212, 1, null);
  var vec__8213 = cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), param) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [raw_val, navigator], null) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", 
  -758446196)) ? cljs.pprint.next_arg.call(null, navigator) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), navigator], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [raw_val, navigator], null);
  var real_param = cljs.core.nth.call(null, vec__8213, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__8213, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [real_param, offset], null)], null), new_navigator], null);
};
cljs.pprint.realize_parameter_list = function cljs$pprint$realize_parameter_list(parameter_map, navigator) {
  var vec__8215 = cljs.pprint.map_passing_context.call(null, cljs.pprint.realize_parameter, navigator, parameter_map);
  var pairs = cljs.core.nth.call(null, vec__8215, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__8215, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, pairs), new_navigator], null);
};
cljs.pprint.special_radix_markers = new cljs.core.PersistentArrayMap(null, 3, [2, "#b", 8, "#o", 16, "#x"], null);
cljs.pprint.format_simple_number = function cljs$pprint$format_simple_number(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    if (cljs.core._EQ_.call(null, cljs.pprint._STAR_print_base_STAR_, 10)) {
      return [cljs.core.str(n), cljs.core.str(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? "." : null)].join("");
    } else {
      return [cljs.core.str(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? function() {
        var or__4526__auto__ = cljs.core.get.call(null, cljs.pprint.special_radix_markers, cljs.pprint._STAR_print_base_STAR_);
        if (cljs.core.truth_(or__4526__auto__)) {
          return or__4526__auto__;
        } else {
          return [cljs.core.str("#"), cljs.core.str(cljs.pprint._STAR_print_base_STAR_), cljs.core.str("r")].join("");
        }
      }() : null), cljs.core.str(cljs.pprint.opt_base_str.call(null, cljs.pprint._STAR_print_base_STAR_, n))].join("");
    }
  } else {
    return null;
  }
};
cljs.pprint.format_ascii = function cljs$pprint$format_ascii(print_func, params, arg_navigator, offsets) {
  var vec__8217 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__8217, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__8217, 1, null);
  var base_output = function() {
    var or__4526__auto__ = cljs.pprint.format_simple_number.call(null, arg);
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return print_func.call(null, arg);
    }
  }();
  var base_width = base_output.length;
  var min_width = base_width + (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var width = min_width >= (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? min_width : min_width + (cljs.core.quot.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - min_width - 1, (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params)) + 1) * (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var chars = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, width - base_width, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    cljs.pprint.print.call(null, [cljs.core.str(chars), cljs.core.str(base_output)].join(""));
  } else {
    cljs.pprint.print.call(null, [cljs.core.str(base_output), cljs.core.str(chars)].join(""));
  }
  return arg_navigator__$1;
};
cljs.pprint.integral_QMARK_ = function cljs$pprint$integral_QMARK_(x) {
  if (cljs.core.integer_QMARK_.call(null, x)) {
    return true;
  } else {
    if (cljs.pprint.float_QMARK_.call(null, x)) {
      return cljs.core._EQ_.call(null, x, Math.floor(x));
    } else {
      return false;
    }
  }
};
cljs.pprint.remainders = function cljs$pprint$remainders(base, val) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(p1__8218_SHARP_) {
    if (p1__8218_SHARP_ > 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.rem.call(null, p1__8218_SHARP_, base), cljs.core.quot.call(null, p1__8218_SHARP_, base)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    }
  }, val)));
};
cljs.pprint.base_str = function cljs$pprint$base_str(base, val) {
  if (val === 0) {
    return "0";
  } else {
    var xlated_val = val;
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(xlated_val) {
      return function(p1__8219_SHARP_) {
        if (p1__8219_SHARP_ < 10) {
          return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "0") + p1__8219_SHARP_);
        } else {
          return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "a") + (p1__8219_SHARP_ - 10));
        }
      };
    }(xlated_val), cljs.pprint.remainders.call(null, base, val)));
  }
};
cljs.pprint.javascript_base_formats = new cljs.core.PersistentArrayMap(null, 3, [8, "%o", 10, "%d", 16, "%x"], null);
cljs.pprint.opt_base_str = function cljs$pprint$opt_base_str(base, val) {
  return cljs.pprint.base_str.call(null, base, val);
};
cljs.pprint.group_by_STAR_ = function cljs$pprint$group_by_STAR_(unit, lis) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(x) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.reverse.call(null, cljs.core.take.call(null, unit, x))), cljs.core.seq.call(null, cljs.core.drop.call(null, unit, x))], null);
  }, cljs.core.reverse.call(null, lis))));
};
cljs.pprint.format_integer = function cljs$pprint$format_integer(base, params, arg_navigator, offsets) {
  var vec__8222 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__8222, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__8222, 1, null);
  if (cljs.core.truth_(cljs.pprint.integral_QMARK_.call(null, arg))) {
    var neg_8223 = arg < 0;
    var pos_arg_8224 = neg_8223 ? -arg : arg;
    var raw_str_8225 = cljs.pprint.opt_base_str.call(null, base, pos_arg_8224);
    var group_str_8226 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? function() {
      var groups = cljs.core.map.call(null, function(neg_8223, pos_arg_8224, raw_str_8225, vec__8222, arg, arg_navigator__$1) {
        return function(p1__8220_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.str, p1__8220_SHARP_);
        };
      }(neg_8223, pos_arg_8224, raw_str_8225, vec__8222, arg, arg_navigator__$1), cljs.pprint.group_by_STAR_.call(null, (new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083)).cljs$core$IFn$_invoke$arity$1(params), raw_str_8225));
      var commas = cljs.core.repeat.call(null, cljs.core.count.call(null, groups), (new cljs.core.Keyword(null, "commachar", "commachar", 652859327)).cljs$core$IFn$_invoke$arity$1(params));
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.next.call(null, cljs.core.interleave.call(null, commas, groups)));
    }() : raw_str_8225;
    var signed_str_8227 = neg_8223 ? [cljs.core.str("-"), cljs.core.str(group_str_8226)].join("") : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? [cljs.core.str("+"), cljs.core.str(group_str_8226)].join("") : group_str_8226;
    var padded_str_8228 = signed_str_8227.length < (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - signed_str_8227.length, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(signed_str_8227)].join("") : 
    signed_str_8227;
    cljs.pprint.print.call(null, padded_str_8228);
  } else {
    cljs.pprint.format_ascii.call(null, cljs.core.print_str, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), 1, new cljs.core.Keyword(null, "minpad", "minpad", 323570901), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), null);
  }
  return arg_navigator__$1;
};
cljs.pprint.english_cardinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"], null);
cljs.pprint.english_ordinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zeroth", "first", "second", "third", "fourth", "fifth", "sixth", "seventh", "eighth", "ninth", "tenth", "eleventh", "twelfth", "thirteenth", "fourteenth", "fifteenth", "sixteenth", "seventeenth", "eighteenth", "nineteenth"], null);
cljs.pprint.english_cardinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"], null);
cljs.pprint.english_ordinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twentieth", "thirtieth", "fortieth", "fiftieth", "sixtieth", "seventieth", "eightieth", "ninetieth"], null);
cljs.pprint.english_scale_numbers = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "thousand", "million", "billion", "trillion", "quadrillion", "quintillion", "sextillion", "septillion", "octillion", "nonillion", "decillion", "undecillion", "duodecillion", "tredecillion", "quattuordecillion", "quindecillion", "sexdecillion", "septendecillion", "octodecillion", "novemdecillion", "vigintillion"], null);
cljs.pprint.format_simple_cardinal = function cljs$pprint$format_simple_cardinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [cljs.core.str(hundreds > 0 ? [cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), cljs.core.str(" hundred")].join("") : null), cljs.core.str(hundreds > 0 && tens > 0 ? " " : null), cljs.core.str(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    return [cljs.core.str(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), cljs.core.str(ten_digit > 0 && unit_digit > 0 ? "-" : null), cljs.core.str(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, unit_digit) : null)].join("");
  }() : null)].join("");
};
cljs.pprint.add_english_scales = function cljs$pprint$add_english_scales(parts, offset) {
  var cnt = cljs.core.count.call(null, parts);
  var acc = cljs.core.PersistentVector.EMPTY;
  var pos = cnt - 1;
  var this$ = cljs.core.first.call(null, parts);
  var remainder = cljs.core.next.call(null, parts);
  while (true) {
    if (remainder == null) {
      return [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, ", ", acc))), cljs.core.str(!cljs.core.empty_QMARK_.call(null, this$) && !cljs.core.empty_QMARK_.call(null, acc) ? ", " : null), cljs.core.str(this$), cljs.core.str(!cljs.core.empty_QMARK_.call(null, this$) && pos + offset > 0 ? [cljs.core.str(" "), cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join("") : null)].join("");
    } else {
      var G__8229 = cljs.core.empty_QMARK_.call(null, this$) ? acc : cljs.core.conj.call(null, acc, [cljs.core.str(this$), cljs.core.str(" "), cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join(""));
      var G__8230 = pos - 1;
      var G__8231 = cljs.core.first.call(null, remainder);
      var G__8232 = cljs.core.next.call(null, remainder);
      acc = G__8229;
      pos = G__8230;
      this$ = G__8231;
      remainder = G__8232;
      continue;
    }
    break;
  }
};
cljs.pprint.format_cardinal_english = function cljs$pprint$format_cardinal_english(params, navigator, offsets) {
  var vec__8234 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__8234, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__8234, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zero");
  } else {
    var abs_arg_8235 = arg < 0 ? -arg : arg;
    var parts_8236 = cljs.pprint.remainders.call(null, 1E3, abs_arg_8235);
    if (cljs.core.count.call(null, parts_8236) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_8237 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, parts_8236);
      var full_str_8238 = cljs.pprint.add_english_scales.call(null, parts_strs_8237, 0);
      cljs.pprint.print.call(null, [cljs.core.str(arg < 0 ? "minus " : null), cljs.core.str(full_str_8238)].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
    }
  }
  return navigator__$1;
};
cljs.pprint.format_simple_ordinal = function cljs$pprint$format_simple_ordinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [cljs.core.str(hundreds > 0 ? [cljs.core.str(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), cljs.core.str(" hundred")].join("") : null), cljs.core.str(hundreds > 0 && tens > 0 ? " " : null), cljs.core.str(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    if (ten_digit > 0 && !(unit_digit > 0)) {
      return cljs.core.nth.call(null, cljs.pprint.english_ordinal_tens, ten_digit);
    } else {
      return [cljs.core.str(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), cljs.core.str(ten_digit > 0 && unit_digit > 0 ? "-" : null), cljs.core.str(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, unit_digit) : null)].join("");
    }
  }() : hundreds > 0 ? "th" : null)].join("");
};
cljs.pprint.format_ordinal_english = function cljs$pprint$format_ordinal_english(params, navigator, offsets) {
  var vec__8240 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__8240, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__8240, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zeroth");
  } else {
    var abs_arg_8241 = arg < 0 ? -arg : arg;
    var parts_8242 = cljs.pprint.remainders.call(null, 1E3, abs_arg_8241);
    if (cljs.core.count.call(null, parts_8242) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_8243 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, cljs.core.drop_last.call(null, parts_8242));
      var head_str_8244 = cljs.pprint.add_english_scales.call(null, parts_strs_8243, 1);
      var tail_str_8245 = cljs.pprint.format_simple_ordinal.call(null, cljs.core.last.call(null, parts_8242));
      cljs.pprint.print.call(null, [cljs.core.str(arg < 0 ? "minus " : null), cljs.core.str(!cljs.core.empty_QMARK_.call(null, head_str_8244) && !cljs.core.empty_QMARK_.call(null, tail_str_8245) ? [cljs.core.str(head_str_8244), cljs.core.str(", "), cljs.core.str(tail_str_8245)].join("") : !cljs.core.empty_QMARK_.call(null, head_str_8244) ? [cljs.core.str(head_str_8244), cljs.core.str("th")].join("") : tail_str_8245)].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
      var low_two_digits_8246 = cljs.core.rem.call(null, arg, 100);
      var not_teens_8247 = 11 < low_two_digits_8246 || 19 > low_two_digits_8246;
      var low_digit_8248 = cljs.core.rem.call(null, low_two_digits_8246, 10);
      cljs.pprint.print.call(null, low_digit_8248 === 1 && not_teens_8247 ? "st" : low_digit_8248 === 2 && not_teens_8247 ? "nd" : low_digit_8248 === 3 && not_teens_8247 ? "rd" : "th");
    }
  }
  return navigator__$1;
};
cljs.pprint.old_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IIII", "V", "VI", "VII", "VIII", "VIIII"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XXXX", "L", "LX", "LXX", "LXXX", "LXXXX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", 
"CC", "CCC", "CCCC", "D", "DC", "DCC", "DCCC", "DCCCC"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.new_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", "CC", 
"CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.format_roman = function cljs$pprint$format_roman(table, params, navigator, offsets) {
  var vec__8250 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__8250, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__8250, 1, null);
  if (typeof arg === "number" && arg > 0 && arg < 4E3) {
    var digits_8251 = cljs.pprint.remainders.call(null, 10, arg);
    var acc_8252 = cljs.core.PersistentVector.EMPTY;
    var pos_8253 = cljs.core.count.call(null, digits_8251) - 1;
    var digits_8254__$1 = digits_8251;
    while (true) {
      if (cljs.core.empty_QMARK_.call(null, digits_8254__$1)) {
        cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, acc_8252));
      } else {
        var digit_8255 = cljs.core.first.call(null, digits_8254__$1);
        var G__8256 = cljs.core._EQ_.call(null, 0, digit_8255) ? acc_8252 : cljs.core.conj.call(null, acc_8252, cljs.core.nth.call(null, cljs.core.nth.call(null, table, pos_8253), digit_8255 - 1));
        var G__8257 = pos_8253 - 1;
        var G__8258 = cljs.core.next.call(null, digits_8254__$1);
        acc_8252 = G__8256;
        pos_8253 = G__8257;
        digits_8254__$1 = G__8258;
        continue;
      }
      break;
    }
  } else {
    cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
  }
  return navigator__$1;
};
cljs.pprint.format_old_roman = function cljs$pprint$format_old_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.old_roman_table, params, navigator, offsets);
};
cljs.pprint.format_new_roman = function cljs$pprint$format_new_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.new_roman_table, params, navigator, offsets);
};
cljs.pprint.special_chars = new cljs.core.PersistentArrayMap(null, 5, [8, "Backspace", 9, "Tab", 10, "Newline", 13, "Return", 32, "Space"], null);
cljs.pprint.pretty_character = function cljs$pprint$pretty_character(params, navigator, offsets) {
  var vec__8260 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__8260, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__8260, 1, null);
  var as_int = cljs.pprint.char_code.call(null, c);
  var base_char = as_int & 127;
  var meta = as_int & 128;
  var special = cljs.core.get.call(null, cljs.pprint.special_chars, base_char);
  if (meta > 0) {
    cljs.pprint.print.call(null, "Meta-");
  } else {
  }
  cljs.pprint.print.call(null, cljs.core.truth_(special) ? special : base_char < 32 ? [cljs.core.str("Control-"), cljs.core.str(cljs.core.char$.call(null, base_char + 64))].join("") : cljs.core._EQ_.call(null, base_char, 127) ? "Control-?" : cljs.core.char$.call(null, base_char));
  return navigator__$1;
};
cljs.pprint.readable_character = function cljs$pprint$readable_character(params, navigator, offsets) {
  var vec__8265 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__8265, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__8265, 1, null);
  var pred__8266_8269 = cljs.core._EQ_;
  var expr__8267_8270 = (new cljs.core.Keyword(null, "char-format", "char-format", -1016499218)).cljs$core$IFn$_invoke$arity$1(params);
  if (cljs.core.truth_(pred__8266_8269.call(null, "o", expr__8267_8270))) {
    cljs.pprint.cl_format.call(null, true, "\\o~3, '0o", cljs.pprint.char_code.call(null, c));
  } else {
    if (cljs.core.truth_(pred__8266_8269.call(null, "u", expr__8267_8270))) {
      cljs.pprint.cl_format.call(null, true, "\\u~4, '0x", cljs.pprint.char_code.call(null, c));
    } else {
      if (cljs.core.truth_(pred__8266_8269.call(null, null, expr__8267_8270))) {
        cljs.pprint.print_char.call(null, c);
      } else {
        throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__8267_8270)].join(""));
      }
    }
  }
  return navigator__$1;
};
cljs.pprint.plain_character = function cljs$pprint$plain_character(params, navigator, offsets) {
  var vec__8272 = cljs.pprint.next_arg.call(null, navigator);
  var char$ = cljs.core.nth.call(null, vec__8272, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__8272, 1, null);
  cljs.pprint.print.call(null, char$);
  return navigator__$1;
};
cljs.pprint.abort_QMARK_ = function cljs$pprint$abort_QMARK_(context) {
  var token = cljs.core.first.call(null, context);
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), token) || cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), token);
};
cljs.pprint.execute_sub_format = function cljs$pprint$execute_sub_format(format, args, base_args) {
  return cljs.core.second.call(null, cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, context))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__8275 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__8275, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__8275, 1, null);
      var vec__8276 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__8276, 0, null);
      var offsets = cljs.core.nth.call(null, vec__8276, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), base_args);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format));
};
cljs.pprint.float_parts_base = function cljs$pprint$float_parts_base(f) {
  var s = clojure.string.lower_case.call(null, [cljs.core.str(f)].join(""));
  var exploc = s.indexOf("e");
  var dotloc = s.indexOf(".");
  if (exploc < 0) {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, [cljs.core.str(cljs.core.count.call(null, s) - 1)].join("")], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s, 0, dotloc)), cljs.core.str(cljs.core.subs.call(null, s, dotloc + 1))].join(""), [cljs.core.str(dotloc - 1)].join("")], null);
    }
  } else {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, 0, exploc), cljs.core.subs.call(null, s, exploc + 1)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s, 0, 1)), cljs.core.str(cljs.core.subs.call(null, s, 2, exploc))].join(""), cljs.core.subs.call(null, s, exploc + 1)], null);
    }
  }
};
cljs.pprint.float_parts = function cljs$pprint$float_parts(f) {
  var vec__8278 = cljs.pprint.float_parts_base.call(null, f);
  var m = cljs.core.nth.call(null, vec__8278, 0, null);
  var e = cljs.core.nth.call(null, vec__8278, 1, null);
  var m1 = cljs.pprint.rtrim.call(null, m, "0");
  var m2 = cljs.pprint.ltrim.call(null, m1, "0");
  var delta = cljs.core.count.call(null, m1) - cljs.core.count.call(null, m2);
  var e__$1 = cljs.core.count.call(null, e) > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, e, 0), "+") ? cljs.core.subs.call(null, e, 1) : e;
  if (cljs.core.empty_QMARK_.call(null, m2)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m2, parseInt(e__$1) - delta], null);
  }
};
cljs.pprint.inc_s = function cljs$pprint$inc_s(s) {
  var len_1 = cljs.core.count.call(null, s) - 1;
  var i = len_1 | 0;
  while (true) {
    if (i < 0) {
      return cljs.core.apply.call(null, cljs.core.str, "1", cljs.core.repeat.call(null, len_1 + 1, "0"));
    } else {
      if (cljs.core._EQ_.call(null, "9", s.charAt(i))) {
        var G__8279 = i - 1;
        i = G__8279;
        continue;
      } else {
        return cljs.core.apply.call(null, cljs.core.str, cljs.core.subs.call(null, s, 0, i), cljs.core.char$.call(null, cljs.pprint.char_code.call(null, s.charAt(i)) + 1), cljs.core.repeat.call(null, len_1 - i, "0"));
      }
    }
    break;
  }
};
cljs.pprint.round_str = function cljs$pprint$round_str(m, e, d, w) {
  if (cljs.core.truth_(function() {
    var or__4526__auto__ = d;
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return w;
    }
  }())) {
    var len = cljs.core.count.call(null, m);
    var w__$1 = cljs.core.truth_(w) ? function() {
      var x__4838__auto__ = 2;
      var y__4839__auto__ = w;
      return x__4838__auto__ > y__4839__auto__ ? x__4838__auto__ : y__4839__auto__;
    }() : 0;
    var round_pos = cljs.core.truth_(d) ? e + d + 1 : e >= 0 ? function() {
      var x__4838__auto__ = e + 1;
      var y__4839__auto__ = w__$1 - 1;
      return x__4838__auto__ > y__4839__auto__ ? x__4838__auto__ : y__4839__auto__;
    }() : w__$1 + e;
    var vec__8281 = cljs.core._EQ_.call(null, round_pos, 0) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str("0"), cljs.core.str(m)].join(""), e + 1, 1, len + 1], null) : new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, round_pos, len], null);
    var m1 = cljs.core.nth.call(null, vec__8281, 0, null);
    var e1 = cljs.core.nth.call(null, vec__8281, 1, null);
    var round_pos__$1 = cljs.core.nth.call(null, vec__8281, 2, null);
    var len__$1 = cljs.core.nth.call(null, vec__8281, 3, null);
    if (cljs.core.truth_(round_pos__$1)) {
      if (round_pos__$1 < 0) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0, false], null);
      } else {
        if (len__$1 > round_pos__$1) {
          var round_char = cljs.core.nth.call(null, m1, round_pos__$1);
          var result = cljs.core.subs.call(null, m1, 0, round_pos__$1);
          if (cljs.pprint.char_code.call(null, round_char) >= cljs.pprint.char_code.call(null, "5")) {
            var round_up_result = cljs.pprint.inc_s.call(null, result);
            var expanded = cljs.core.count.call(null, round_up_result) > cljs.core.count.call(null, result);
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [expanded ? cljs.core.subs.call(null, round_up_result, 0, cljs.core.count.call(null, round_up_result) - 1) : round_up_result, e1, expanded], null);
          } else {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [result, e1, false], null);
          }
        } else {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
        }
      }
    } else {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
    }
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
  }
};
cljs.pprint.expand_fixed = function cljs$pprint$expand_fixed(m, e, d) {
  var vec__8283 = e < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -e - 1, "0"))), cljs.core.str(m)].join(""), -1], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e], null);
  var m1 = cljs.core.nth.call(null, vec__8283, 0, null);
  var e1 = cljs.core.nth.call(null, vec__8283, 1, null);
  var len = cljs.core.count.call(null, m1);
  var target_len = cljs.core.truth_(d) ? e1 + d + 1 : e1 + 1;
  if (len < target_len) {
    return [cljs.core.str(m1), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, target_len - len, "0")))].join("");
  } else {
    return m1;
  }
};
cljs.pprint.insert_decimal = function cljs$pprint$insert_decimal(m, e) {
  if (e < 0) {
    return [cljs.core.str("."), cljs.core.str(m)].join("");
  } else {
    var loc = e + 1;
    return [cljs.core.str(cljs.core.subs.call(null, m, 0, loc)), cljs.core.str("."), cljs.core.str(cljs.core.subs.call(null, m, loc))].join("");
  }
};
cljs.pprint.get_fixed = function cljs$pprint$get_fixed(m, e, d) {
  return cljs.pprint.insert_decimal.call(null, cljs.pprint.expand_fixed.call(null, m, e, d), e);
};
cljs.pprint.insert_scaled_decimal = function cljs$pprint$insert_scaled_decimal(m, k) {
  if (k < 0) {
    return [cljs.core.str("."), cljs.core.str(m)].join("");
  } else {
    return [cljs.core.str(cljs.core.subs.call(null, m, 0, k)), cljs.core.str("."), cljs.core.str(cljs.core.subs.call(null, m, k))].join("");
  }
};
cljs.pprint.convert_ratio = function cljs$pprint$convert_ratio(x) {
  return x;
};
cljs.pprint.fixed_float = function cljs$pprint$fixed_float(params, navigator, offsets) {
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__8288 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__8288, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__8288, 1, null);
  var vec__8289 = arg < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-", -arg], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["+", arg], null);
  var sign = cljs.core.nth.call(null, vec__8289, 0, null);
  var abs = cljs.core.nth.call(null, vec__8289, 1, null);
  var abs__$1 = cljs.pprint.convert_ratio.call(null, abs);
  var vec__8290 = cljs.pprint.float_parts.call(null, abs__$1);
  var mantissa = cljs.core.nth.call(null, vec__8290, 0, null);
  var exp = cljs.core.nth.call(null, vec__8290, 1, null);
  var scaled_exp = exp + (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__4526__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return arg < 0;
    }
  }();
  var append_zero = cljs.core.not.call(null, d) && cljs.core.count.call(null, mantissa) - 1 <= scaled_exp;
  var vec__8291 = cljs.pprint.round_str.call(null, mantissa, scaled_exp, d, cljs.core.truth_(w) ? w - (cljs.core.truth_(add_sign) ? 1 : 0) : null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__8291, 0, null);
  var scaled_exp__$1 = cljs.core.nth.call(null, vec__8291, 1, null);
  var expanded = cljs.core.nth.call(null, vec__8291, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp__$1 + 1 : scaled_exp__$1, d);
  var fixed_repr__$1 = cljs.core.truth_(function() {
    var and__4514__auto__ = w;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = d;
      if (cljs.core.truth_(and__4514__auto____$1)) {
        return d >= 1 && cljs.core._EQ_.call(null, fixed_repr.charAt(0), "0") && cljs.core._EQ_.call(null, fixed_repr.charAt(1), ".") && cljs.core.count.call(null, fixed_repr) > w - (cljs.core.truth_(add_sign) ? 1 : 0);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }()) ? cljs.core.subs.call(null, fixed_repr, 1) : fixed_repr;
  var prepend_zero = cljs.core._EQ_.call(null, cljs.core.first.call(null, fixed_repr__$1), ".");
  if (cljs.core.truth_(w)) {
    var len_8292 = cljs.core.count.call(null, fixed_repr__$1);
    var signed_len_8293 = cljs.core.truth_(add_sign) ? len_8292 + 1 : len_8292;
    var prepend_zero_8294__$1 = prepend_zero && !(signed_len_8293 >= w);
    var append_zero_8295__$1 = append_zero && !(signed_len_8293 >= w);
    var full_len_8296 = prepend_zero_8294__$1 || append_zero_8295__$1 ? signed_len_8293 + 1 : signed_len_8293;
    if (cljs.core.truth_(function() {
      var and__4514__auto__ = full_len_8296 > w;
      if (and__4514__auto__) {
        return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__4514__auto__;
      }
    }())) {
      cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
    } else {
      cljs.pprint.print.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len_8296, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(add_sign) ? sign : null), cljs.core.str(prepend_zero_8294__$1 ? "0" : null), cljs.core.str(fixed_repr__$1), cljs.core.str(append_zero_8295__$1 ? "0" : null)].join(""));
    }
  } else {
    cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(add_sign) ? sign : null), cljs.core.str(prepend_zero ? "0" : null), cljs.core.str(fixed_repr__$1), cljs.core.str(append_zero ? "0" : null)].join(""));
  }
  return navigator__$1;
};
cljs.pprint.exponential_float = function cljs$pprint$exponential_float(params, navigator, offset) {
  var vec__8303 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__8303, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__8303, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var G__8305_8309 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var vec__8306_8310 = G__8305_8309;
  var mantissa_8311 = cljs.core.nth.call(null, vec__8306_8310, 0, null);
  var exp_8312 = cljs.core.nth.call(null, vec__8306_8310, 1, null);
  var G__8305_8313__$1 = G__8305_8309;
  while (true) {
    var vec__8307_8314 = G__8305_8313__$1;
    var mantissa_8315__$1 = cljs.core.nth.call(null, vec__8307_8314, 0, null);
    var exp_8316__$1 = cljs.core.nth.call(null, vec__8307_8314, 1, null);
    var w_8317 = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
    var d_8318 = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
    var e_8319 = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
    var k_8320 = (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
    var expchar_8321 = function() {
      var or__4526__auto__ = (new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return "E";
      }
    }();
    var add_sign_8322 = function() {
      var or__4526__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__4526__auto__)) {
        return or__4526__auto__;
      } else {
        return arg__$1 < 0;
      }
    }();
    var prepend_zero_8323 = k_8320 <= 0;
    var scaled_exp_8324 = exp_8316__$1 - (k_8320 - 1);
    var scaled_exp_str_8325 = [cljs.core.str(Math.abs(scaled_exp_8324))].join("");
    var scaled_exp_str_8326__$1 = [cljs.core.str(expchar_8321), cljs.core.str(scaled_exp_8324 < 0 ? "-" : "+"), cljs.core.str(cljs.core.truth_(e_8319) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, e_8319 - cljs.core.count.call(null, scaled_exp_str_8325), "0")) : null), cljs.core.str(scaled_exp_str_8325)].join("");
    var exp_width_8327 = cljs.core.count.call(null, scaled_exp_str_8326__$1);
    var base_mantissa_width_8328 = cljs.core.count.call(null, mantissa_8315__$1);
    var scaled_mantissa_8329 = [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -k_8320, "0"))), cljs.core.str(mantissa_8315__$1), cljs.core.str(cljs.core.truth_(d_8318) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, d_8318 - (base_mantissa_width_8328 - 1) - (k_8320 < 0 ? -k_8320 : 0), "0")) : null)].join("");
    var w_mantissa_8330 = cljs.core.truth_(w_8317) ? w_8317 - exp_width_8327 : null;
    var vec__8308_8331 = cljs.pprint.round_str.call(null, scaled_mantissa_8329, 0, cljs.core._EQ_.call(null, k_8320, 0) ? d_8318 - 1 : k_8320 > 0 ? d_8318 : k_8320 < 0 ? d_8318 - 1 : null, cljs.core.truth_(w_mantissa_8330) ? w_mantissa_8330 - (cljs.core.truth_(add_sign_8322) ? 1 : 0) : null);
    var rounded_mantissa_8332 = cljs.core.nth.call(null, vec__8308_8331, 0, null);
    var __8333 = cljs.core.nth.call(null, vec__8308_8331, 1, null);
    var incr_exp_8334 = cljs.core.nth.call(null, vec__8308_8331, 2, null);
    var full_mantissa_8335 = cljs.pprint.insert_scaled_decimal.call(null, rounded_mantissa_8332, k_8320);
    var append_zero_8336 = cljs.core._EQ_.call(null, k_8320, cljs.core.count.call(null, rounded_mantissa_8332)) && d_8318 == null;
    if (cljs.core.not.call(null, incr_exp_8334)) {
      if (cljs.core.truth_(w_8317)) {
        var len_8337 = cljs.core.count.call(null, full_mantissa_8335) + exp_width_8327;
        var signed_len_8338 = cljs.core.truth_(add_sign_8322) ? len_8337 + 1 : len_8337;
        var prepend_zero_8339__$1 = prepend_zero_8323 && !cljs.core._EQ_.call(null, signed_len_8338, w_8317);
        var full_len_8340 = prepend_zero_8339__$1 ? signed_len_8338 + 1 : signed_len_8338;
        var append_zero_8341__$1 = append_zero_8336 && full_len_8340 < w_8317;
        if (cljs.core.truth_(function() {
          var and__4514__auto__ = function() {
            var or__4526__auto__ = full_len_8340 > w_8317;
            if (or__4526__auto__) {
              return or__4526__auto__;
            } else {
              var and__4514__auto__ = e_8319;
              if (cljs.core.truth_(and__4514__auto__)) {
                return exp_width_8327 - 2 > e_8319;
              } else {
                return and__4514__auto__;
              }
            }
          }();
          if (cljs.core.truth_(and__4514__auto__)) {
            return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
          } else {
            return and__4514__auto__;
          }
        }())) {
          cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_8317, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
        } else {
          cljs.pprint.print.call(null, [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_8317 - full_len_8340 - (append_zero_8341__$1 ? 1 : 0), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(add_sign_8322) ? arg__$1 < 0 ? "-" : "+" : null), cljs.core.str(prepend_zero_8339__$1 ? "0" : null), cljs.core.str(full_mantissa_8335), cljs.core.str(append_zero_8341__$1 ? "0" : null), 
          cljs.core.str(scaled_exp_str_8326__$1)].join(""));
        }
      } else {
        cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(add_sign_8322) ? arg__$1 < 0 ? "-" : "+" : null), cljs.core.str(prepend_zero_8323 ? "0" : null), cljs.core.str(full_mantissa_8335), cljs.core.str(append_zero_8336 ? "0" : null), cljs.core.str(scaled_exp_str_8326__$1)].join(""));
      }
    } else {
      var G__8342 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rounded_mantissa_8332, exp_8316__$1 + 1], null);
      G__8305_8313__$1 = G__8342;
      continue;
    }
    break;
  }
  return navigator__$1;
};
cljs.pprint.general_float = function cljs$pprint$general_float(params, navigator, offsets) {
  var vec__8345 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__8345, 0, null);
  var _ = cljs.core.nth.call(null, vec__8345, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var vec__8346 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var mantissa = cljs.core.nth.call(null, vec__8346, 0, null);
  var exp = cljs.core.nth.call(null, vec__8346, 1, null);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var e = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
  var n = cljs.core._EQ_.call(null, arg__$1, 0) ? 0 : exp + 1;
  var ee = cljs.core.truth_(e) ? e + 2 : 4;
  var ww = cljs.core.truth_(w) ? w - ee : null;
  var d__$1 = cljs.core.truth_(d) ? d : function() {
    var x__4838__auto__ = cljs.core.count.call(null, mantissa);
    var y__4839__auto__ = function() {
      var x__4845__auto__ = n;
      var y__4846__auto__ = 7;
      return x__4845__auto__ < y__4846__auto__ ? x__4845__auto__ : y__4846__auto__;
    }();
    return x__4838__auto__ > y__4839__auto__ ? x__4838__auto__ : y__4839__auto__;
  }();
  var dd = d__$1 - n;
  if (0 <= dd && dd <= d__$1) {
    var navigator__$1 = cljs.pprint.fixed_float.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "w", "w", 354169001), ww, new cljs.core.Keyword(null, "d", "d", 1972142424), dd, new cljs.core.Keyword(null, "k", "k", -2146297393), 0, new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)], null), navigator, offsets);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, ee, " ")));
    return navigator__$1;
  } else {
    return cljs.pprint.exponential_float.call(null, params, navigator, offsets);
  }
};
cljs.pprint.dollar_float = function cljs$pprint$dollar_float(params, navigator, offsets) {
  var vec__8350 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__8350, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__8350, 1, null);
  var vec__8351 = cljs.pprint.float_parts.call(null, Math.abs(arg));
  var mantissa = cljs.core.nth.call(null, vec__8351, 0, null);
  var exp = cljs.core.nth.call(null, vec__8351, 1, null);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__4526__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return arg < 0;
    }
  }();
  var vec__8352 = cljs.pprint.round_str.call(null, mantissa, exp, d, null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__8352, 0, null);
  var scaled_exp = cljs.core.nth.call(null, vec__8352, 1, null);
  var expanded = cljs.core.nth.call(null, vec__8352, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp + 1 : scaled_exp, d);
  var full_repr = [cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n - fixed_repr.indexOf("."), "0"))), cljs.core.str(fixed_repr)].join("");
  var full_len = cljs.core.count.call(null, full_repr) + (cljs.core.truth_(add_sign) ? 1 : 0);
  cljs.pprint.print.call(null, [cljs.core.str(cljs.core.truth_(function() {
    var and__4514__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__4514__auto__)) {
      return add_sign;
    } else {
      return and__4514__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str(cljs.core.truth_(function() {
    var and__4514__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    if (and__4514__auto__) {
      return add_sign;
    } else {
      return and__4514__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null), cljs.core.str(full_repr)].join(""));
  return navigator__$1;
};
cljs.pprint.choice_conditional = function cljs$pprint$choice_conditional(params, arg_navigator, offsets) {
  var arg = (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__8354 = cljs.core.truth_(arg) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg, arg_navigator], null) : cljs.pprint.next_arg.call(null, arg_navigator);
  var arg__$1 = cljs.core.nth.call(null, vec__8354, 0, null);
  var navigator = cljs.core.nth.call(null, vec__8354, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = arg__$1 < 0 || arg__$1 >= cljs.core.count.call(null, clauses) ? cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params)) : cljs.core.nth.call(null, clauses, arg__$1);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.boolean_conditional = function cljs$pprint$boolean_conditional(params, arg_navigator, offsets) {
  var vec__8356 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__8356, 0, null);
  var navigator = cljs.core.nth.call(null, vec__8356, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.second.call(null, clauses) : cljs.core.first.call(null, clauses);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.check_arg_conditional = function cljs$pprint$check_arg_conditional(params, arg_navigator, offsets) {
  var vec__8358 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__8358, 0, null);
  var navigator = cljs.core.nth.call(null, vec__8358, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.first.call(null, clauses) : null;
  if (cljs.core.truth_(arg)) {
    if (cljs.core.truth_(clause)) {
      return cljs.pprint.execute_sub_format.call(null, clause, arg_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return arg_navigator;
    }
  } else {
    return navigator;
  }
};
cljs.pprint.iterate_sublist = function cljs$pprint$iterate_sublist(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__8361 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__8361, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__8361, 1, null);
  var vec__8362 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__8362, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__8362, 1, null);
  var args = cljs.pprint.init_navigator.call(null, arg_list);
  var count = 0;
  var args__$1 = args;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1), last_pos) && count > 1) {
      throw Error("%{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__4526__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(args__$1)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4526__auto__) {
        return or__4526__auto__;
      } else {
        var and__4514__auto__ = max_count;
        if (cljs.core.truth_(and__4514__auto__)) {
          return count >= max_count;
        } else {
          return and__4514__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, args__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__8363 = count + 1;
        var G__8364 = iter_result;
        var G__8365 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1);
        count = G__8363;
        args__$1 = G__8364;
        last_pos = G__8365;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_list_of_sublists = function cljs$pprint$iterate_list_of_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__8368 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__8368, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__8368, 1, null);
  var vec__8369 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__8369, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__8369, 1, null);
  var count = 0;
  var arg_list__$1 = arg_list;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4526__auto__ = cljs.core.empty_QMARK_.call(null, arg_list__$1) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4526__auto__) {
        return or__4526__auto__;
      } else {
        var and__4514__auto__ = max_count;
        if (cljs.core.truth_(and__4514__auto__)) {
          return count >= max_count;
        } else {
          return and__4514__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, cljs.core.first.call(null, arg_list__$1)), cljs.pprint.init_navigator.call(null, cljs.core.next.call(null, arg_list__$1)));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__8370 = count + 1;
        var G__8371 = cljs.core.next.call(null, arg_list__$1);
        count = G__8370;
        arg_list__$1 = G__8371;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_list = function cljs$pprint$iterate_main_list(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__8373 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__8373, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__8373, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2), last_pos) && count > 1) {
      throw Error("%@{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__4526__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4526__auto__) {
        return or__4526__auto__;
      } else {
        var and__4514__auto__ = max_count;
        if (cljs.core.truth_(and__4514__auto__)) {
          return count >= max_count;
        } else {
          return and__4514__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return cljs.core.second.call(null, iter_result);
      } else {
        var G__8374 = count + 1;
        var G__8375 = iter_result;
        var G__8376 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2);
        count = G__8374;
        navigator__$2 = G__8375;
        last_pos = G__8376;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_sublists = function cljs$pprint$iterate_main_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__8379 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__8379, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__8379, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4526__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4526__auto__) {
        return or__4526__auto__;
      } else {
        var and__4514__auto__ = max_count;
        if (cljs.core.truth_(and__4514__auto__)) {
          return count >= max_count;
        } else {
          return and__4514__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var vec__8380 = cljs.pprint.next_arg_or_nil.call(null, navigator__$2);
      var sublist = cljs.core.nth.call(null, vec__8380, 0, null);
      var navigator__$3 = cljs.core.nth.call(null, vec__8380, 1, null);
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, sublist), navigator__$3);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$3;
      } else {
        var G__8381 = count + 1;
        var G__8382 = navigator__$3;
        count = G__8381;
        navigator__$2 = G__8382;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.logical_block_or_justify = function cljs$pprint$logical_block_or_justify(params, navigator, offsets) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return cljs.pprint.format_logical_block.call(null, params, navigator, offsets);
  } else {
    return cljs.pprint.justify_clauses.call(null, params, navigator, offsets);
  }
};
cljs.pprint.render_clauses = function cljs$pprint$render_clauses(clauses, navigator, base_navigator) {
  var clauses__$1 = clauses;
  var acc = cljs.core.PersistentVector.EMPTY;
  var navigator__$1 = navigator;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, clauses__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, navigator__$1], null);
    } else {
      var clause = cljs.core.first.call(null, clauses__$1);
      var vec__8385 = function() {
        var sb = new goog.string.StringBuffer;
        var _STAR_out_STAR_8386 = cljs.core._STAR_out_STAR_;
        cljs.core._STAR_out_STAR_ = new cljs.core.StringBufferWriter(sb);
        try {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.execute_sub_format.call(null, clause, navigator__$1, base_navigator), [cljs.core.str(sb)].join("")], null);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR_8386;
        }
      }();
      var iter_result = cljs.core.nth.call(null, vec__8385, 0, null);
      var result_str = cljs.core.nth.call(null, vec__8385, 1, null);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, cljs.core.second.call(null, iter_result)], null);
      } else {
        var G__8387 = cljs.core.next.call(null, clauses__$1);
        var G__8388 = cljs.core.conj.call(null, acc, result_str);
        var G__8389 = iter_result;
        clauses__$1 = G__8387;
        acc = G__8388;
        navigator__$1 = G__8389;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.justify_clauses = function cljs$pprint$justify_clauses(params, navigator, offsets) {
  var vec__8394 = function() {
    var temp__4425__auto__ = (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var else$ = temp__4425__auto__;
      return cljs.pprint.render_clauses.call(null, else$, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return null;
    }
  }();
  var vec__8395 = cljs.core.nth.call(null, vec__8394, 0, null);
  var eol_str = cljs.core.nth.call(null, vec__8395, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__8394, 1, null);
  var navigator__$1 = function() {
    var or__4526__auto__ = new_navigator;
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return navigator;
    }
  }();
  var vec__8396 = function() {
    var temp__4425__auto__ = (new cljs.core.Keyword(null, "else-params", "else-params", -832171646)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var p = temp__4425__auto__;
      return cljs.pprint.realize_parameter_list.call(null, p, navigator__$1);
    } else {
      return null;
    }
  }();
  var else_params = cljs.core.nth.call(null, vec__8396, 0, null);
  var new_navigator__$1 = cljs.core.nth.call(null, vec__8396, 1, null);
  var navigator__$2 = function() {
    var or__4526__auto__ = new_navigator__$1;
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return navigator__$1;
    }
  }();
  var min_remaining = function() {
    var or__4526__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return 0;
    }
  }();
  var max_columns = function() {
    var or__4526__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return cljs.pprint.get_max_column.call(null, cljs.core._STAR_out_STAR_);
    }
  }();
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__8397 = cljs.pprint.render_clauses.call(null, clauses, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  var strs = cljs.core.nth.call(null, vec__8397, 0, null);
  var navigator__$3 = cljs.core.nth.call(null, vec__8397, 1, null);
  var slots = function() {
    var x__4838__auto__ = 1;
    var y__4839__auto__ = cljs.core.count.call(null, strs) - 1 + (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0) + (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0);
    return x__4838__auto__ > y__4839__auto__ ? x__4838__auto__ : y__4839__auto__;
  }();
  var chars = cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, strs));
  var mincol = (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params);
  var minpad = (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var minout = chars + slots * minpad;
  var result_columns = minout <= mincol ? mincol : mincol + colinc * (1 + cljs.core.quot.call(null, minout - mincol - 1, colinc));
  var total_pad = result_columns - chars;
  var pad = function() {
    var x__4838__auto__ = minpad;
    var y__4839__auto__ = cljs.core.quot.call(null, total_pad, slots);
    return x__4838__auto__ > y__4839__auto__ ? x__4838__auto__ : y__4839__auto__;
  }();
  var extra_pad = total_pad - pad * slots;
  var pad_str = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, pad, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = eol_str;
    if (cljs.core.truth_(and__4514__auto__)) {
      return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))) + min_remaining + result_columns > max_columns;
    } else {
      return and__4514__auto__;
    }
  }())) {
    cljs.pprint.print.call(null, eol_str);
  } else {
  }
  var slots_8398__$1 = slots;
  var extra_pad_8399__$1 = extra_pad;
  var strs_8400__$1 = strs;
  var pad_only_8401 = function() {
    var or__4526__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return cljs.core._EQ_.call(null, cljs.core.count.call(null, strs_8400__$1), 1) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params));
    }
  }();
  while (true) {
    if (cljs.core.seq.call(null, strs_8400__$1)) {
      cljs.pprint.print.call(null, [cljs.core.str(cljs.core.not.call(null, pad_only_8401) ? cljs.core.first.call(null, strs_8400__$1) : null), cljs.core.str(cljs.core.truth_(function() {
        var or__4526__auto__ = pad_only_8401;
        if (cljs.core.truth_(or__4526__auto__)) {
          return or__4526__auto__;
        } else {
          var or__4526__auto____$1 = cljs.core.next.call(null, strs_8400__$1);
          if (or__4526__auto____$1) {
            return or__4526__auto____$1;
          } else {
            return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
          }
        }
      }()) ? pad_str : null), cljs.core.str(extra_pad_8399__$1 > 0 ? (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params) : null)].join(""));
      var G__8402 = slots_8398__$1 - 1;
      var G__8403 = extra_pad_8399__$1 - 1;
      var G__8404 = cljs.core.truth_(pad_only_8401) ? strs_8400__$1 : cljs.core.next.call(null, strs_8400__$1);
      var G__8405 = false;
      slots_8398__$1 = G__8402;
      extra_pad_8399__$1 = G__8403;
      strs_8400__$1 = G__8404;
      pad_only_8401 = G__8405;
      continue;
    } else {
    }
    break;
  }
  return navigator__$3;
};
cljs.pprint.downcase_writer = function cljs$pprint$downcase_writer(writer) {
  if (typeof cljs.pprint.t8412 !== "undefined") {
  } else {
    cljs.pprint.t8412 = function(downcase_writer, writer, meta8413) {
      this.downcase_writer = downcase_writer;
      this.writer = writer;
      this.meta8413 = meta8413;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t8412.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8414, meta8413__$1) {
      var self__ = this;
      var _8414__$1 = this;
      return new cljs.pprint.t8412(self__.downcase_writer, self__.writer, meta8413__$1);
    };
    cljs.pprint.t8412.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8414) {
      var self__ = this;
      var _8414__$1 = this;
      return self__.meta8413;
    };
    cljs.pprint.t8412.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t8412.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__8415 = cljs.core._EQ_;
      var expr__8416 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__8415.call(null, String, expr__8416))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__8415.call(null, Number, expr__8416))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__8416)].join(""));
        }
      }
    };
    cljs.pprint.t8412.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "downcase-writer", "downcase-writer", 37286911, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, converting all characters to lower case"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta8413", "meta8413", 1076732414, null)], null);
    };
    cljs.pprint.t8412.cljs$lang$type = true;
    cljs.pprint.t8412.cljs$lang$ctorStr = "cljs.pprint/t8412";
    cljs.pprint.t8412.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
      return cljs.core._write.call(null, writer__5106__auto__, "cljs.pprint/t8412");
    };
    cljs.pprint.__GT_t8412 = function cljs$pprint$downcase_writer_$___GT_t8412(downcase_writer__$1, writer__$1, meta8413) {
      return new cljs.pprint.t8412(downcase_writer__$1, writer__$1, meta8413);
    };
  }
  return new cljs.pprint.t8412(cljs$pprint$downcase_writer, writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.upcase_writer = function cljs$pprint$upcase_writer(writer) {
  if (typeof cljs.pprint.t8424 !== "undefined") {
  } else {
    cljs.pprint.t8424 = function(upcase_writer, writer, meta8425) {
      this.upcase_writer = upcase_writer;
      this.writer = writer;
      this.meta8425 = meta8425;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t8424.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_8426, meta8425__$1) {
      var self__ = this;
      var _8426__$1 = this;
      return new cljs.pprint.t8424(self__.upcase_writer, self__.writer, meta8425__$1);
    };
    cljs.pprint.t8424.prototype.cljs$core$IMeta$_meta$arity$1 = function(_8426) {
      var self__ = this;
      var _8426__$1 = this;
      return self__.meta8425;
    };
    cljs.pprint.t8424.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t8424.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__8427 = cljs.core._EQ_;
      var expr__8428 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__8427.call(null, String, expr__8428))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__8427.call(null, Number, expr__8428))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__8428)].join(""));
        }
      }
    };
    cljs.pprint.t8424.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "upcase-writer", "upcase-writer", 51077317, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, converting all characters to upper case"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta8425", "meta8425", 877682263, null)], null);
    };
    cljs.pprint.t8424.cljs$lang$type = true;
    cljs.pprint.t8424.cljs$lang$ctorStr = "cljs.pprint/t8424";
    cljs.pprint.t8424.cljs$lang$ctorPrWriter = function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
      return cljs.core._write.call(null, writer__5106__auto__, "cljs.pprint/t8424");
    };
    cljs.pprint.__GT_t8424 = function cljs$pprint$upcase_writer_$___GT_t8424(upcase_writer__$1, writer__$1, meta8425) {
      return new cljs.pprint.t8424(upcase_writer__$1, writer__$1, meta8425);
    };
  }
  return new cljs.pprint.t8424(cljs$pprint$upcase_writer, writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.capitalize_string = function cljs$pprint$capitalize_string(s, first_QMARK_) {
  var f = cljs.core.first.call(null, s);
  var s__$1 = cljs.core.truth_(function() {
    var and__4514__auto__ = first_QMARK_;
    if (cljs.core.truth_(and__4514__auto__)) {
      var and__4514__auto____$1 = f;
      if (cljs.core.truth_(and__4514__auto____$1)) {
        return goog.string.isUnicodeChar(f);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }()) ? [cljs.core.str(clojure.string.upper_case.call(null, f)), cljs.core.str(cljs.core.subs.call(null, s, 1))].join("") : s;
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(f, s__$1) {
    return function(s__$2) {
      if (cljs.core.empty_QMARK_.call(null, s__$2)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
      } else {
        var m = RegExp("\\W\\w", "g").exec(s__$2);
        var offset = function() {
          var and__4514__auto__ = m;
          if (cljs.core.truth_(and__4514__auto__)) {
            return m.index + 1;
          } else {
            return and__4514__auto__;
          }
        }();
        if (cljs.core.truth_(offset)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str(cljs.core.subs.call(null, s__$2, 0, offset)), cljs.core.str(clojure.string.upper_case.call(null, cljs.core.nth.call(null, s__$2, offset)))].join(""), cljs.core.subs.call(null, s__$2, offset + 1)], null);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$2, null], null);
        }
      }
    };
  }(f, s__$1), s__$1)));
};
cljs.pprint.capitalize_word_writer = function cljs$pprint$capitalize_word_writer(writer) {
  var last_was_whitespace_QMARK_ = cljs.core.atom.call(null, true);
  if (typeof cljs.pprint.t8436 !== "undefined") {
  } else {
    cljs.pprint.t8436 = function(capitalize_word_writer, writer, last_was_whitespace_QMARK_, meta8437) {
      this.capitalize_word_writer = capitalize_word_writer;
      this.writer = writer;
      this.last_was_whitespace_QMARK_ = last_was_whitespace_QMARK_;
      this.meta8437 = meta8437;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t8436.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(last_was_whitespace_QMARK_) {
      return function(_8438, meta8437__$1) {
        var self__ = this;
        var _8438__$1 = this;
        return new cljs.pprint.t8436(self__.capitalize_word_writer, self__.writer, self__.last_was_whitespace_QMARK_, meta8437__$1);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t8436.prototype.cljs$core$IMeta$_meta$arity$1 = function(last_was_whitespace_QMARK_) {
      return function(_8438) {
        var self__ = this;
        var _8438__$1 = this;
        return self__.meta8437;
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t8436.prototype.cljs$core$IWriter$_flush$arity$1 = function(last_was_whitespace_QMARK_) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t8436.prototype.cljs$core$IWriter$_write$arity$2 = function(last_was_whitespace_QMARK_) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__8439 = cljs.core._EQ_;
        var expr__8440 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__8439.call(null, String, expr__8440))) {
          var s = x;
          cljs.core._write.call(null, self__.writer, cljs.pprint.capitalize_string.call(null, s.toLowerCase(), cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)));
          if (s.length > 0) {
            return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1)));
          } else {
            return null;
          }
        } else {
          if (cljs.core.truth_(pred__8439.call(null, Number, expr__8440))) {
            var c = cljs.core.char$.call(null, x);
            var mod_c = cljs.core.truth_(cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)) ? clojure.string.upper_case.call(null, c) : c;
            cljs.core._write.call(null, self__.writer, mod_c);
            return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(c));
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__8440)].join(""));
          }
        }
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t8436.getBasis = function(last_was_whitespace_QMARK_) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "capitalize-word-writer", "capitalize-word-writer", 196688059, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, capitalizing all words"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "last-was-whitespace?", "last-was-whitespace?", -1073928093, null), new cljs.core.Symbol(null, "meta8437", "meta8437", 2114039035, null)], null);
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.t8436.cljs$lang$type = true;
    cljs.pprint.t8436.cljs$lang$ctorStr = "cljs.pprint/t8436";
    cljs.pprint.t8436.cljs$lang$ctorPrWriter = function(last_was_whitespace_QMARK_) {
      return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
        return cljs.core._write.call(null, writer__5106__auto__, "cljs.pprint/t8436");
      };
    }(last_was_whitespace_QMARK_);
    cljs.pprint.__GT_t8436 = function(last_was_whitespace_QMARK_) {
      return function cljs$pprint$capitalize_word_writer_$___GT_t8436(capitalize_word_writer__$1, writer__$1, last_was_whitespace_QMARK___$1, meta8437) {
        return new cljs.pprint.t8436(capitalize_word_writer__$1, writer__$1, last_was_whitespace_QMARK___$1, meta8437);
      };
    }(last_was_whitespace_QMARK_);
  }
  return new cljs.pprint.t8436(cljs$pprint$capitalize_word_writer, writer, last_was_whitespace_QMARK_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.init_cap_writer = function cljs$pprint$init_cap_writer(writer) {
  var capped = cljs.core.atom.call(null, false);
  if (typeof cljs.pprint.t8448 !== "undefined") {
  } else {
    cljs.pprint.t8448 = function(init_cap_writer, writer, capped, meta8449) {
      this.init_cap_writer = init_cap_writer;
      this.writer = writer;
      this.capped = capped;
      this.meta8449 = meta8449;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t8448.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(capped) {
      return function(_8450, meta8449__$1) {
        var self__ = this;
        var _8450__$1 = this;
        return new cljs.pprint.t8448(self__.init_cap_writer, self__.writer, self__.capped, meta8449__$1);
      };
    }(capped);
    cljs.pprint.t8448.prototype.cljs$core$IMeta$_meta$arity$1 = function(capped) {
      return function(_8450) {
        var self__ = this;
        var _8450__$1 = this;
        return self__.meta8449;
      };
    }(capped);
    cljs.pprint.t8448.prototype.cljs$core$IWriter$_flush$arity$1 = function(capped) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core._flush.call(null, self__.writer);
      };
    }(capped);
    cljs.pprint.t8448.prototype.cljs$core$IWriter$_write$arity$2 = function(capped) {
      return function(this$, x) {
        var self__ = this;
        var this$__$1 = this;
        var pred__8451 = cljs.core._EQ_;
        var expr__8452 = cljs.core.type.call(null, x);
        if (cljs.core.truth_(pred__8451.call(null, String, expr__8452))) {
          var s = clojure.string.lower_case.call(null, x);
          if (cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped))) {
            var m = RegExp("\\S", "g").exec(s);
            var offset = function() {
              var and__4514__auto__ = m;
              if (cljs.core.truth_(and__4514__auto__)) {
                return m.index;
              } else {
                return and__4514__auto__;
              }
            }();
            if (cljs.core.truth_(offset)) {
              cljs.core._write.call(null, self__.writer, [cljs.core.str(cljs.core.subs.call(null, s, 0, offset)), cljs.core.str(clojure.string.upper_case.call(null, cljs.core.nth.call(null, s, offset))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, offset + 1)))].join(""));
              return cljs.core.reset_BANG_.call(null, self__.capped, true);
            } else {
              return cljs.core._write.call(null, self__.writer, s);
            }
          } else {
            return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
          }
        } else {
          if (cljs.core.truth_(pred__8451.call(null, Number, expr__8452))) {
            var c = cljs.core.char$.call(null, x);
            if (cljs.core.truth_(function() {
              var and__4514__auto__ = cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped));
              if (and__4514__auto__) {
                return goog.string.isUnicodeChar(c);
              } else {
                return and__4514__auto__;
              }
            }())) {
              cljs.core.reset_BANG_.call(null, self__.capped, true);
              return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, c));
            } else {
              return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, c));
            }
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__8452)].join(""));
          }
        }
      };
    }(capped);
    cljs.pprint.t8448.getBasis = function(capped) {
      return function() {
        return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "init-cap-writer", "init-cap-writer", -861558336, null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "private", "private", -558947994), true, new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), cljs.core.list(new cljs.core.PersistentVector(null, 
        1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null)], null))), new cljs.core.Keyword(null, "doc", "doc", 1913296891), "Returns a proxy that wraps writer, capitalizing the first word"], null)), new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "capped", "capped", -1650988402, null), new cljs.core.Symbol(null, "meta8449", "meta8449", -1356960704, null)], null);
      };
    }(capped);
    cljs.pprint.t8448.cljs$lang$type = true;
    cljs.pprint.t8448.cljs$lang$ctorStr = "cljs.pprint/t8448";
    cljs.pprint.t8448.cljs$lang$ctorPrWriter = function(capped) {
      return function(this__5105__auto__, writer__5106__auto__, opt__5107__auto__) {
        return cljs.core._write.call(null, writer__5106__auto__, "cljs.pprint/t8448");
      };
    }(capped);
    cljs.pprint.__GT_t8448 = function(capped) {
      return function cljs$pprint$init_cap_writer_$___GT_t8448(init_cap_writer__$1, writer__$1, capped__$1, meta8449) {
        return new cljs.pprint.t8448(init_cap_writer__$1, writer__$1, capped__$1, meta8449);
      };
    }(capped);
  }
  return new cljs.pprint.t8448(cljs$pprint$init_cap_writer, writer, capped, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.modify_case = function cljs$pprint$modify_case(make_writer, params, navigator, offsets) {
  var clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var _STAR_out_STAR_8455 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = make_writer.call(null, cljs.core._STAR_out_STAR_);
  try {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_8455;
  }
};
cljs.pprint.get_pretty_writer = function cljs$pprint$get_pretty_writer(writer) {
  if (cljs.core.truth_(cljs.pprint.pretty_writer_QMARK_.call(null, writer))) {
    return writer;
  } else {
    return cljs.pprint.pretty_writer.call(null, writer, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_);
  }
};
cljs.pprint.fresh_line = function cljs$pprint$fresh_line() {
  if (!(cljs.core._STAR_out_STAR_ == null) ? cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core._STAR_out_STAR_.cljs$core$IDeref$ ? true : !cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_)) {
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))))) {
      return cljs.pprint.prn.call(null);
    } else {
      return null;
    }
  } else {
    return cljs.pprint.prn.call(null);
  }
};
cljs.pprint.absolute_tabulation = function cljs$pprint$absolute_tabulation(params, navigator, offsets) {
  var colnum_8458 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_8459 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var current_8460 = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var space_count_8461 = current_8460 < colnum_8458 ? colnum_8458 - current_8460 : cljs.core._EQ_.call(null, colinc_8459, 0) ? 0 : colinc_8459 - cljs.core.rem.call(null, current_8460 - colnum_8458, colinc_8459);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_8461, " ")));
  return navigator;
};
cljs.pprint.relative_tabulation = function cljs$pprint$relative_tabulation(params, navigator, offsets) {
  var colrel_8462 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_8463 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var start_col_8464 = colrel_8462 + cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var offset_8465 = colinc_8463 > 0 ? cljs.core.rem.call(null, start_col_8464, colinc_8463) : 0;
  var space_count_8466 = colrel_8462 + (cljs.core._EQ_.call(null, 0, offset_8465) ? 0 : colinc_8463 - offset_8465);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_8466, " ")));
  return navigator;
};
cljs.pprint.format_logical_block = function cljs$pprint$format_logical_block(params, navigator, offsets) {
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause_count = cljs.core.count.call(null, clauses);
  var prefix = clause_count > 1 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.first.call(null, clauses)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? "(" : null;
  var body = cljs.core.nth.call(null, clauses, clause_count > 1 ? 1 : 0);
  var suffix = clause_count > 2 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.nth.call(null, clauses, 2)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? ")" : null;
  var vec__8470 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__8470, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__8470, 1, null);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_8471_8473 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_8472_8474 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, suffix);
      cljs.pprint.execute_sub_format.call(null, body, cljs.pprint.init_navigator.call(null, arg), (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_8472_8474;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_8471_8473;
    }
  }
  return navigator__$1;
};
cljs.pprint.set_indent = function cljs$pprint$set_indent(params, navigator, offsets) {
  var relative_to = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "current", "current", -1088038603) : new cljs.core.Keyword(null, "block", "block", 664686210);
  cljs.pprint.pprint_indent.call(null, relative_to, (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params));
  return navigator;
};
cljs.pprint.conditional_newline = function cljs$pprint$conditional_newline(params, navigator, offsets) {
  var kind = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336) : new cljs.core.Keyword(null, "fill", "fill", 883462889) : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, 
  "miser", "miser", -556060186) : new cljs.core.Keyword(null, "linear", "linear", 872268697);
  cljs.pprint.pprint_newline.call(null, kind);
  return navigator;
};
cljs.pprint.directive_table = cljs.core.PersistentHashMap.fromArrays(["A", "S", "D", "B", "O", "X", "R", "P", "C", "F", "E", "G", "$", "%", "\x26", "|", "~", "\n", "T", "*", "?", "(", ")", "[", ";", "]", "{", "}", "\x3c", "\x3e", "^", "W", "_", "I"], [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "A", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", 
"mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 
new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__8475_SHARP_, p2__8476_SHARP_, p3__8477_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.print_str, p1__8475_SHARP_, p2__8476_SHARP_, p3__8477_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "S", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__8478_SHARP_, p2__8479_SHARP_, p3__8480_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.pr_str, p1__8478_SHARP_, p2__8479_SHARP_, p3__8480_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "D", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__8481_SHARP_, p2__8482_SHARP_, p3__8483_SHARP_) {
    return cljs.pprint.format_integer.call(null, 10, p1__8481_SHARP_, p2__8482_SHARP_, p3__8483_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "B", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__8484_SHARP_, p2__8485_SHARP_, p3__8486_SHARP_) {
    return cljs.pprint.format_integer.call(null, 2, p1__8484_SHARP_, p2__8485_SHARP_, p3__8486_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "O", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__8487_SHARP_, p2__8488_SHARP_, p3__8489_SHARP_) {
    return cljs.pprint.format_integer.call(null, 8, p1__8487_SHARP_, p2__8488_SHARP_, p3__8489_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "X", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__8490_SHARP_, p2__8491_SHARP_, p3__8492_SHARP_) {
    return cljs.pprint.format_integer.call(null, 16, p1__8490_SHARP_, p2__8491_SHARP_, p3__8492_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "R", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(cljs.core.first.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return function(p1__8493_SHARP_, p2__8494_SHARP_, p3__8495_SHARP_) {
      return cljs.pprint.format_integer.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(p1__8493_SHARP_), p1__8493_SHARP_, p2__8494_SHARP_, p3__8495_SHARP_);
    };
  } else {
    if (cljs.core.truth_(function() {
      var and__4514__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(and__4514__auto__)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__4514__auto__;
      }
    }())) {
      return function(p1__8496_SHARP_, p2__8497_SHARP_, p3__8498_SHARP_) {
        return cljs.pprint.format_old_roman.call(null, p1__8496_SHARP_, p2__8497_SHARP_, p3__8498_SHARP_);
      };
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return function(p1__8499_SHARP_, p2__8500_SHARP_, p3__8501_SHARP_) {
          return cljs.pprint.format_new_roman.call(null, p1__8499_SHARP_, p2__8500_SHARP_, p3__8501_SHARP_);
        };
      } else {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
          return function(p1__8502_SHARP_, p2__8503_SHARP_, p3__8504_SHARP_) {
            return cljs.pprint.format_ordinal_english.call(null, p1__8502_SHARP_, p2__8503_SHARP_, p3__8504_SHARP_);
          };
        } else {
          return function(p1__8505_SHARP_, p2__8506_SHARP_, p3__8507_SHARP_) {
            return cljs.pprint.format_cardinal_english.call(null, p1__8505_SHARP_, p2__8506_SHARP_, p3__8507_SHARP_);
          };
        }
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "P", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var navigator__$1 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.pprint.relative_reposition.call(null, navigator, -1) : navigator;
    var strs = cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["y", "ies"], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "s"], null);
    var vec__8517 = cljs.pprint.next_arg.call(null, navigator__$1);
    var arg = cljs.core.nth.call(null, vec__8517, 0, null);
    var navigator__$2 = cljs.core.nth.call(null, vec__8517, 1, null);
    cljs.pprint.print.call(null, cljs.core._EQ_.call(null, arg, 1) ? cljs.core.first.call(null, strs) : cljs.core.second.call(null, strs));
    return navigator__$2;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "C", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "char-format", "char-format", -1016499218), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.pretty_character;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.readable_character;
    } else {
      return cljs.pprint.plain_character;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "F", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.fixed_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "E", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.exponential_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "G", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.general_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "$", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, Number], null), new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.dollar_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "%", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__5410__auto___8523 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_8524 = 0;
    while (true) {
      if (i_8524 < n__5410__auto___8523) {
        cljs.pprint.prn.call(null);
        var G__8525 = i_8524 + 1;
        i_8524 = G__8525;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x26", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var cnt_8526 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cnt_8526 > 0) {
      cljs.pprint.fresh_line.call(null);
    } else {
    }
    var n__5410__auto___8527 = cnt_8526 - 1;
    var i_8528 = 0;
    while (true) {
      if (i_8528 < n__5410__auto___8527) {
        cljs.pprint.prn.call(null);
        var G__8529 = i_8528 + 1;
        i_8528 = G__8529;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "|", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__5410__auto___8530 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_8531 = 0;
    while (true) {
      if (i_8531 < n__5410__auto___8530) {
        cljs.pprint.print.call(null, "\f");
        var G__8532 = i_8531 + 1;
        i_8531 = G__8532;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "~", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n, "~")));
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\n", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), 
new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      cljs.pprint.prn.call(null);
    } else {
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "T", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colnum", "colnum", 2023796854), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(p1__8508_SHARP_, p2__8509_SHARP_, p3__8510_SHARP_) {
      return cljs.pprint.relative_tabulation.call(null, p1__8508_SHARP_, p2__8509_SHARP_, p3__8510_SHARP_);
    };
  } else {
    return function(p1__8511_SHARP_, p2__8512_SHARP_, p3__8513_SHARP_) {
      return cljs.pprint.absolute_tabulation.call(null, p1__8511_SHARP_, p2__8512_SHARP_, p3__8513_SHARP_);
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "*", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      return cljs.pprint.absolute_reposition.call(null, navigator, n);
    } else {
      return cljs.pprint.relative_reposition.call(null, navigator, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? -n : n);
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "?", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), 
cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(params__$1, navigator, offsets) {
      var vec__8518 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__8518, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__8518, 1, null);
      return cljs.pprint.execute_sub_format.call(null, subformat, navigator__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
    };
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__8519 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__8519, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__8519, 1, null);
      var vec__8520 = cljs.pprint.next_arg.call(null, navigator__$1);
      var subargs = cljs.core.nth.call(null, vec__8520, 0, null);
      var navigator__$2 = cljs.core.nth.call(null, vec__8520, 1, null);
      var sub_navigator = cljs.pprint.init_navigator.call(null, subargs);
      cljs.pprint.execute_sub_format.call(null, subformat, sub_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
      return navigator__$2;
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "(", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), ")", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), null, new cljs.core.Keyword(null, "else", "else", -1508377146), null], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  var mod_case_writer = cljs.core.truth_(function() {
    var and__4514__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__4514__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__4514__auto__;
    }
  }()) ? cljs.pprint.upcase_writer : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.capitalize_word_writer : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.init_cap_writer : cljs.pprint.downcase_writer;
  return function(mod_case_writer) {
    return function(p1__8514_SHARP_, p2__8515_SHARP_, p3__8516_SHARP_) {
      return cljs.pprint.modify_case.call(null, mod_case_writer, p1__8514_SHARP_, p2__8515_SHARP_, p3__8516_SHARP_);
    };
  }(mod_case_writer);
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ")", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "[", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selector", "selector", 762528866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "]", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), true, new cljs.core.Keyword(null, "else", "else", -1508377146), 
new cljs.core.Keyword(null, "last", "last", 1105735132)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.boolean_conditional;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.check_arg_conditional;
    } else {
      return cljs.pprint.choice_conditional;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ";", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), true], null), new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "]", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "{", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "right", "right", -452581833), "}", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
false], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__4514__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__4514__auto__;
    }
  }())) {
    return cljs.pprint.iterate_main_sublists;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.iterate_list_of_sublists;
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return cljs.pprint.iterate_main_list;
      } else {
        return cljs.pprint.iterate_sublist;
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "}", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3c", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "\x3e", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
true, new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.Keyword(null, "first", "first", -644103046)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.logical_block_or_justify;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3e", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "^", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, 
new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var arg1 = (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg2 = (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg3 = (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var exit = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007) : new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333);
    if (cljs.core.truth_(function() {
      var and__4514__auto__ = arg1;
      if (cljs.core.truth_(and__4514__auto__)) {
        var and__4514__auto____$1 = arg2;
        if (cljs.core.truth_(and__4514__auto____$1)) {
          return arg3;
        } else {
          return and__4514__auto____$1;
        }
      } else {
        return and__4514__auto__;
      }
    }())) {
      if (arg1 <= arg2 && arg2 <= arg3) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
      } else {
        return navigator;
      }
    } else {
      if (cljs.core.truth_(function() {
        var and__4514__auto__ = arg1;
        if (cljs.core.truth_(and__4514__auto__)) {
          return arg2;
        } else {
          return and__4514__auto__;
        }
      }())) {
        if (cljs.core._EQ_.call(null, arg1, arg2)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
        } else {
          return navigator;
        }
      } else {
        if (cljs.core.truth_(arg1)) {
          if (cljs.core._EQ_.call(null, arg1, 0)) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        } else {
          if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1))) : cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        }
      }
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "W", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var or__4526__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    }
  }())) {
    var bindings = cljs.core.concat.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "level", "level", 1290497552), null, new cljs.core.Keyword(null, "length", "length", 588987862), null], null) : cljs.core.PersistentVector.EMPTY, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 
    new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), true], null) : cljs.core.PersistentVector.EMPTY);
    return function(bindings) {
      return function(params__$1, navigator, offsets) {
        var vec__8521 = cljs.pprint.next_arg.call(null, navigator);
        var arg = cljs.core.nth.call(null, vec__8521, 0, null);
        var navigator__$1 = cljs.core.nth.call(null, vec__8521, 1, null);
        if (cljs.core.truth_(cljs.core.apply.call(null, cljs.pprint.write, arg, bindings))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
        } else {
          return navigator__$1;
        }
      };
    }(bindings);
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__8522 = cljs.pprint.next_arg.call(null, navigator);
      var arg = cljs.core.nth.call(null, vec__8522, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__8522, 1, null);
      if (cljs.core.truth_(cljs.pprint.write_out.call(null, arg))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
      } else {
        return navigator__$1;
      }
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "_", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.conditional_newline;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "I", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.set_indent;
}], null)]);
cljs.pprint.param_pattern = /^([vV]|#|('.)|([+-]?\d+)|(?=,))/;
cljs.pprint.special_params = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335), null, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196), null], null), null);
cljs.pprint.extract_param = function cljs$pprint$extract_param(p__8533) {
  var vec__8535 = p__8533;
  var s = cljs.core.nth.call(null, vec__8535, 0, null);
  var offset = cljs.core.nth.call(null, vec__8535, 1, null);
  var saw_comma = cljs.core.nth.call(null, vec__8535, 2, null);
  var m = new RegExp(cljs.pprint.param_pattern.source, "g");
  var param = m.exec(s);
  if (cljs.core.truth_(param)) {
    var token_str = cljs.core.first.call(null, param);
    var remainder = cljs.core.subs.call(null, s, m.lastIndex);
    var new_offset = offset + m.lastIndex;
    if (!cljs.core._EQ_.call(null, ",", cljs.core.nth.call(null, remainder, 0))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder, new_offset, false], null)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, remainder, 1), new_offset + 1, true], null)], null);
    }
  } else {
    if (cljs.core.truth_(saw_comma)) {
      return cljs.pprint.format_error.call(null, "Badly formed parameters in format directive", offset);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset], null)], null);
    }
  }
};
cljs.pprint.extract_params = function cljs$pprint$extract_params(s, offset) {
  return cljs.pprint.consume.call(null, cljs.pprint.extract_param, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, false], null));
};
cljs.pprint.translate_param = function cljs$pprint$translate_param(p__8536) {
  var vec__8538 = p__8536;
  var p = cljs.core.nth.call(null, vec__8538, 0, null);
  var offset = cljs.core.nth.call(null, vec__8538, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, p.length, 0) ? null : cljs.core._EQ_.call(null, p.length, 1) && cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["V", null, "v", null], null), null), cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196) : cljs.core._EQ_.call(null, p.length, 1) && 
  cljs.core._EQ_.call(null, "#", cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335) : cljs.core._EQ_.call(null, p.length, 2) && cljs.core._EQ_.call(null, "'", cljs.core.nth.call(null, p, 0)) ? cljs.core.nth.call(null, p, 1) : parseInt(p), offset], null);
};
cljs.pprint.flag_defs = new cljs.core.PersistentArrayMap(null, 2, [":", new cljs.core.Keyword(null, "colon", "colon", -965200945), "@", new cljs.core.Keyword(null, "at", "at", 1476951349)], null);
cljs.pprint.extract_flags = function cljs$pprint$extract_flags(s, offset) {
  return cljs.pprint.consume.call(null, function(p__8541) {
    var vec__8542 = p__8541;
    var s__$1 = cljs.core.nth.call(null, vec__8542, 0, null);
    var offset__$1 = cljs.core.nth.call(null, vec__8542, 1, null);
    var flags = cljs.core.nth.call(null, vec__8542, 2, null);
    if (cljs.core.empty_QMARK_.call(null, s__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
    } else {
      var flag = cljs.core.get.call(null, cljs.pprint.flag_defs, cljs.core.first.call(null, s__$1));
      if (cljs.core.truth_(flag)) {
        if (cljs.core.contains_QMARK_.call(null, flags, flag)) {
          return cljs.pprint.format_error.call(null, [cljs.core.str('Flag "'), cljs.core.str(cljs.core.first.call(null, s__$1)), cljs.core.str('" appears more than once in a directive')].join(""), offset__$1);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s__$1, 1), offset__$1 + 1, cljs.core.assoc.call(null, flags, flag, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, offset__$1], null))], null)], null);
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, cljs.core.PersistentArrayMap.EMPTY], null));
};
cljs.pprint.check_flags = function cljs$pprint$check_flags(def, flags) {
  var allowed = (new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1(def);
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__4514__auto__) {
      return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__4514__auto__;
    }
  }())) {
    cljs.pprint.format_error.call(null, [cljs.core.str('"@" is an illegal flag for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__4514__auto__) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__4514__auto__;
    }
  }())) {
    cljs.pprint.format_error.call(null, [cljs.core.str('":" is an illegal flag for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = cljs.core.not.call(null, (new cljs.core.Keyword(null, "both", "both", -393648840)).cljs$core$IFn$_invoke$arity$1(allowed));
    if (and__4514__auto__) {
      var and__4514__auto____$1 = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
      if (cljs.core.truth_(and__4514__auto____$1)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
      } else {
        return and__4514__auto____$1;
      }
    } else {
      return and__4514__auto__;
    }
  }())) {
    return cljs.pprint.format_error.call(null, [cljs.core.str('Cannot combine "@" and ":" flags for format directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('"')].join(""), function() {
      var x__4845__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      var y__4846__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      return x__4845__auto__ < y__4846__auto__ ? x__4845__auto__ : y__4846__auto__;
    }());
  } else {
    return null;
  }
};
cljs.pprint.map_params = function cljs$pprint$map_params(def, params, flags, offset) {
  cljs.pprint.check_flags.call(null, def, flags);
  if (cljs.core.count.call(null, params) > cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))) {
    cljs.pprint.format_error.call(null, cljs.pprint.cl_format.call(null, null, 'Too many parameters for directive "~C": ~D~:* ~[were~;was~:;were~] specified but only ~D~:* ~[are~;is~:;are~] allowed', (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def), cljs.core.count.call(null, params), cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))), cljs.core.second.call(null, cljs.core.first.call(null, 
    params)));
  } else {
  }
  cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__8543_SHARP_, p2__8544_SHARP_) {
    var val = cljs.core.first.call(null, p1__8543_SHARP_);
    if (!(val == null || cljs.core.contains_QMARK_.call(null, cljs.pprint.special_params, val) || cljs.core._EQ_.call(null, cljs.core.second.call(null, cljs.core.second.call(null, p2__8544_SHARP_)), cljs.core.type.call(null, val)))) {
      return cljs.pprint.format_error.call(null, [cljs.core.str("Parameter "), cljs.core.str(cljs.core.name.call(null, cljs.core.first.call(null, p2__8544_SHARP_))), cljs.core.str(' has bad type in directive "'), cljs.core.str((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), cljs.core.str('": '), cljs.core.str(cljs.core.type.call(null, val))].join(""), cljs.core.second.call(null, p1__8543_SHARP_));
    } else {
      return null;
    }
  }, params, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)));
  return cljs.core.merge.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.reverse.call(null, function() {
    var iter__5279__auto__ = function cljs$pprint$map_params_$_iter__8560(s__8561) {
      return new cljs.core.LazySeq(null, function() {
        var s__8561__$1 = s__8561;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__8561__$1);
          if (temp__4425__auto__) {
            var s__8561__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__8561__$2)) {
              var c__5277__auto__ = cljs.core.chunk_first.call(null, s__8561__$2);
              var size__5278__auto__ = cljs.core.count.call(null, c__5277__auto__);
              var b__8563 = cljs.core.chunk_buffer.call(null, size__5278__auto__);
              if (function() {
                var i__8562 = 0;
                while (true) {
                  if (i__8562 < size__5278__auto__) {
                    var vec__8568 = cljs.core._nth.call(null, c__5277__auto__, i__8562);
                    var name = cljs.core.nth.call(null, vec__8568, 0, null);
                    var vec__8569 = cljs.core.nth.call(null, vec__8568, 1, null);
                    var default$ = cljs.core.nth.call(null, vec__8569, 0, null);
                    cljs.core.chunk_append.call(null, b__8563, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null));
                    var G__8572 = i__8562 + 1;
                    i__8562 = G__8572;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8563), cljs$pprint$map_params_$_iter__8560.call(null, cljs.core.chunk_rest.call(null, s__8561__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8563), null);
              }
            } else {
              var vec__8570 = cljs.core.first.call(null, s__8561__$2);
              var name = cljs.core.nth.call(null, vec__8570, 0, null);
              var vec__8571 = cljs.core.nth.call(null, vec__8570, 1, null);
              var default$ = cljs.core.nth.call(null, vec__8571, 0, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null), cljs$pprint$map_params_$_iter__8560.call(null, cljs.core.rest.call(null, s__8561__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5279__auto__.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def));
  }())), cljs.core.reduce.call(null, function(p1__8545_SHARP_, p2__8546_SHARP_) {
    return cljs.core.apply.call(null, cljs.core.assoc, p1__8545_SHARP_, p2__8546_SHARP_);
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(p1__8547_SHARP_) {
    return cljs.core.first.call(null, cljs.core.nth.call(null, p1__8547_SHARP_, 1));
  }, cljs.core.zipmap.call(null, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)), params))), flags);
};
cljs.pprint.compile_directive = function cljs$pprint$compile_directive(s, offset) {
  var vec__8577 = cljs.pprint.extract_params.call(null, s, offset);
  var raw_params = cljs.core.nth.call(null, vec__8577, 0, null);
  var vec__8578 = cljs.core.nth.call(null, vec__8577, 1, null);
  var rest = cljs.core.nth.call(null, vec__8578, 0, null);
  var offset__$1 = cljs.core.nth.call(null, vec__8578, 1, null);
  var vec__8579 = cljs.pprint.extract_flags.call(null, rest, offset__$1);
  var _ = cljs.core.nth.call(null, vec__8579, 0, null);
  var vec__8580 = cljs.core.nth.call(null, vec__8579, 1, null);
  var rest__$1 = cljs.core.nth.call(null, vec__8580, 0, null);
  var offset__$2 = cljs.core.nth.call(null, vec__8580, 1, null);
  var flags = cljs.core.nth.call(null, vec__8580, 2, null);
  var directive = cljs.core.first.call(null, rest__$1);
  var def = cljs.core.get.call(null, cljs.pprint.directive_table, clojure.string.upper_case.call(null, directive));
  var params = cljs.core.truth_(def) ? cljs.pprint.map_params.call(null, def, cljs.core.map.call(null, cljs.pprint.translate_param, raw_params), flags, offset__$2) : null;
  if (cljs.core.not.call(null, directive)) {
    cljs.pprint.format_error.call(null, "Format string ended in the middle of a directive", offset__$2);
  } else {
  }
  if (cljs.core.not.call(null, def)) {
    cljs.pprint.format_error.call(null, [cljs.core.str('Directive "'), cljs.core.str(directive), cljs.core.str('" is undefined')].join(""), offset__$2);
  } else {
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656)).cljs$core$IFn$_invoke$arity$1(def).call(null, params, offset__$2), def, params, offset__$2, null, null, null), function() {
    var remainder = cljs.core.subs.call(null, rest__$1, 1);
    var offset__$3 = offset__$2 + 1;
    var trim_QMARK_ = cljs.core._EQ_.call(null, "\n", (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    var trim_count = trim_QMARK_ ? cljs.pprint.prefix_count.call(null, remainder, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", "\t"], null)) : 0;
    var remainder__$1 = cljs.core.subs.call(null, remainder, trim_count);
    var offset__$4 = offset__$3 + trim_count;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder__$1, offset__$4], null);
  }()], null);
};
cljs.pprint.compile_raw_string = function cljs$pprint$compile_raw_string(s, offset) {
  return new cljs.pprint.compiled_directive(function(_, a, ___$1) {
    cljs.pprint.print.call(null, s);
    return a;
  }, null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "string", "string", -1989541586), s], null), offset, null, null, null);
};
cljs.pprint.right_bracket = function cljs$pprint$right_bracket(this$) {
  return (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.separator_QMARK_ = function cljs$pprint$separator_QMARK_(this$) {
  return (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.else_separator_QMARK_ = function cljs$pprint$else_separator_QMARK_(this$) {
  var and__4514__auto__ = (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
  if (cljs.core.truth_(and__4514__auto__)) {
    return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$));
  } else {
    return and__4514__auto__;
  }
};
cljs.pprint.process_bracket = function cljs$pprint$process_bracket(this$, remainder) {
  var vec__8582 = cljs.pprint.collect_clauses.call(null, (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), remainder);
  var subex = cljs.core.nth.call(null, vec__8582, 0, null);
  var remainder__$1 = cljs.core.nth.call(null, vec__8582, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(this$), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), cljs.pprint.tuple_map.call(null, subex, (new cljs.core.Keyword(null, 
  "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$))), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), null, null, null), remainder__$1], null);
};
cljs.pprint.process_clause = function cljs$pprint$process_clause(bracket_info, offset, remainder) {
  return cljs.pprint.consume.call(null, function(remainder__$1) {
    if (cljs.core.empty_QMARK_.call(null, remainder__$1)) {
      return cljs.pprint.format_error.call(null, "No closing bracket found.", offset);
    } else {
      var this$ = cljs.core.first.call(null, remainder__$1);
      var remainder__$2 = cljs.core.next.call(null, remainder__$1);
      if (cljs.core.truth_(cljs.pprint.right_bracket.call(null, this$))) {
        return cljs.pprint.process_bracket.call(null, this$, remainder__$2);
      } else {
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket_info), (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), null, remainder__$2], null)], null);
        } else {
          if (cljs.core.truth_(cljs.pprint.else_separator_QMARK_.call(null, this$))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "else", "else", -1508377146), null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), remainder__$2], null)], null);
          } else {
            if (cljs.core.truth_(cljs.pprint.separator_QMARK_.call(null, this$))) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), null, null, remainder__$2], null)], null);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$2], null);
            }
          }
        }
      }
    }
  }, remainder);
};
cljs.pprint.collect_clauses = function cljs$pprint$collect_clauses(bracket_info, offset, remainder) {
  return cljs.core.second.call(null, cljs.pprint.consume.call(null, function(p__8587) {
    var vec__8588 = p__8587;
    var clause_map = cljs.core.nth.call(null, vec__8588, 0, null);
    var saw_else = cljs.core.nth.call(null, vec__8588, 1, null);
    var remainder__$1 = cljs.core.nth.call(null, vec__8588, 2, null);
    var vec__8589 = cljs.pprint.process_clause.call(null, bracket_info, offset, remainder__$1);
    var clause = cljs.core.nth.call(null, vec__8589, 0, null);
    var vec__8590 = cljs.core.nth.call(null, vec__8589, 1, null);
    var type = cljs.core.nth.call(null, vec__8590, 0, null);
    var right_params = cljs.core.nth.call(null, vec__8590, 1, null);
    var else_params = cljs.core.nth.call(null, vec__8590, 2, null);
    var remainder__$2 = cljs.core.nth.call(null, vec__8590, 3, null);
    if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap.fromArray([cljs.core.truth_(saw_else) ? new cljs.core.Keyword(null, "else", "else", -1508377146) : new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [clause], null), new cljs.core.Keyword(null, "right-params", "right-params", -1790676237), right_params], true, false)), remainder__$2], null)], null);
    } else {
      if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "else", "else", -1508377146))) {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
          return cljs.pprint.format_error.call(null, 'Two else clauses ("~:;") inside bracket construction.', offset);
        } else {
          if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
            return cljs.pprint.format_error.call(null, 'An else clause ("~:;") is in a bracket type that doesn\'t support it.', offset);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info)) && cljs.core.seq.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
              return cljs.pprint.format_error.call(null, 'The else clause ("~:;") is only allowed in the first position for this directive.', offset);
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null), new cljs.core.Keyword(null, "else-params", "else-params", 
                -832171646), else_params], null)), false, remainder__$2], null)], null);
              } else {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), true, remainder__$2], null)], 
                null);
              }
            }
          }
        }
      } else {
        if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "separator", "separator", -1628749125))) {
          if (cljs.core.truth_(saw_else)) {
            return cljs.pprint.format_error.call(null, 'A plain clause (with "~;") follows an else clause ("~:;") inside bracket construction.', offset);
          } else {
            if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
              return cljs.pprint.format_error.call(null, 'A separator ("~;") is in a bracket type that doesn\'t support it.', offset);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), false, remainder__$2], null)], null)
              ;
            }
          }
        } else {
          return null;
        }
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), cljs.core.PersistentVector.EMPTY], null), false, remainder], null)));
};
cljs.pprint.process_nesting = function cljs$pprint$process_nesting(format) {
  return cljs.core.first.call(null, cljs.pprint.consume.call(null, function(remainder) {
    var this$ = cljs.core.first.call(null, remainder);
    var remainder__$1 = cljs.core.next.call(null, remainder);
    var bracket = (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$));
    if (cljs.core.truth_((new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket))) {
      return cljs.pprint.process_bracket.call(null, this$, remainder__$1);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$1], null);
    }
  }, format));
};
cljs.pprint.compile_format = function cljs$pprint$compile_format(format_str) {
  var _STAR_format_str_STAR_8594 = cljs.pprint._STAR_format_str_STAR_;
  cljs.pprint._STAR_format_str_STAR_ = format_str;
  try {
    return cljs.pprint.process_nesting.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(_STAR_format_str_STAR_8594) {
      return function(p__8595) {
        var vec__8596 = p__8595;
        var s = cljs.core.nth.call(null, vec__8596, 0, null);
        var offset = cljs.core.nth.call(null, vec__8596, 1, null);
        if (cljs.core.empty_QMARK_.call(null, s)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, s], null);
        } else {
          var tilde = s.indexOf("~");
          if (tilde < 0) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, s, offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", offset + s.length], null)], null);
          } else {
            if (tilde === 0) {
              return cljs.pprint.compile_directive.call(null, cljs.core.subs.call(null, s, 1), offset + 1);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, cljs.core.subs.call(null, s, 0, tilde), offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, tilde), tilde + offset], null)], null);
            }
          }
        }
      };
    }(_STAR_format_str_STAR_8594), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [format_str, 0], null))));
  } finally {
    cljs.pprint._STAR_format_str_STAR_ = _STAR_format_str_STAR_8594;
  }
};
cljs.pprint.needs_pretty = function cljs$pprint$needs_pretty(format) {
  var format__$1 = format;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, format__$1)) {
      return false;
    } else {
      if (cljs.core.truth_(function() {
        var or__4526__auto__ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1))));
        if (cljs.core.truth_(or__4526__auto__)) {
          return or__4526__auto__;
        } else {
          var or__4526__auto____$1 = cljs.core.some.call(null, cljs$pprint$needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          if (cljs.core.truth_(or__4526__auto____$1)) {
            return or__4526__auto____$1;
          } else {
            return cljs.core.some.call(null, cljs$pprint$needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          }
        }
      }())) {
        return true;
      } else {
        var G__8597 = cljs.core.next.call(null, format__$1);
        format__$1 = G__8597;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.execute_format = function cljs$pprint$execute_format() {
  var args8598 = [];
  var len__5565__auto___8604 = arguments.length;
  var i__5566__auto___8605 = 0;
  while (true) {
    if (i__5566__auto___8605 < len__5565__auto___8604) {
      args8598.push(arguments[i__5566__auto___8605]);
      var G__8606 = i__5566__auto___8605 + 1;
      i__5566__auto___8605 = G__8606;
      continue;
    } else {
    }
    break;
  }
  var G__8600 = args8598.length;
  switch(G__8600) {
    case 3:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 2:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8598.length)].join(""));;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3 = function(stream, format, args) {
  var sb = new goog.string.StringBuffer;
  var real_stream = cljs.core.not.call(null, stream) || stream === true ? new cljs.core.StringBufferWriter(sb) : stream;
  var wrapped_stream = cljs.core.truth_(function() {
    var and__4514__auto__ = cljs.pprint.needs_pretty.call(null, format);
    if (cljs.core.truth_(and__4514__auto__)) {
      return cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, real_stream));
    } else {
      return and__4514__auto__;
    }
  }()) ? cljs.pprint.get_pretty_writer.call(null, real_stream) : real_stream;
  var _STAR_out_STAR_8601 = cljs.core._STAR_out_STAR_;
  cljs.core._STAR_out_STAR_ = wrapped_stream;
  try {
    try {
      cljs.pprint.execute_format.call(null, format, args);
    } finally {
      if (!(real_stream === wrapped_stream)) {
        cljs.core._flush.call(null, wrapped_stream);
      } else {
      }
    }
    if (cljs.core.not.call(null, stream)) {
      return [cljs.core.str(sb)].join("");
    } else {
      if (stream === true) {
        return cljs.core._STAR_print_fn_STAR_.call(null, [cljs.core.str(sb)].join(""));
      } else {
        return null;
      }
    }
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR_8601;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2 = function(format, args) {
  cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.core.truth_(cljs.pprint.abort_QMARK_.call(null, context))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__8602 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__8602, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__8602, 1, null);
      var vec__8603 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__8603, 0, null);
      var offsets = cljs.core.nth.call(null, vec__8603, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), args__$1);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format);
  return null;
};
cljs.pprint.execute_format.cljs$lang$maxFixedArity = 3;
cljs.pprint.cached_compile = cljs.core.memoize.call(null, cljs.pprint.compile_format);
cljs.pprint.use_method = function cljs$pprint$use_method(multifn, dispatch_val, func) {
  return cljs.core._add_method.call(null, multifn, dispatch_val, func);
};
cljs.pprint.reader_macros = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "'", new cljs.core.Symbol(null, "var", "var", 870848730, null), "#'", new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), "@", new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null), "~", new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null), "@", new cljs.core.Symbol("cljs.core", 
"unquote", "cljs.core/unquote", 1013085760, null), "~"], null);
cljs.pprint.pprint_reader_macro = function cljs$pprint$pprint_reader_macro(alis) {
  var macro_char = cljs.pprint.reader_macros.call(null, cljs.core.first.call(null, alis));
  if (cljs.core.truth_(function() {
    var and__4514__auto__ = macro_char;
    if (cljs.core.truth_(and__4514__auto__)) {
      return cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, alis));
    } else {
      return and__4514__auto__;
    }
  }())) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, macro_char);
    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis));
    return true;
  } else {
    return null;
  }
};
cljs.pprint.pprint_simple_list = function cljs$pprint$pprint_simple_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_8611_8614 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_8612_8615 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      var length_count8613_8616 = 0;
      var alis_8617__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count8613_8616 < cljs.core._STAR_print_length_STAR_) {
          if (alis_8617__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_8617__$1));
            if (cljs.core.next.call(null, alis_8617__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__8618 = length_count8613_8616 + 1;
              var G__8619 = cljs.core.next.call(null, alis_8617__$1);
              length_count8613_8616 = G__8618;
              alis_8617__$1 = G__8619;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_8612_8615;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_8611_8614;
    }
  }
  return null;
};
cljs.pprint.pprint_list = function cljs$pprint$pprint_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    return cljs.pprint.pprint_simple_list.call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_vector = function cljs$pprint$pprint_vector(avec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_8623_8626 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_8624_8627 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count8625_8628 = 0;
      var aseq_8629 = cljs.core.seq.call(null, avec);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count8625_8628 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_8629) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, aseq_8629));
            if (cljs.core.next.call(null, aseq_8629)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__8630 = length_count8625_8628 + 1;
              var G__8631 = cljs.core.next.call(null, aseq_8629);
              length_count8625_8628 = G__8630;
              aseq_8629 = G__8631;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_8624_8627;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_8623_8626;
    }
  }
  return null;
};
cljs.pprint.pprint_array = function() {
  var format_in__6804__auto__ = "~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e";
  var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
  return function(format_in__6804__auto__, cf__6805__auto__) {
    return function() {
      var G__8632__delegate = function(args__6806__auto__) {
        var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
        return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
      };
      var G__8632 = function(var_args) {
        var args__6806__auto__ = null;
        if (arguments.length > 0) {
          var G__8633__i = 0, G__8633__a = new Array(arguments.length - 0);
          while (G__8633__i < G__8633__a.length) {
            G__8633__a[G__8633__i] = arguments[G__8633__i + 0];
            ++G__8633__i;
          }
          args__6806__auto__ = new cljs.core.IndexedSeq(G__8633__a, 0);
        }
        return G__8632__delegate.call(this, args__6806__auto__);
      };
      G__8632.cljs$lang$maxFixedArity = 0;
      G__8632.cljs$lang$applyTo = function(arglist__8634) {
        var args__6806__auto__ = cljs.core.seq(arglist__8634);
        return G__8632__delegate(args__6806__auto__);
      };
      G__8632.cljs$core$IFn$_invoke$arity$variadic = G__8632__delegate;
      return G__8632;
    }();
  }(format_in__6804__auto__, cf__6805__auto__);
}();
cljs.pprint.pprint_map = function cljs$pprint$pprint_map(amap) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_8640_8645 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_8641_8646 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "{", null, "}");
      var length_count8642_8647 = 0;
      var aseq_8648 = cljs.core.seq.call(null, amap);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count8642_8647 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_8648) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR_8643_8649 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR_8644_8650 = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.ffirst.call(null, aseq_8648));
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                cljs.pprint._STAR_current_length_STAR_ = 0;
                cljs.pprint.write_out.call(null, cljs.core.fnext.call(null, cljs.core.first.call(null, aseq_8648)));
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_8644_8650;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_8643_8649;
              }
            }
            if (cljs.core.next.call(null, aseq_8648)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, ", ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__8651 = length_count8642_8647 + 1;
              var G__8652 = cljs.core.next.call(null, aseq_8648);
              length_count8642_8647 = G__8651;
              aseq_8648 = G__8652;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_8641_8646;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_8640_8645;
    }
  }
  return null;
};
cljs.pprint.pprint_simple_default = function cljs$pprint$pprint_simple_default(obj) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, obj));
};
cljs.pprint.pprint_set = function() {
  var format_in__6804__auto__ = "~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e";
  var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
  return function(format_in__6804__auto__, cf__6805__auto__) {
    return function() {
      var G__8653__delegate = function(args__6806__auto__) {
        var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
        return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
      };
      var G__8653 = function(var_args) {
        var args__6806__auto__ = null;
        if (arguments.length > 0) {
          var G__8654__i = 0, G__8654__a = new Array(arguments.length - 0);
          while (G__8654__i < G__8654__a.length) {
            G__8654__a[G__8654__i] = arguments[G__8654__i + 0];
            ++G__8654__i;
          }
          args__6806__auto__ = new cljs.core.IndexedSeq(G__8654__a, 0);
        }
        return G__8653__delegate.call(this, args__6806__auto__);
      };
      G__8653.cljs$lang$maxFixedArity = 0;
      G__8653.cljs$lang$applyTo = function(arglist__8655) {
        var args__6806__auto__ = cljs.core.seq(arglist__8655);
        return G__8653__delegate(args__6806__auto__);
      };
      G__8653.cljs$core$IFn$_invoke$arity$variadic = G__8653__delegate;
      return G__8653;
    }();
  }(format_in__6804__auto__, cf__6805__auto__);
}();
cljs.pprint.type_map = new cljs.core.PersistentArrayMap(null, 2, ["core$future_call", "Future", "core$promise", "Promise"], null);
cljs.pprint.map_ref_type = function cljs$pprint$map_ref_type(name) {
  var or__4526__auto__ = function() {
    var temp__4425__auto__ = cljs.core.re_find.call(null, /^[^$]+\$[^$]+/, name);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var match = temp__4425__auto__;
      return cljs.pprint.type_map.call(null, match);
    } else {
      return null;
    }
  }();
  if (cljs.core.truth_(or__4526__auto__)) {
    return or__4526__auto__;
  } else {
    return name;
  }
};
cljs.pprint.pprint_ideref = function cljs$pprint$pprint_ideref(o) {
  var prefix = [cljs.core.str("#\x3c"), cljs.core.str(cljs.pprint.map_ref_type.call(null, cljs.core.type.call(null, o).name)), cljs.core.str("@"), cljs.core.str(goog.getUid(o)), cljs.core.str(": ")].join("");
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_8660_8664 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_8661_8665 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, "\x3e");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), -(cljs.core.count.call(null, prefix) - 2));
      cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
      cljs.pprint.write_out.call(null, function() {
        var and__4514__auto__ = !(o == null) ? o.cljs$lang$protocol_mask$partition1$ & 1 || o.cljs$core$IPending$ ? true : !o.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o);
        if (and__4514__auto__) {
          return !cljs.core._realized_QMARK_.call(null, o);
        } else {
          return and__4514__auto__;
        }
      }() ? new cljs.core.Keyword(null, "not-delivered", "not-delivered", 1599158697) : cljs.core.deref.call(null, o));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_8661_8665;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_8660_8664;
    }
  }
  return null;
};
cljs.pprint.pprint_pqueue = function() {
  var format_in__6804__auto__ = "~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e";
  var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
  return function(format_in__6804__auto__, cf__6805__auto__) {
    return function() {
      var G__8666__delegate = function(args__6806__auto__) {
        var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
        return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
      };
      var G__8666 = function(var_args) {
        var args__6806__auto__ = null;
        if (arguments.length > 0) {
          var G__8667__i = 0, G__8667__a = new Array(arguments.length - 0);
          while (G__8667__i < G__8667__a.length) {
            G__8667__a[G__8667__i] = arguments[G__8667__i + 0];
            ++G__8667__i;
          }
          args__6806__auto__ = new cljs.core.IndexedSeq(G__8667__a, 0);
        }
        return G__8666__delegate.call(this, args__6806__auto__);
      };
      G__8666.cljs$lang$maxFixedArity = 0;
      G__8666.cljs$lang$applyTo = function(arglist__8668) {
        var args__6806__auto__ = cljs.core.seq(arglist__8668);
        return G__8666__delegate(args__6806__auto__);
      };
      G__8666.cljs$core$IFn$_invoke$arity$variadic = G__8666__delegate;
      return G__8666;
    }();
  }(format_in__6804__auto__, cf__6805__auto__);
}();
cljs.pprint.type_dispatcher = function cljs$pprint$type_dispatcher(obj) {
  if (obj instanceof cljs.core.PersistentQueue) {
    return new cljs.core.Keyword(null, "queue", "queue", 1455835879);
  } else {
    if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 32768 || obj.cljs$core$IDeref$ ? true : !obj.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj)) {
      return new cljs.core.Keyword(null, "deref", "deref", -145586795);
    } else {
      if (obj instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(null, "symbol", "symbol", -1038572696);
      } else {
        if (cljs.core.seq_QMARK_.call(null, obj)) {
          return new cljs.core.Keyword(null, "list", "list", 765357683);
        } else {
          if (cljs.core.map_QMARK_.call(null, obj)) {
            return new cljs.core.Keyword(null, "map", "map", 1371690461);
          } else {
            if (cljs.core.vector_QMARK_.call(null, obj)) {
              return new cljs.core.Keyword(null, "vector", "vector", 1902966158);
            } else {
              if (cljs.core.set_QMARK_.call(null, obj)) {
                return new cljs.core.Keyword(null, "set", "set", 304602554);
              } else {
                if (obj == null) {
                  return null;
                } else {
                  return new cljs.core.Keyword(null, "default", "default", -1987822328);
                }
              }
            }
          }
        }
      }
    }
  }
};
if (typeof cljs.pprint.simple_dispatch !== "undefined") {
} else {
  cljs.pprint.simple_dispatch = function() {
    var method_table__5420__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5421__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5422__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5423__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5424__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "simple-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5424__auto__, method_table__5420__auto__, prefer_table__5421__auto__, method_cache__5422__auto__, cached_hierarchy__5423__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_list);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, null, function() {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, null));
});
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.brackets = function cljs$pprint$brackets(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["[", "]"], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(", ")"], null);
  }
};
cljs.pprint.pprint_ns_reference = function cljs$pprint$pprint_ns_reference(reference) {
  if (cljs.core.sequential_QMARK_.call(null, reference)) {
    var vec__8679 = cljs.pprint.brackets.call(null, reference);
    var start = cljs.core.nth.call(null, vec__8679, 0, null);
    var end = cljs.core.nth.call(null, vec__8679, 1, null);
    var vec__8680 = reference;
    var keyw = cljs.core.nth.call(null, vec__8680, 0, null);
    var args = cljs.core.nthnext.call(null, vec__8680, 1);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_8681_8687 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_8682_8688 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start, null, end);
        (function() {
          var format_in__6804__auto__ = "~w~:i";
          var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
          return function(format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8681_8687, _STAR_current_length_STAR_8682_8688, vec__8679, start, end, vec__8680, keyw, args) {
            return function() {
              var G__8689__delegate = function(args__6806__auto__) {
                var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
                return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
              };
              var G__8689 = function(var_args) {
                var args__6806__auto__ = null;
                if (arguments.length > 0) {
                  var G__8690__i = 0, G__8690__a = new Array(arguments.length - 0);
                  while (G__8690__i < G__8690__a.length) {
                    G__8690__a[G__8690__i] = arguments[G__8690__i + 0];
                    ++G__8690__i;
                  }
                  args__6806__auto__ = new cljs.core.IndexedSeq(G__8690__a, 0);
                }
                return G__8689__delegate.call(this, args__6806__auto__);
              };
              G__8689.cljs$lang$maxFixedArity = 0;
              G__8689.cljs$lang$applyTo = function(arglist__8691) {
                var args__6806__auto__ = cljs.core.seq(arglist__8691);
                return G__8689__delegate(args__6806__auto__);
              };
              G__8689.cljs$core$IFn$_invoke$arity$variadic = G__8689__delegate;
              return G__8689;
            }();
          }(format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8681_8687, _STAR_current_length_STAR_8682_8688, vec__8679, start, end, vec__8680, keyw, args);
        })().call(null, keyw);
        var args_8692__$1 = args;
        while (true) {
          if (cljs.core.seq.call(null, args_8692__$1)) {
            (function() {
              var format_in__6804__auto__ = " ";
              var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
              return function(args_8692__$1, format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8681_8687, _STAR_current_length_STAR_8682_8688, vec__8679, start, end, vec__8680, keyw, args) {
                return function() {
                  var G__8693__delegate = function(args__6806__auto__) {
                    var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
                    return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
                  };
                  var G__8693 = function(var_args) {
                    var args__6806__auto__ = null;
                    if (arguments.length > 0) {
                      var G__8694__i = 0, G__8694__a = new Array(arguments.length - 0);
                      while (G__8694__i < G__8694__a.length) {
                        G__8694__a[G__8694__i] = arguments[G__8694__i + 0];
                        ++G__8694__i;
                      }
                      args__6806__auto__ = new cljs.core.IndexedSeq(G__8694__a, 0);
                    }
                    return G__8693__delegate.call(this, args__6806__auto__);
                  };
                  G__8693.cljs$lang$maxFixedArity = 0;
                  G__8693.cljs$lang$applyTo = function(arglist__8695) {
                    var args__6806__auto__ = cljs.core.seq(arglist__8695);
                    return G__8693__delegate(args__6806__auto__);
                  };
                  G__8693.cljs$core$IFn$_invoke$arity$variadic = G__8693__delegate;
                  return G__8693;
                }();
              }(args_8692__$1, format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8681_8687, _STAR_current_length_STAR_8682_8688, vec__8679, start, end, vec__8680, keyw, args);
            })().call(null);
            var arg_8696 = cljs.core.first.call(null, args_8692__$1);
            if (cljs.core.sequential_QMARK_.call(null, arg_8696)) {
              var vec__8683_8697 = cljs.pprint.brackets.call(null, arg_8696);
              var start_8698__$1 = cljs.core.nth.call(null, vec__8683_8697, 0, null);
              var end_8699__$1 = cljs.core.nth.call(null, vec__8683_8697, 1, null);
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_8684_8700 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_8685_8701 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start_8698__$1, null, end_8699__$1);
                  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, arg_8696), 3) && cljs.core.second.call(null, arg_8696) instanceof cljs.core.Keyword) {
                    var vec__8686_8702 = arg_8696;
                    var ns_8703 = cljs.core.nth.call(null, vec__8686_8702, 0, null);
                    var kw_8704 = cljs.core.nth.call(null, vec__8686_8702, 1, null);
                    var lis_8705 = cljs.core.nth.call(null, vec__8686_8702, 2, null);
                    (function() {
                      var format_in__6804__auto__ = "~w ~w ";
                      var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
                      return function(args_8692__$1, format_in__6804__auto__, cf__6805__auto__, vec__8686_8702, ns_8703, kw_8704, lis_8705, _STAR_current_level_STAR_8684_8700, _STAR_current_length_STAR_8685_8701, vec__8683_8697, start_8698__$1, end_8699__$1, arg_8696, _STAR_current_level_STAR_8681_8687, _STAR_current_length_STAR_8682_8688, vec__8679, start, end, vec__8680, keyw, args) {
                        return function() {
                          var G__8706__delegate = function(args__6806__auto__) {
                            var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
                            return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
                          };
                          var G__8706 = function(var_args) {
                            var args__6806__auto__ = null;
                            if (arguments.length > 0) {
                              var G__8707__i = 0, G__8707__a = new Array(arguments.length - 0);
                              while (G__8707__i < G__8707__a.length) {
                                G__8707__a[G__8707__i] = arguments[G__8707__i + 0];
                                ++G__8707__i;
                              }
                              args__6806__auto__ = new cljs.core.IndexedSeq(G__8707__a, 0);
                            }
                            return G__8706__delegate.call(this, args__6806__auto__);
                          };
                          G__8706.cljs$lang$maxFixedArity = 0;
                          G__8706.cljs$lang$applyTo = function(arglist__8708) {
                            var args__6806__auto__ = cljs.core.seq(arglist__8708);
                            return G__8706__delegate(args__6806__auto__);
                          };
                          G__8706.cljs$core$IFn$_invoke$arity$variadic = G__8706__delegate;
                          return G__8706;
                        }();
                      }(args_8692__$1, format_in__6804__auto__, cf__6805__auto__, vec__8686_8702, ns_8703, kw_8704, lis_8705, _STAR_current_level_STAR_8684_8700, _STAR_current_length_STAR_8685_8701, vec__8683_8697, start_8698__$1, end_8699__$1, arg_8696, _STAR_current_level_STAR_8681_8687, _STAR_current_length_STAR_8682_8688, vec__8679, start, end, vec__8680, keyw, args);
                    })().call(null, ns_8703, kw_8704);
                    if (cljs.core.sequential_QMARK_.call(null, lis_8705)) {
                      (function() {
                        var format_in__6804__auto__ = cljs.core.vector_QMARK_.call(null, lis_8705) ? "~\x3c[~;~@{~w~^ ~:_~}~;]~:\x3e" : "~\x3c(~;~@{~w~^ ~:_~}~;)~:\x3e";
                        var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
                        return function(args_8692__$1, format_in__6804__auto__, cf__6805__auto__, vec__8686_8702, ns_8703, kw_8704, lis_8705, _STAR_current_level_STAR_8684_8700, _STAR_current_length_STAR_8685_8701, vec__8683_8697, start_8698__$1, end_8699__$1, arg_8696, _STAR_current_level_STAR_8681_8687, _STAR_current_length_STAR_8682_8688, vec__8679, start, end, vec__8680, keyw, args) {
                          return function() {
                            var G__8709__delegate = function(args__6806__auto__) {
                              var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
                              return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
                            };
                            var G__8709 = function(var_args) {
                              var args__6806__auto__ = null;
                              if (arguments.length > 0) {
                                var G__8710__i = 0, G__8710__a = new Array(arguments.length - 0);
                                while (G__8710__i < G__8710__a.length) {
                                  G__8710__a[G__8710__i] = arguments[G__8710__i + 0];
                                  ++G__8710__i;
                                }
                                args__6806__auto__ = new cljs.core.IndexedSeq(G__8710__a, 0);
                              }
                              return G__8709__delegate.call(this, args__6806__auto__);
                            };
                            G__8709.cljs$lang$maxFixedArity = 0;
                            G__8709.cljs$lang$applyTo = function(arglist__8711) {
                              var args__6806__auto__ = cljs.core.seq(arglist__8711);
                              return G__8709__delegate(args__6806__auto__);
                            };
                            G__8709.cljs$core$IFn$_invoke$arity$variadic = G__8709__delegate;
                            return G__8709;
                          }();
                        }(args_8692__$1, format_in__6804__auto__, cf__6805__auto__, vec__8686_8702, ns_8703, kw_8704, lis_8705, _STAR_current_level_STAR_8684_8700, _STAR_current_length_STAR_8685_8701, vec__8683_8697, start_8698__$1, end_8699__$1, arg_8696, _STAR_current_level_STAR_8681_8687, _STAR_current_length_STAR_8682_8688, vec__8679, start, end, vec__8680, keyw, args);
                      })().call(null, lis_8705);
                    } else {
                      cljs.pprint.write_out.call(null, lis_8705);
                    }
                  } else {
                    cljs.core.apply.call(null, function() {
                      var format_in__6804__auto__ = "~w ~:i~@{~w~^ ~:_~}";
                      var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
                      return function(args_8692__$1, format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8684_8700, _STAR_current_length_STAR_8685_8701, vec__8683_8697, start_8698__$1, end_8699__$1, arg_8696, _STAR_current_level_STAR_8681_8687, _STAR_current_length_STAR_8682_8688, vec__8679, start, end, vec__8680, keyw, args) {
                        return function() {
                          var G__8712__delegate = function(args__6806__auto__) {
                            var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
                            return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
                          };
                          var G__8712 = function(var_args) {
                            var args__6806__auto__ = null;
                            if (arguments.length > 0) {
                              var G__8713__i = 0, G__8713__a = new Array(arguments.length - 0);
                              while (G__8713__i < G__8713__a.length) {
                                G__8713__a[G__8713__i] = arguments[G__8713__i + 0];
                                ++G__8713__i;
                              }
                              args__6806__auto__ = new cljs.core.IndexedSeq(G__8713__a, 0);
                            }
                            return G__8712__delegate.call(this, args__6806__auto__);
                          };
                          G__8712.cljs$lang$maxFixedArity = 0;
                          G__8712.cljs$lang$applyTo = function(arglist__8714) {
                            var args__6806__auto__ = cljs.core.seq(arglist__8714);
                            return G__8712__delegate(args__6806__auto__);
                          };
                          G__8712.cljs$core$IFn$_invoke$arity$variadic = G__8712__delegate;
                          return G__8712;
                        }();
                      }(args_8692__$1, format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8684_8700, _STAR_current_length_STAR_8685_8701, vec__8683_8697, start_8698__$1, end_8699__$1, arg_8696, _STAR_current_level_STAR_8681_8687, _STAR_current_length_STAR_8682_8688, vec__8679, start, end, vec__8680, keyw, args);
                    }(), arg_8696);
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_8685_8701;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_8684_8700;
                }
              }
              if (cljs.core.next.call(null, args_8692__$1)) {
                (function() {
                  var format_in__6804__auto__ = "~_";
                  var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
                  return function(args_8692__$1, format_in__6804__auto__, cf__6805__auto__, vec__8683_8697, start_8698__$1, end_8699__$1, arg_8696, _STAR_current_level_STAR_8681_8687, _STAR_current_length_STAR_8682_8688, vec__8679, start, end, vec__8680, keyw, args) {
                    return function() {
                      var G__8715__delegate = function(args__6806__auto__) {
                        var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
                        return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
                      };
                      var G__8715 = function(var_args) {
                        var args__6806__auto__ = null;
                        if (arguments.length > 0) {
                          var G__8716__i = 0, G__8716__a = new Array(arguments.length - 0);
                          while (G__8716__i < G__8716__a.length) {
                            G__8716__a[G__8716__i] = arguments[G__8716__i + 0];
                            ++G__8716__i;
                          }
                          args__6806__auto__ = new cljs.core.IndexedSeq(G__8716__a, 0);
                        }
                        return G__8715__delegate.call(this, args__6806__auto__);
                      };
                      G__8715.cljs$lang$maxFixedArity = 0;
                      G__8715.cljs$lang$applyTo = function(arglist__8717) {
                        var args__6806__auto__ = cljs.core.seq(arglist__8717);
                        return G__8715__delegate(args__6806__auto__);
                      };
                      G__8715.cljs$core$IFn$_invoke$arity$variadic = G__8715__delegate;
                      return G__8715;
                    }();
                  }(args_8692__$1, format_in__6804__auto__, cf__6805__auto__, vec__8683_8697, start_8698__$1, end_8699__$1, arg_8696, _STAR_current_level_STAR_8681_8687, _STAR_current_length_STAR_8682_8688, vec__8679, start, end, vec__8680, keyw, args);
                })().call(null);
              } else {
              }
            } else {
              cljs.pprint.write_out.call(null, arg_8696);
              if (cljs.core.next.call(null, args_8692__$1)) {
                (function() {
                  var format_in__6804__auto__ = "~:_";
                  var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
                  return function(args_8692__$1, format_in__6804__auto__, cf__6805__auto__, arg_8696, _STAR_current_level_STAR_8681_8687, _STAR_current_length_STAR_8682_8688, vec__8679, start, end, vec__8680, keyw, args) {
                    return function() {
                      var G__8718__delegate = function(args__6806__auto__) {
                        var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
                        return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
                      };
                      var G__8718 = function(var_args) {
                        var args__6806__auto__ = null;
                        if (arguments.length > 0) {
                          var G__8719__i = 0, G__8719__a = new Array(arguments.length - 0);
                          while (G__8719__i < G__8719__a.length) {
                            G__8719__a[G__8719__i] = arguments[G__8719__i + 0];
                            ++G__8719__i;
                          }
                          args__6806__auto__ = new cljs.core.IndexedSeq(G__8719__a, 0);
                        }
                        return G__8718__delegate.call(this, args__6806__auto__);
                      };
                      G__8718.cljs$lang$maxFixedArity = 0;
                      G__8718.cljs$lang$applyTo = function(arglist__8720) {
                        var args__6806__auto__ = cljs.core.seq(arglist__8720);
                        return G__8718__delegate(args__6806__auto__);
                      };
                      G__8718.cljs$core$IFn$_invoke$arity$variadic = G__8718__delegate;
                      return G__8718;
                    }();
                  }(args_8692__$1, format_in__6804__auto__, cf__6805__auto__, arg_8696, _STAR_current_level_STAR_8681_8687, _STAR_current_length_STAR_8682_8688, vec__8679, start, end, vec__8680, keyw, args);
                })().call(null);
              } else {
              }
            }
            var G__8721 = cljs.core.next.call(null, args_8692__$1);
            args_8692__$1 = G__8721;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_8682_8688;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_8681_8687;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, reference);
  }
};
cljs.pprint.pprint_ns = function cljs$pprint$pprint_ns(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__8727 = alis;
    var ns_sym = cljs.core.nth.call(null, vec__8727, 0, null);
    var ns_name = cljs.core.nth.call(null, vec__8727, 1, null);
    var stuff = cljs.core.nthnext.call(null, vec__8727, 2);
    var vec__8728 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__8728, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__8728, 1, null);
    var vec__8729 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__8729, 0, null);
    var references = cljs.core.nth.call(null, vec__8729, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_8730_8732 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_8731_8733 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__6804__auto__ = "~w ~1I~@_~w";
          var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
          return function(format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8730_8732, _STAR_current_length_STAR_8731_8733, vec__8727, ns_sym, ns_name, stuff, vec__8728, doc_str, stuff__$1, vec__8729, attr_map, references) {
            return function() {
              var G__8734__delegate = function(args__6806__auto__) {
                var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
                return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
              };
              var G__8734 = function(var_args) {
                var args__6806__auto__ = null;
                if (arguments.length > 0) {
                  var G__8735__i = 0, G__8735__a = new Array(arguments.length - 0);
                  while (G__8735__i < G__8735__a.length) {
                    G__8735__a[G__8735__i] = arguments[G__8735__i + 0];
                    ++G__8735__i;
                  }
                  args__6806__auto__ = new cljs.core.IndexedSeq(G__8735__a, 0);
                }
                return G__8734__delegate.call(this, args__6806__auto__);
              };
              G__8734.cljs$lang$maxFixedArity = 0;
              G__8734.cljs$lang$applyTo = function(arglist__8736) {
                var args__6806__auto__ = cljs.core.seq(arglist__8736);
                return G__8734__delegate(args__6806__auto__);
              };
              G__8734.cljs$core$IFn$_invoke$arity$variadic = G__8734__delegate;
              return G__8734;
            }();
          }(format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8730_8732, _STAR_current_length_STAR_8731_8733, vec__8727, ns_sym, ns_name, stuff, vec__8728, doc_str, stuff__$1, vec__8729, attr_map, references);
        })().call(null, ns_sym, ns_name);
        if (cljs.core.truth_(function() {
          var or__4526__auto__ = doc_str;
          if (cljs.core.truth_(or__4526__auto__)) {
            return or__4526__auto__;
          } else {
            var or__4526__auto____$1 = attr_map;
            if (cljs.core.truth_(or__4526__auto____$1)) {
              return or__4526__auto____$1;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }
        }())) {
          (function() {
            var format_in__6804__auto__ = "~@:_";
            var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
            return function(format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8730_8732, _STAR_current_length_STAR_8731_8733, vec__8727, ns_sym, ns_name, stuff, vec__8728, doc_str, stuff__$1, vec__8729, attr_map, references) {
              return function() {
                var G__8737__delegate = function(args__6806__auto__) {
                  var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
                  return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
                };
                var G__8737 = function(var_args) {
                  var args__6806__auto__ = null;
                  if (arguments.length > 0) {
                    var G__8738__i = 0, G__8738__a = new Array(arguments.length - 0);
                    while (G__8738__i < G__8738__a.length) {
                      G__8738__a[G__8738__i] = arguments[G__8738__i + 0];
                      ++G__8738__i;
                    }
                    args__6806__auto__ = new cljs.core.IndexedSeq(G__8738__a, 0);
                  }
                  return G__8737__delegate.call(this, args__6806__auto__);
                };
                G__8737.cljs$lang$maxFixedArity = 0;
                G__8737.cljs$lang$applyTo = function(arglist__8739) {
                  var args__6806__auto__ = cljs.core.seq(arglist__8739);
                  return G__8737__delegate(args__6806__auto__);
                };
                G__8737.cljs$core$IFn$_invoke$arity$variadic = G__8737__delegate;
                return G__8737;
              }();
            }(format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8730_8732, _STAR_current_length_STAR_8731_8733, vec__8727, ns_sym, ns_name, stuff, vec__8728, doc_str, stuff__$1, vec__8729, attr_map, references);
          })().call(null);
        } else {
        }
        if (cljs.core.truth_(doc_str)) {
          cljs.pprint.cl_format.call(null, true, '"~a"~:[~;~:@_~]', doc_str, function() {
            var or__4526__auto__ = attr_map;
            if (cljs.core.truth_(or__4526__auto__)) {
              return or__4526__auto__;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }());
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__6804__auto__ = "~w~:[~;~:@_~]";
            var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
            return function(format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8730_8732, _STAR_current_length_STAR_8731_8733, vec__8727, ns_sym, ns_name, stuff, vec__8728, doc_str, stuff__$1, vec__8729, attr_map, references) {
              return function() {
                var G__8740__delegate = function(args__6806__auto__) {
                  var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
                  return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
                };
                var G__8740 = function(var_args) {
                  var args__6806__auto__ = null;
                  if (arguments.length > 0) {
                    var G__8741__i = 0, G__8741__a = new Array(arguments.length - 0);
                    while (G__8741__i < G__8741__a.length) {
                      G__8741__a[G__8741__i] = arguments[G__8741__i + 0];
                      ++G__8741__i;
                    }
                    args__6806__auto__ = new cljs.core.IndexedSeq(G__8741__a, 0);
                  }
                  return G__8740__delegate.call(this, args__6806__auto__);
                };
                G__8740.cljs$lang$maxFixedArity = 0;
                G__8740.cljs$lang$applyTo = function(arglist__8742) {
                  var args__6806__auto__ = cljs.core.seq(arglist__8742);
                  return G__8740__delegate(args__6806__auto__);
                };
                G__8740.cljs$core$IFn$_invoke$arity$variadic = G__8740__delegate;
                return G__8740;
              }();
            }(format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8730_8732, _STAR_current_length_STAR_8731_8733, vec__8727, ns_sym, ns_name, stuff, vec__8728, doc_str, stuff__$1, vec__8729, attr_map, references);
          })().call(null, attr_map, cljs.core.seq.call(null, references));
        } else {
        }
        var references_8743__$1 = references;
        while (true) {
          cljs.pprint.pprint_ns_reference.call(null, cljs.core.first.call(null, references_8743__$1));
          var temp__4425__auto___8744 = cljs.core.next.call(null, references_8743__$1);
          if (temp__4425__auto___8744) {
            var references_8745__$2 = temp__4425__auto___8744;
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            var G__8746 = references_8745__$2;
            references_8743__$1 = G__8746;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_8731_8733;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_8730_8732;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, alis);
  }
};
cljs.pprint.pprint_hold_first = function() {
  var format_in__6804__auto__ = "~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e";
  var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
  return function(format_in__6804__auto__, cf__6805__auto__) {
    return function() {
      var G__8747__delegate = function(args__6806__auto__) {
        var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
        return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
      };
      var G__8747 = function(var_args) {
        var args__6806__auto__ = null;
        if (arguments.length > 0) {
          var G__8748__i = 0, G__8748__a = new Array(arguments.length - 0);
          while (G__8748__i < G__8748__a.length) {
            G__8748__a[G__8748__i] = arguments[G__8748__i + 0];
            ++G__8748__i;
          }
          args__6806__auto__ = new cljs.core.IndexedSeq(G__8748__a, 0);
        }
        return G__8747__delegate.call(this, args__6806__auto__);
      };
      G__8747.cljs$lang$maxFixedArity = 0;
      G__8747.cljs$lang$applyTo = function(arglist__8749) {
        var args__6806__auto__ = cljs.core.seq(arglist__8749);
        return G__8747__delegate(args__6806__auto__);
      };
      G__8747.cljs$core$IFn$_invoke$arity$variadic = G__8747__delegate;
      return G__8747;
    }();
  }(format_in__6804__auto__, cf__6805__auto__);
}();
cljs.pprint.single_defn = function cljs$pprint$single_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    if (cljs.core.truth_(has_doc_str_QMARK_)) {
      (function() {
        var format_in__6804__auto__ = " ~_";
        var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
        return function(format_in__6804__auto__, cf__6805__auto__) {
          return function() {
            var G__8750__delegate = function(args__6806__auto__) {
              var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
              return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
            };
            var G__8750 = function(var_args) {
              var args__6806__auto__ = null;
              if (arguments.length > 0) {
                var G__8751__i = 0, G__8751__a = new Array(arguments.length - 0);
                while (G__8751__i < G__8751__a.length) {
                  G__8751__a[G__8751__i] = arguments[G__8751__i + 0];
                  ++G__8751__i;
                }
                args__6806__auto__ = new cljs.core.IndexedSeq(G__8751__a, 0);
              }
              return G__8750__delegate.call(this, args__6806__auto__);
            };
            G__8750.cljs$lang$maxFixedArity = 0;
            G__8750.cljs$lang$applyTo = function(arglist__8752) {
              var args__6806__auto__ = cljs.core.seq(arglist__8752);
              return G__8750__delegate(args__6806__auto__);
            };
            G__8750.cljs$core$IFn$_invoke$arity$variadic = G__8750__delegate;
            return G__8750;
          }();
        }(format_in__6804__auto__, cf__6805__auto__);
      })().call(null);
    } else {
      (function() {
        var format_in__6804__auto__ = " ~@_";
        var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
        return function(format_in__6804__auto__, cf__6805__auto__) {
          return function() {
            var G__8753__delegate = function(args__6806__auto__) {
              var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
              return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
            };
            var G__8753 = function(var_args) {
              var args__6806__auto__ = null;
              if (arguments.length > 0) {
                var G__8754__i = 0, G__8754__a = new Array(arguments.length - 0);
                while (G__8754__i < G__8754__a.length) {
                  G__8754__a[G__8754__i] = arguments[G__8754__i + 0];
                  ++G__8754__i;
                }
                args__6806__auto__ = new cljs.core.IndexedSeq(G__8754__a, 0);
              }
              return G__8753__delegate.call(this, args__6806__auto__);
            };
            G__8753.cljs$lang$maxFixedArity = 0;
            G__8753.cljs$lang$applyTo = function(arglist__8755) {
              var args__6806__auto__ = cljs.core.seq(arglist__8755);
              return G__8753__delegate(args__6806__auto__);
            };
            G__8753.cljs$core$IFn$_invoke$arity$variadic = G__8753__delegate;
            return G__8753;
          }();
        }(format_in__6804__auto__, cf__6805__auto__);
      })().call(null);
    }
    return function() {
      var format_in__6804__auto__ = "~{~w~^ ~_~}";
      var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
      return function(format_in__6804__auto__, cf__6805__auto__) {
        return function() {
          var G__8756__delegate = function(args__6806__auto__) {
            var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
            return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
          };
          var G__8756 = function(var_args) {
            var args__6806__auto__ = null;
            if (arguments.length > 0) {
              var G__8757__i = 0, G__8757__a = new Array(arguments.length - 0);
              while (G__8757__i < G__8757__a.length) {
                G__8757__a[G__8757__i] = arguments[G__8757__i + 0];
                ++G__8757__i;
              }
              args__6806__auto__ = new cljs.core.IndexedSeq(G__8757__a, 0);
            }
            return G__8756__delegate.call(this, args__6806__auto__);
          };
          G__8756.cljs$lang$maxFixedArity = 0;
          G__8756.cljs$lang$applyTo = function(arglist__8758) {
            var args__6806__auto__ = cljs.core.seq(arglist__8758);
            return G__8756__delegate(args__6806__auto__);
          };
          G__8756.cljs$core$IFn$_invoke$arity$variadic = G__8756__delegate;
          return G__8756;
        }();
      }(format_in__6804__auto__, cf__6805__auto__);
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.multi_defn = function cljs$pprint$multi_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    return function() {
      var format_in__6804__auto__ = " ~_~{~w~^ ~_~}";
      var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
      return function(format_in__6804__auto__, cf__6805__auto__) {
        return function() {
          var G__8759__delegate = function(args__6806__auto__) {
            var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
            return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
          };
          var G__8759 = function(var_args) {
            var args__6806__auto__ = null;
            if (arguments.length > 0) {
              var G__8760__i = 0, G__8760__a = new Array(arguments.length - 0);
              while (G__8760__i < G__8760__a.length) {
                G__8760__a[G__8760__i] = arguments[G__8760__i + 0];
                ++G__8760__i;
              }
              args__6806__auto__ = new cljs.core.IndexedSeq(G__8760__a, 0);
            }
            return G__8759__delegate.call(this, args__6806__auto__);
          };
          G__8759.cljs$lang$maxFixedArity = 0;
          G__8759.cljs$lang$applyTo = function(arglist__8761) {
            var args__6806__auto__ = cljs.core.seq(arglist__8761);
            return G__8759__delegate(args__6806__auto__);
          };
          G__8759.cljs$core$IFn$_invoke$arity$variadic = G__8759__delegate;
          return G__8759;
        }();
      }(format_in__6804__auto__, cf__6805__auto__);
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_defn = function cljs$pprint$pprint_defn(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__8767 = alis;
    var defn_sym = cljs.core.nth.call(null, vec__8767, 0, null);
    var defn_name = cljs.core.nth.call(null, vec__8767, 1, null);
    var stuff = cljs.core.nthnext.call(null, vec__8767, 2);
    var vec__8768 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__8768, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__8768, 1, null);
    var vec__8769 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__8769, 0, null);
    var stuff__$2 = cljs.core.nth.call(null, vec__8769, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_8770_8772 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_8771_8773 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__6804__auto__ = "~w ~1I~@_~w";
          var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
          return function(format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8770_8772, _STAR_current_length_STAR_8771_8773, vec__8767, defn_sym, defn_name, stuff, vec__8768, doc_str, stuff__$1, vec__8769, attr_map, stuff__$2) {
            return function() {
              var G__8774__delegate = function(args__6806__auto__) {
                var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
                return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
              };
              var G__8774 = function(var_args) {
                var args__6806__auto__ = null;
                if (arguments.length > 0) {
                  var G__8775__i = 0, G__8775__a = new Array(arguments.length - 0);
                  while (G__8775__i < G__8775__a.length) {
                    G__8775__a[G__8775__i] = arguments[G__8775__i + 0];
                    ++G__8775__i;
                  }
                  args__6806__auto__ = new cljs.core.IndexedSeq(G__8775__a, 0);
                }
                return G__8774__delegate.call(this, args__6806__auto__);
              };
              G__8774.cljs$lang$maxFixedArity = 0;
              G__8774.cljs$lang$applyTo = function(arglist__8776) {
                var args__6806__auto__ = cljs.core.seq(arglist__8776);
                return G__8774__delegate(args__6806__auto__);
              };
              G__8774.cljs$core$IFn$_invoke$arity$variadic = G__8774__delegate;
              return G__8774;
            }();
          }(format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8770_8772, _STAR_current_length_STAR_8771_8773, vec__8767, defn_sym, defn_name, stuff, vec__8768, doc_str, stuff__$1, vec__8769, attr_map, stuff__$2);
        })().call(null, defn_sym, defn_name);
        if (cljs.core.truth_(doc_str)) {
          (function() {
            var format_in__6804__auto__ = " ~_~w";
            var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
            return function(format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8770_8772, _STAR_current_length_STAR_8771_8773, vec__8767, defn_sym, defn_name, stuff, vec__8768, doc_str, stuff__$1, vec__8769, attr_map, stuff__$2) {
              return function() {
                var G__8777__delegate = function(args__6806__auto__) {
                  var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
                  return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
                };
                var G__8777 = function(var_args) {
                  var args__6806__auto__ = null;
                  if (arguments.length > 0) {
                    var G__8778__i = 0, G__8778__a = new Array(arguments.length - 0);
                    while (G__8778__i < G__8778__a.length) {
                      G__8778__a[G__8778__i] = arguments[G__8778__i + 0];
                      ++G__8778__i;
                    }
                    args__6806__auto__ = new cljs.core.IndexedSeq(G__8778__a, 0);
                  }
                  return G__8777__delegate.call(this, args__6806__auto__);
                };
                G__8777.cljs$lang$maxFixedArity = 0;
                G__8777.cljs$lang$applyTo = function(arglist__8779) {
                  var args__6806__auto__ = cljs.core.seq(arglist__8779);
                  return G__8777__delegate(args__6806__auto__);
                };
                G__8777.cljs$core$IFn$_invoke$arity$variadic = G__8777__delegate;
                return G__8777;
              }();
            }(format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8770_8772, _STAR_current_length_STAR_8771_8773, vec__8767, defn_sym, defn_name, stuff, vec__8768, doc_str, stuff__$1, vec__8769, attr_map, stuff__$2);
          })().call(null, doc_str);
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__6804__auto__ = " ~_~w";
            var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
            return function(format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8770_8772, _STAR_current_length_STAR_8771_8773, vec__8767, defn_sym, defn_name, stuff, vec__8768, doc_str, stuff__$1, vec__8769, attr_map, stuff__$2) {
              return function() {
                var G__8780__delegate = function(args__6806__auto__) {
                  var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
                  return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
                };
                var G__8780 = function(var_args) {
                  var args__6806__auto__ = null;
                  if (arguments.length > 0) {
                    var G__8781__i = 0, G__8781__a = new Array(arguments.length - 0);
                    while (G__8781__i < G__8781__a.length) {
                      G__8781__a[G__8781__i] = arguments[G__8781__i + 0];
                      ++G__8781__i;
                    }
                    args__6806__auto__ = new cljs.core.IndexedSeq(G__8781__a, 0);
                  }
                  return G__8780__delegate.call(this, args__6806__auto__);
                };
                G__8780.cljs$lang$maxFixedArity = 0;
                G__8780.cljs$lang$applyTo = function(arglist__8782) {
                  var args__6806__auto__ = cljs.core.seq(arglist__8782);
                  return G__8780__delegate(args__6806__auto__);
                };
                G__8780.cljs$core$IFn$_invoke$arity$variadic = G__8780__delegate;
                return G__8780;
              }();
            }(format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8770_8772, _STAR_current_length_STAR_8771_8773, vec__8767, defn_sym, defn_name, stuff, vec__8768, doc_str, stuff__$1, vec__8769, attr_map, stuff__$2);
          })().call(null, attr_map);
        } else {
        }
        if (cljs.core.vector_QMARK_.call(null, cljs.core.first.call(null, stuff__$2))) {
          cljs.pprint.single_defn.call(null, stuff__$2, function() {
            var or__4526__auto__ = doc_str;
            if (cljs.core.truth_(or__4526__auto__)) {
              return or__4526__auto__;
            } else {
              return attr_map;
            }
          }());
        } else {
          cljs.pprint.multi_defn.call(null, stuff__$2, function() {
            var or__4526__auto__ = doc_str;
            if (cljs.core.truth_(or__4526__auto__)) {
              return or__4526__auto__;
            } else {
              return attr_map;
            }
          }());
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_8771_8773;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_8770_8772;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_binding_form = function cljs$pprint$pprint_binding_form(binding_vec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_8788_8793 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_8789_8794 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count8790_8795 = 0;
      var binding_8796 = binding_vec;
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count8790_8795 < cljs.core._STAR_print_length_STAR_) {
          if (cljs.core.seq.call(null, binding_8796)) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR_8791_8797 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR_8792_8798 = cljs.pprint._STAR_current_length_STAR_;
              cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
              cljs.pprint._STAR_current_length_STAR_ = 0;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.first.call(null, binding_8796));
                if (cljs.core.next.call(null, binding_8796)) {
                  cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                  cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                  cljs.pprint.write_out.call(null, cljs.core.second.call(null, binding_8796));
                } else {
                }
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_8792_8798;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_8791_8797;
              }
            }
            if (cljs.core.next.call(null, cljs.core.rest.call(null, binding_8796))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__8799 = length_count8790_8795 + 1;
              var G__8800 = cljs.core.next.call(null, cljs.core.rest.call(null, binding_8796));
              length_count8790_8795 = G__8799;
              binding_8796 = G__8800;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_8789_8794;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_8788_8793;
    }
  }
  return null;
};
cljs.pprint.pprint_let = function cljs$pprint$pprint_let(alis) {
  var base_sym = cljs.core.first.call(null, alis);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_8803_8805 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_8804_8806 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      if (cljs.core.next.call(null, alis) && cljs.core.vector_QMARK_.call(null, cljs.core.second.call(null, alis))) {
        (function() {
          var format_in__6804__auto__ = "~w ~1I~@_";
          var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
          return function(format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8803_8805, _STAR_current_length_STAR_8804_8806, base_sym) {
            return function() {
              var G__8807__delegate = function(args__6806__auto__) {
                var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
                return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
              };
              var G__8807 = function(var_args) {
                var args__6806__auto__ = null;
                if (arguments.length > 0) {
                  var G__8808__i = 0, G__8808__a = new Array(arguments.length - 0);
                  while (G__8808__i < G__8808__a.length) {
                    G__8808__a[G__8808__i] = arguments[G__8808__i + 0];
                    ++G__8808__i;
                  }
                  args__6806__auto__ = new cljs.core.IndexedSeq(G__8808__a, 0);
                }
                return G__8807__delegate.call(this, args__6806__auto__);
              };
              G__8807.cljs$lang$maxFixedArity = 0;
              G__8807.cljs$lang$applyTo = function(arglist__8809) {
                var args__6806__auto__ = cljs.core.seq(arglist__8809);
                return G__8807__delegate(args__6806__auto__);
              };
              G__8807.cljs$core$IFn$_invoke$arity$variadic = G__8807__delegate;
              return G__8807;
            }();
          }(format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8803_8805, _STAR_current_length_STAR_8804_8806, base_sym);
        })().call(null, base_sym);
        cljs.pprint.pprint_binding_form.call(null, cljs.core.second.call(null, alis));
        (function() {
          var format_in__6804__auto__ = " ~_~{~w~^ ~_~}";
          var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
          return function(format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8803_8805, _STAR_current_length_STAR_8804_8806, base_sym) {
            return function() {
              var G__8810__delegate = function(args__6806__auto__) {
                var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
                return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
              };
              var G__8810 = function(var_args) {
                var args__6806__auto__ = null;
                if (arguments.length > 0) {
                  var G__8811__i = 0, G__8811__a = new Array(arguments.length - 0);
                  while (G__8811__i < G__8811__a.length) {
                    G__8811__a[G__8811__i] = arguments[G__8811__i + 0];
                    ++G__8811__i;
                  }
                  args__6806__auto__ = new cljs.core.IndexedSeq(G__8811__a, 0);
                }
                return G__8810__delegate.call(this, args__6806__auto__);
              };
              G__8810.cljs$lang$maxFixedArity = 0;
              G__8810.cljs$lang$applyTo = function(arglist__8812) {
                var args__6806__auto__ = cljs.core.seq(arglist__8812);
                return G__8810__delegate(args__6806__auto__);
              };
              G__8810.cljs$core$IFn$_invoke$arity$variadic = G__8810__delegate;
              return G__8810;
            }();
          }(format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8803_8805, _STAR_current_length_STAR_8804_8806, base_sym);
        })().call(null, cljs.core.next.call(null, cljs.core.rest.call(null, alis)));
      } else {
        cljs.pprint.pprint_simple_code_list.call(null, alis);
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_8804_8806;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_8803_8805;
    }
  }
  return null;
};
cljs.pprint.pprint_if = function() {
  var format_in__6804__auto__ = "~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e";
  var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
  return function(format_in__6804__auto__, cf__6805__auto__) {
    return function() {
      var G__8813__delegate = function(args__6806__auto__) {
        var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
        return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
      };
      var G__8813 = function(var_args) {
        var args__6806__auto__ = null;
        if (arguments.length > 0) {
          var G__8814__i = 0, G__8814__a = new Array(arguments.length - 0);
          while (G__8814__i < G__8814__a.length) {
            G__8814__a[G__8814__i] = arguments[G__8814__i + 0];
            ++G__8814__i;
          }
          args__6806__auto__ = new cljs.core.IndexedSeq(G__8814__a, 0);
        }
        return G__8813__delegate.call(this, args__6806__auto__);
      };
      G__8813.cljs$lang$maxFixedArity = 0;
      G__8813.cljs$lang$applyTo = function(arglist__8815) {
        var args__6806__auto__ = cljs.core.seq(arglist__8815);
        return G__8813__delegate(args__6806__auto__);
      };
      G__8813.cljs$core$IFn$_invoke$arity$variadic = G__8813__delegate;
      return G__8813;
    }();
  }(format_in__6804__auto__, cf__6805__auto__);
}();
cljs.pprint.pprint_cond = function cljs$pprint$pprint_cond(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_8821_8826 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_8822_8827 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis));
      if (cljs.core.next.call(null, alis)) {
        cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
        cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
        var length_count8823_8828 = 0;
        var alis_8829__$1 = cljs.core.next.call(null, alis);
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count8823_8828 < cljs.core._STAR_print_length_STAR_) {
            if (alis_8829__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_8824_8830 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_8825_8831 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_8829__$1));
                  if (cljs.core.next.call(null, alis_8829__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_8829__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_8825_8831;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_8824_8830;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_8829__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__8832 = length_count8823_8828 + 1;
                var G__8833 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_8829__$1));
                length_count8823_8828 = G__8832;
                alis_8829__$1 = G__8833;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
      } else {
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_8822_8827;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_8821_8826;
    }
  }
  return null;
};
cljs.pprint.pprint_condp = function cljs$pprint$pprint_condp(alis) {
  if (cljs.core.count.call(null, alis) > 3) {
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR_8839_8844 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR_8840_8845 = cljs.pprint._STAR_current_length_STAR_;
      cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
      cljs.pprint._STAR_current_length_STAR_ = 0;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
        cljs.core.apply.call(null, function() {
          var format_in__6804__auto__ = "~w ~@_~w ~@_~w ~_";
          var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
          return function(format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8839_8844, _STAR_current_length_STAR_8840_8845) {
            return function() {
              var G__8846__delegate = function(args__6806__auto__) {
                var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
                return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
              };
              var G__8846 = function(var_args) {
                var args__6806__auto__ = null;
                if (arguments.length > 0) {
                  var G__8847__i = 0, G__8847__a = new Array(arguments.length - 0);
                  while (G__8847__i < G__8847__a.length) {
                    G__8847__a[G__8847__i] = arguments[G__8847__i + 0];
                    ++G__8847__i;
                  }
                  args__6806__auto__ = new cljs.core.IndexedSeq(G__8847__a, 0);
                }
                return G__8846__delegate.call(this, args__6806__auto__);
              };
              G__8846.cljs$lang$maxFixedArity = 0;
              G__8846.cljs$lang$applyTo = function(arglist__8848) {
                var args__6806__auto__ = cljs.core.seq(arglist__8848);
                return G__8846__delegate(args__6806__auto__);
              };
              G__8846.cljs$core$IFn$_invoke$arity$variadic = G__8846__delegate;
              return G__8846;
            }();
          }(format_in__6804__auto__, cf__6805__auto__, _STAR_current_level_STAR_8839_8844, _STAR_current_length_STAR_8840_8845);
        }(), alis);
        var length_count8841_8849 = 0;
        var alis_8850__$1 = cljs.core.seq.call(null, cljs.core.drop.call(null, 3, alis));
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count8841_8849 < cljs.core._STAR_print_length_STAR_) {
            if (alis_8850__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR_8842_8851 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR_8843_8852 = cljs.pprint._STAR_current_length_STAR_;
                cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
                cljs.pprint._STAR_current_length_STAR_ = 0;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_8850__$1));
                  if (cljs.core.next.call(null, alis_8850__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_8850__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_8843_8852;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_8842_8851;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_8850__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__8853 = length_count8841_8849 + 1;
                var G__8854 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_8850__$1));
                length_count8841_8849 = G__8853;
                alis_8850__$1 = G__8854;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_8840_8845;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_8839_8844;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint._STAR_symbol_map_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.pprint.pprint_anon_func = function cljs$pprint$pprint_anon_func(alis) {
  var args = cljs.core.second.call(null, alis);
  var nlis = cljs.core.first.call(null, cljs.core.rest.call(null, cljs.core.rest.call(null, alis)));
  if (cljs.core.vector_QMARK_.call(null, args)) {
    var _STAR_symbol_map_STAR_8858 = cljs.pprint._STAR_symbol_map_STAR_;
    cljs.pprint._STAR_symbol_map_STAR_ = cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, args)) ? new cljs.core.PersistentArrayMap.fromArray([cljs.core.first.call(null, args), "%"], true, false) : cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(_STAR_symbol_map_STAR_8858, args, nlis) {
      return function(p1__8855_SHARP_, p2__8856_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__8855_SHARP_, [cljs.core.str("%"), cljs.core.str(p2__8856_SHARP_)].join("")], null);
      };
    }(_STAR_symbol_map_STAR_8858, args, nlis), args, cljs.core.range.call(null, 1, cljs.core.count.call(null, args) + 1)));
    try {
      return function() {
        var format_in__6804__auto__ = "~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e";
        var cf__6805__auto__ = typeof format_in__6804__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__6804__auto__) : format_in__6804__auto__;
        return function(format_in__6804__auto__, cf__6805__auto__, _STAR_symbol_map_STAR_8858, args, nlis) {
          return function() {
            var G__8859__delegate = function(args__6806__auto__) {
              var navigator__6807__auto__ = cljs.pprint.init_navigator.call(null, args__6806__auto__);
              return cljs.pprint.execute_format.call(null, cf__6805__auto__, navigator__6807__auto__);
            };
            var G__8859 = function(var_args) {
              var args__6806__auto__ = null;
              if (arguments.length > 0) {
                var G__8860__i = 0, G__8860__a = new Array(arguments.length - 0);
                while (G__8860__i < G__8860__a.length) {
                  G__8860__a[G__8860__i] = arguments[G__8860__i + 0];
                  ++G__8860__i;
                }
                args__6806__auto__ = new cljs.core.IndexedSeq(G__8860__a, 0);
              }
              return G__8859__delegate.call(this, args__6806__auto__);
            };
            G__8859.cljs$lang$maxFixedArity = 0;
            G__8859.cljs$lang$applyTo = function(arglist__8861) {
              var args__6806__auto__ = cljs.core.seq(arglist__8861);
              return G__8859__delegate(args__6806__auto__);
            };
            G__8859.cljs$core$IFn$_invoke$arity$variadic = G__8859__delegate;
            return G__8859;
          }();
        }(format_in__6804__auto__, cf__6805__auto__, _STAR_symbol_map_STAR_8858, args, nlis);
      }().call(null, nlis);
    } finally {
      cljs.pprint._STAR_symbol_map_STAR_ = _STAR_symbol_map_STAR_8858;
    }
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_simple_code_list = function cljs$pprint$pprint_simple_code_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR_8865_8868 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR_8866_8869 = cljs.pprint._STAR_current_length_STAR_;
    cljs.pprint._STAR_current_level_STAR_ = cljs.pprint._STAR_current_level_STAR_ + 1;
    cljs.pprint._STAR_current_length_STAR_ = 0;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      var length_count8867_8870 = 0;
      var alis_8871__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count8867_8870 < cljs.core._STAR_print_length_STAR_) {
          if (alis_8871__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_8871__$1));
            if (cljs.core.next.call(null, alis_8871__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__8872 = length_count8867_8870 + 1;
              var G__8873 = cljs.core.next.call(null, alis_8871__$1);
              length_count8867_8870 = G__8872;
              alis_8871__$1 = G__8873;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR_8866_8869;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR_8865_8868;
    }
  }
  return null;
};
cljs.pprint.two_forms = function cljs$pprint$two_forms(amap) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.mapcat.call(null, cljs.core.identity, function() {
    var iter__5279__auto__ = function cljs$pprint$two_forms_$_iter__8878(s__8879) {
      return new cljs.core.LazySeq(null, function() {
        var s__8879__$1 = s__8879;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__8879__$1);
          if (temp__4425__auto__) {
            var s__8879__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__8879__$2)) {
              var c__5277__auto__ = cljs.core.chunk_first.call(null, s__8879__$2);
              var size__5278__auto__ = cljs.core.count.call(null, c__5277__auto__);
              var b__8881 = cljs.core.chunk_buffer.call(null, size__5278__auto__);
              if (function() {
                var i__8880 = 0;
                while (true) {
                  if (i__8880 < size__5278__auto__) {
                    var x = cljs.core._nth.call(null, c__5277__auto__, i__8880);
                    cljs.core.chunk_append.call(null, b__8881, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null));
                    var G__8882 = i__8880 + 1;
                    i__8880 = G__8882;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8881), cljs$pprint$two_forms_$_iter__8878.call(null, cljs.core.chunk_rest.call(null, s__8879__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8881), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__8879__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null), cljs$pprint$two_forms_$_iter__8878.call(null, cljs.core.rest.call(null, s__8879__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__5279__auto__.call(null, amap);
  }()));
};
cljs.pprint.add_core_ns = function cljs$pprint$add_core_ns(amap) {
  var core = "clojure.core";
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(core) {
    return function(p1__8883_SHARP_) {
      var vec__8885 = p1__8883_SHARP_;
      var s = cljs.core.nth.call(null, vec__8885, 0, null);
      var f = cljs.core.nth.call(null, vec__8885, 1, null);
      if (cljs.core.not.call(null, function() {
        var or__4526__auto__ = cljs.core.namespace.call(null, s);
        if (cljs.core.truth_(or__4526__auto__)) {
          return or__4526__auto__;
        } else {
          return cljs.core.special_symbol_QMARK_.call(null, s);
        }
      }())) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, core, cljs.core.name.call(null, s)), f], null);
      } else {
        return p1__8883_SHARP_;
      }
    };
  }(core), amap));
};
cljs.pprint._STAR_code_table_STAR_ = cljs.pprint.two_forms.call(null, cljs.pprint.add_core_ns.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, ".", ".", 1975675962, null), new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.Symbol(null, "when-first", "when-first", 821699168, null), new cljs.core.Symbol(null, "if", "if", 1181717262, null), new cljs.core.Symbol(null, "condp", "condp", 1054325175, null), new cljs.core.Symbol(null, "..", "..", -300507420, 
null), new cljs.core.Symbol(null, "defmacro", "defmacro", 2054157304, null), new cljs.core.Symbol(null, "defn", "defn", -126010802, null), new cljs.core.Symbol(null, "loop", "loop", 1244978678, null), new cljs.core.Symbol(null, "struct", "struct", 325972931, null), new cljs.core.Symbol(null, "doseq", "doseq", 221164135, null), new cljs.core.Symbol(null, "if-not", "if-not", -265415609, null), new cljs.core.Symbol(null, "when-not", "when-not", -1223136340, null), new cljs.core.Symbol(null, "def", "def", 
597100991, null), new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "with-open", "with-open", 172119667, null), new cljs.core.Symbol(null, "with-local-vars", "with-local-vars", 837642072, null), new cljs.core.Symbol(null, "defonce", "defonce", -1681484013, null), new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "dotimes", "dotimes", -818708397, null), new cljs.core.Symbol(null, 
"cond", "cond", 1606708055, null), new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "defn-", "defn-", 1097765044, null), new cljs.core.Symbol(null, "locking", "locking", 1542862874, null), new cljs.core.Symbol(null, "-\x3e", "-\x3e", -2139605430, null), new cljs.core.Symbol(null, "if-let", "if-let", 1803593690, null), new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), new cljs.core.Symbol(null, 
"struct-map", "struct-map", -1387540878, null)], [cljs.pprint.pprint_hold_first, cljs.pprint.pprint_anon_func, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_condp, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_if, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_if, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, 
cljs.pprint.pprint_let, cljs.pprint.pprint_ns, cljs.pprint.pprint_let, cljs.pprint.pprint_cond, cljs.pprint.pprint_let, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first])));
cljs.pprint.pprint_code_list = function cljs$pprint$pprint_code_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    var temp__4423__auto__ = cljs.pprint._STAR_code_table_STAR_.call(null, cljs.core.first.call(null, alis));
    if (cljs.core.truth_(temp__4423__auto__)) {
      var special_form = temp__4423__auto__;
      return special_form.call(null, alis);
    } else {
      return cljs.pprint.pprint_simple_code_list.call(null, alis);
    }
  } else {
    return null;
  }
};
cljs.pprint.pprint_code_symbol = function cljs$pprint$pprint_code_symbol(sym) {
  var temp__4423__auto__ = sym.call(null, cljs.pprint._STAR_symbol_map_STAR_);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var arg_num = temp__4423__auto__;
    return cljs.pprint.print.call(null, arg_num);
  } else {
    if (cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_)) {
      return cljs.pprint.print.call(null, cljs.core.name.call(null, sym));
    } else {
      return cljs.pprint.pr.call(null, sym);
    }
  }
};
if (typeof cljs.pprint.code_dispatch !== "undefined") {
} else {
  cljs.pprint.code_dispatch = function() {
    var method_table__5420__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5421__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5422__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5423__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5424__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "code-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5424__auto__, method_table__5420__auto__, prefer_table__5421__auto__, method_cache__5422__auto__, cached_hierarchy__5423__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_code_list);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), cljs.pprint.pprint_code_symbol);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "queue", "queue", 1455835879), cljs.pprint.pprint_pqueue);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "deref", "deref", -145586795), cljs.pprint.pprint_ideref);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, null, cljs.pprint.pr);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.add_padding = function cljs$pprint$add_padding(width, s) {
  var padding = function() {
    var x__4838__auto__ = 0;
    var y__4839__auto__ = width - cljs.core.count.call(null, s);
    return x__4838__auto__ > y__4839__auto__ ? x__4838__auto__ : y__4839__auto__;
  }();
  return cljs.core.apply.call(null, cljs.core.str, clojure.string.join.call(null, cljs.core.repeat.call(null, padding, " ")), s);
};
cljs.pprint.print_table = function cljs$pprint$print_table() {
  var args8889 = [];
  var len__5565__auto___8905 = arguments.length;
  var i__5566__auto___8906 = 0;
  while (true) {
    if (i__5566__auto___8906 < len__5565__auto___8905) {
      args8889.push(arguments[i__5566__auto___8906]);
      var G__8907 = i__5566__auto___8906 + 1;
      i__5566__auto___8906 = G__8907;
      continue;
    } else {
    }
    break;
  }
  var G__8891 = args8889.length;
  switch(G__8891) {
    case 2:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args8889.length)].join(""));;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2 = function(ks, rows) {
  var _STAR_print_newline_STAR_8892 = cljs.core._STAR_print_newline_STAR_;
  try {
    if (cljs.core.seq.call(null, rows)) {
      var widths = cljs.core.map.call(null, function(_STAR_print_newline_STAR_8892) {
        return function(k) {
          return cljs.core.apply.call(null, cljs.core.max, cljs.core.count.call(null, [cljs.core.str(k)].join("")), cljs.core.map.call(null, function(_STAR_print_newline_STAR_8892) {
            return function(p1__8886_SHARP_) {
              return cljs.core.count.call(null, [cljs.core.str(cljs.core.get.call(null, p1__8886_SHARP_, k))].join(""));
            };
          }(_STAR_print_newline_STAR_8892), rows));
        };
      }(_STAR_print_newline_STAR_8892), ks);
      var spacers = cljs.core.map.call(null, function(widths, _STAR_print_newline_STAR_8892) {
        return function(p1__8887_SHARP_) {
          return cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, p1__8887_SHARP_, "-"));
        };
      }(widths, _STAR_print_newline_STAR_8892), widths);
      var fmt_row = function(widths, spacers, _STAR_print_newline_STAR_8892) {
        return function(leader, divider, trailer, row) {
          return [cljs.core.str(leader), cljs.core.str(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, divider, function() {
            var iter__5279__auto__ = function(widths, spacers, _STAR_print_newline_STAR_8892) {
              return function cljs$pprint$iter__8893(s__8894) {
                return new cljs.core.LazySeq(null, function(widths, spacers, _STAR_print_newline_STAR_8892) {
                  return function() {
                    var s__8894__$1 = s__8894;
                    while (true) {
                      var temp__4425__auto__ = cljs.core.seq.call(null, s__8894__$1);
                      if (temp__4425__auto__) {
                        var s__8894__$2 = temp__4425__auto__;
                        if (cljs.core.chunked_seq_QMARK_.call(null, s__8894__$2)) {
                          var c__5277__auto__ = cljs.core.chunk_first.call(null, s__8894__$2);
                          var size__5278__auto__ = cljs.core.count.call(null, c__5277__auto__);
                          var b__8896 = cljs.core.chunk_buffer.call(null, size__5278__auto__);
                          if (function() {
                            var i__8895 = 0;
                            while (true) {
                              if (i__8895 < size__5278__auto__) {
                                var vec__8899 = cljs.core._nth.call(null, c__5277__auto__, i__8895);
                                var col = cljs.core.nth.call(null, vec__8899, 0, null);
                                var width = cljs.core.nth.call(null, vec__8899, 1, null);
                                cljs.core.chunk_append.call(null, b__8896, cljs.pprint.add_padding.call(null, width, [cljs.core.str(col)].join("")));
                                var G__8909 = i__8895 + 1;
                                i__8895 = G__8909;
                                continue;
                              } else {
                                return true;
                              }
                              break;
                            }
                          }()) {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8896), cljs$pprint$iter__8893.call(null, cljs.core.chunk_rest.call(null, s__8894__$2)));
                          } else {
                            return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__8896), null);
                          }
                        } else {
                          var vec__8900 = cljs.core.first.call(null, s__8894__$2);
                          var col = cljs.core.nth.call(null, vec__8900, 0, null);
                          var width = cljs.core.nth.call(null, vec__8900, 1, null);
                          return cljs.core.cons.call(null, cljs.pprint.add_padding.call(null, width, [cljs.core.str(col)].join("")), cljs$pprint$iter__8893.call(null, cljs.core.rest.call(null, s__8894__$2)));
                        }
                      } else {
                        return null;
                      }
                      break;
                    }
                  };
                }(widths, spacers, _STAR_print_newline_STAR_8892), null, null);
              };
            }(widths, spacers, _STAR_print_newline_STAR_8892);
            return iter__5279__auto__.call(null, cljs.core.map.call(null, cljs.core.vector, cljs.core.map.call(null, function(iter__5279__auto__, widths, spacers, _STAR_print_newline_STAR_8892) {
              return function(p1__8888_SHARP_) {
                return cljs.core.get.call(null, row, p1__8888_SHARP_);
              };
            }(iter__5279__auto__, widths, spacers, _STAR_print_newline_STAR_8892), ks), widths));
          }()))), cljs.core.str(trailer)].join("");
        };
      }(widths, spacers, _STAR_print_newline_STAR_8892);
      cljs.core.println.call(null);
      cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", cljs.core.zipmap.call(null, ks, ks)));
      cljs.core.println.call(null, fmt_row.call(null, "|-", "-+-", "-|", cljs.core.zipmap.call(null, ks, spacers)));
      var seq__8901 = cljs.core.seq.call(null, rows);
      var chunk__8902 = null;
      var count__8903 = 0;
      var i__8904 = 0;
      while (true) {
        if (i__8904 < count__8903) {
          var row = cljs.core._nth.call(null, chunk__8902, i__8904);
          cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
          var G__8910 = seq__8901;
          var G__8911 = chunk__8902;
          var G__8912 = count__8903;
          var G__8913 = i__8904 + 1;
          seq__8901 = G__8910;
          chunk__8902 = G__8911;
          count__8903 = G__8912;
          i__8904 = G__8913;
          continue;
        } else {
          var temp__4425__auto__ = cljs.core.seq.call(null, seq__8901);
          if (temp__4425__auto__) {
            var seq__8901__$1 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__8901__$1)) {
              var c__5310__auto__ = cljs.core.chunk_first.call(null, seq__8901__$1);
              var G__8914 = cljs.core.chunk_rest.call(null, seq__8901__$1);
              var G__8915 = c__5310__auto__;
              var G__8916 = cljs.core.count.call(null, c__5310__auto__);
              var G__8917 = 0;
              seq__8901 = G__8914;
              chunk__8902 = G__8915;
              count__8903 = G__8916;
              i__8904 = G__8917;
              continue;
            } else {
              var row = cljs.core.first.call(null, seq__8901__$1);
              cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
              var G__8918 = cljs.core.next.call(null, seq__8901__$1);
              var G__8919 = null;
              var G__8920 = 0;
              var G__8921 = 0;
              seq__8901 = G__8918;
              chunk__8902 = G__8919;
              count__8903 = G__8920;
              i__8904 = G__8921;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    } else {
      return null;
    }
  } finally {
    cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_8892;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1 = function(rows) {
  return cljs.pprint.print_table.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, rows)), rows);
};
cljs.pprint.print_table.cljs$lang$maxFixedArity = 2;
goog.provide("cljs.test");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.pprint");
cljs.test.empty_env = function cljs$test$empty_env() {
  var args7755 = [];
  var len__5565__auto___7759 = arguments.length;
  var i__5566__auto___7760 = 0;
  while (true) {
    if (i__5566__auto___7760 < len__5565__auto___7759) {
      args7755.push(arguments[i__5566__auto___7760]);
      var G__7761 = i__5566__auto___7760 + 1;
      i__5566__auto___7760 = G__7761;
      continue;
    } else {
    }
    break;
  }
  var G__7757 = args7755.length;
  switch(G__7757) {
    case 0:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args7755.length)].join(""));;
  }
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.test.empty_env.call(null, new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322));
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1 = function(reporter) {
  var G__7758 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 577538877), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0], null), new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150), 
  cljs.core.List.EMPTY, new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523), cljs.core.List.EMPTY, new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.core.pr_str, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), reporter], null);
  var G__7758__$1 = cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.test", "pprint", "cljs.test/pprint", 1627393641), reporter) ? cljs.core.assoc.call(null, G__7758, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.pprint.pprint) : G__7758;
  return G__7758__$1;
};
cljs.test.empty_env.cljs$lang$maxFixedArity = 1;
cljs.test._STAR_current_env_STAR_ = null;
cljs.test.get_current_env = function cljs$test$get_current_env() {
  var or__4526__auto__ = cljs.test._STAR_current_env_STAR_;
  if (cljs.core.truth_(or__4526__auto__)) {
    return or__4526__auto__;
  } else {
    return cljs.test.empty_env.call(null);
  }
};
cljs.test.update_current_env_BANG_ = function cljs$test$update_current_env_BANG_() {
  var args__5572__auto__ = [];
  var len__5565__auto___7766 = arguments.length;
  var i__5566__auto___7767 = 0;
  while (true) {
    if (i__5566__auto___7767 < len__5565__auto___7766) {
      args__5572__auto__.push(arguments[i__5566__auto___7767]);
      var G__7768 = i__5566__auto___7767 + 1;
      i__5566__auto___7767 = G__7768;
      continue;
    } else {
    }
    break;
  }
  var argseq__5573__auto__ = 2 < args__5572__auto__.length ? new cljs.core.IndexedSeq(args__5572__auto__.slice(2), 0) : null;
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5573__auto__);
};
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ks, f, args) {
  return cljs.test._STAR_current_env_STAR_ = cljs.core.apply.call(null, cljs.core.update_in, cljs.test.get_current_env.call(null), ks, f, args);
};
cljs.test.update_current_env_BANG_.cljs$lang$maxFixedArity = 2;
cljs.test.update_current_env_BANG_.cljs$lang$applyTo = function(seq7763) {
  var G__7764 = cljs.core.first.call(null, seq7763);
  var seq7763__$1 = cljs.core.next.call(null, seq7763);
  var G__7765 = cljs.core.first.call(null, seq7763__$1);
  var seq7763__$2 = cljs.core.next.call(null, seq7763__$1);
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__7764, G__7765, seq7763__$2);
};
cljs.test.set_env_BANG_ = function cljs$test$set_env_BANG_(new_env) {
  return cljs.test._STAR_current_env_STAR_ = new_env;
};
cljs.test.clear_env_BANG_ = function cljs$test$clear_env_BANG_() {
  return cljs.test._STAR_current_env_STAR_ = null;
};
cljs.test.get_and_clear_env_BANG_ = function cljs$test$get_and_clear_env_BANG_() {
  var env = cljs.test.get_current_env.call(null);
  cljs.test.clear_env_BANG_.call(null);
  return env;
};
cljs.test.testing_vars_str = function cljs$test$testing_vars_str(m) {
  var map__7772 = m;
  var map__7772__$1 = (!(map__7772 == null) ? map__7772.cljs$lang$protocol_mask$partition0$ & 64 || map__7772.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__7772) : map__7772;
  var file = cljs.core.get.call(null, map__7772__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  var line = cljs.core.get.call(null, map__7772__$1, new cljs.core.Keyword(null, "line", "line", 212345235));
  var column = cljs.core.get.call(null, map__7772__$1, new cljs.core.Keyword(null, "column", "column", 2078222095));
  return [cljs.core.str(cljs.core.reverse.call(null, cljs.core.map.call(null, function(map__7772, map__7772__$1, file, line, column) {
    return function(p1__7769_SHARP_) {
      return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, p1__7769_SHARP_));
    };
  }(map__7772, map__7772__$1, file, line, column), (new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null))))), cljs.core.str(" ("), cljs.core.str(file), cljs.core.str(":"), cljs.core.str(line), cljs.core.str(cljs.core.truth_(column) ? [cljs.core.str(":"), cljs.core.str(column)].join("") : null), cljs.core.str(")")].join("");
};
cljs.test.testing_contexts_str = function cljs$test$testing_contexts_str() {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))));
};
cljs.test.inc_report_counter_BANG_ = function cljs$test$inc_report_counter_BANG_(name) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), name], null), cljs.core.fnil.call(null, cljs.core.inc, 0));
  } else {
    return null;
  }
};
if (typeof cljs.test.report !== "undefined") {
} else {
  cljs.test.report = function() {
    var method_table__5420__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__5421__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__5422__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__5423__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__5424__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.test", "report"), function(method_table__5420__auto__, prefer_table__5421__auto__, method_cache__5422__auto__, cached_hierarchy__5423__auto__, hierarchy__5424__auto__) {
      return function(m) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "reporter", "reporter", -805360621)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m)], null);
      };
    }(method_table__5420__auto__, prefer_table__5421__auto__, method_cache__5422__auto__, cached_hierarchy__5423__auto__, hierarchy__5424__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__5424__auto__, method_table__5420__auto__, prefer_table__5421__auto__, method_cache__5422__auto__, cached_hierarchy__5423__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.Keyword(null, "default", "default", -1987822328), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "pass", "pass", 1574159993)], null), function(m) {
  return cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
});
cljs.test.print_comparison = function cljs$test$print_comparison(m) {
  var formatter_fn = function() {
    var or__4526__auto__ = (new cljs.core.Keyword(null, "formatter", "formatter", -483008823)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
    if (cljs.core.truth_(or__4526__auto__)) {
      return or__4526__auto__;
    } else {
      return cljs.core.pr_str;
    }
  }();
  cljs.core.println.call(null, "expected:", formatter_fn.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m)));
  return cljs.core.println.call(null, "  actual:", formatter_fn.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m)));
};
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "fail", "fail", 1706214930)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  cljs.core.println.call(null, "\nFAIL in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__4425__auto___7774 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__4425__auto___7774)) {
    var message_7775 = temp__4425__auto___7774;
    cljs.core.println.call(null, message_7775);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "error", "error", -978969032)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "error", "error", -978969032));
  cljs.core.println.call(null, "\nERROR in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__4425__auto___7776 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__4425__auto___7776)) {
    var message_7777 = temp__4425__auto___7776;
    cljs.core.println.call(null, message_7777);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "summary", "summary", 380847952)], null), function(m) {
  cljs.core.println.call(null, "\nRan", (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(m), "tests containing", (new cljs.core.Keyword(null, "pass", "pass", 1574159993)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "assertions.");
  return cljs.core.println.call(null, (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m), "failures,", (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "errors.");
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null), function(m) {
  return cljs.core.println.call(null, "\nTesting", cljs.core.name.call(null, (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(m)));
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-all-vars", "end-test-all-vars", 548827253)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713)], null), function(m) {
  return null;
});
cljs.test.js_line_and_column = function cljs$test$js_line_and_column(stack_element) {
  var parts = stack_element.split(":");
  var cnt = cljs.core.count.call(null, parts);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [parseInt(cljs.core.nth.call(null, parts, cnt - 2)), parseInt(cljs.core.nth.call(null, parts, cnt - 1))], null);
};
cljs.test.js_filename = function cljs$test$js_filename(stack_element) {
  return cljs.core.first.call(null, cljs.core.last.call(null, stack_element.split("/out/")).split(":"));
};
cljs.test.mapped_line_and_column = function cljs$test$mapped_line_and_column(filename, line, column) {
  var default$ = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line, column], null);
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "source-map", "source-map", 1706252311)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var source_map = temp__4423__auto__;
    var temp__4423__auto____$1 = cljs.core.get_in.call(null, source_map, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line - 1], null));
    if (cljs.core.truth_(temp__4423__auto____$1)) {
      var columns = temp__4423__auto____$1;
      return cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.first.call(null, function() {
        var temp__4423__auto____$2 = cljs.core.get.call(null, columns, column - 1);
        if (cljs.core.truth_(temp__4423__auto____$2)) {
          var mapping = temp__4423__auto____$2;
          return mapping;
        } else {
          return cljs.core.second.call(null, cljs.core.first.call(null, columns));
        }
      }()), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "source", "source", -433931539), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "col", "col", -1959363084)], null)));
    } else {
      return default$;
    }
  } else {
    return default$;
  }
};
cljs.test.file_and_line = function cljs$test$file_and_line(exception, depth) {
  var temp__4423__auto__ = function() {
    var and__4514__auto__ = typeof exception.stack === "string";
    if (and__4514__auto__) {
      var G__7783 = exception.stack;
      var G__7783__$1 = G__7783 == null ? null : clojure.string.split_lines.call(null, G__7783);
      var G__7783__$2 = G__7783__$1 == null ? null : cljs.core.get.call(null, G__7783__$1, depth);
      var G__7783__$3 = G__7783__$2 == null ? null : clojure.string.trim.call(null, G__7783__$2);
      return G__7783__$3;
    } else {
      return and__4514__auto__;
    }
  }();
  if (cljs.core.truth_(temp__4423__auto__)) {
    var stack_element = temp__4423__auto__;
    var fname = cljs.test.js_filename.call(null, stack_element);
    var vec__7784 = cljs.test.js_line_and_column.call(null, stack_element);
    var line = cljs.core.nth.call(null, vec__7784, 0, null);
    var column = cljs.core.nth.call(null, vec__7784, 1, null);
    var vec__7785 = cljs.test.mapped_line_and_column.call(null, fname, line, column);
    var fname__$1 = cljs.core.nth.call(null, vec__7785, 0, null);
    var line__$1 = cljs.core.nth.call(null, vec__7785, 1, null);
    var column__$1 = cljs.core.nth.call(null, vec__7785, 2, null);
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "file", "file", -1269645878), fname__$1, new cljs.core.Keyword(null, "line", "line", 212345235), line__$1, new cljs.core.Keyword(null, "column", "column", 2078222095), column__$1], null);
  } else {
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", -1269645878), exception.fileName, new cljs.core.Keyword(null, "line", "line", 212345235), exception.lineNumber], null);
  }
};
cljs.test.do_report = function cljs$test$do_report(m) {
  var m__$1 = function() {
    var G__7787 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m) instanceof cljs.core.Keyword ? (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m).fqn : null;
    switch(G__7787) {
      case "fail":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, new Error, 4), m);
        break;
      case "error":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m), 0), m);
        break;
      default:
        return m;
    }
  }();
  return cljs.test.report.call(null, m__$1);
};
cljs.test.IAsyncTest = {};
cljs.test.async_QMARK_ = function cljs$test$async_QMARK_(x) {
  if (!(x == null)) {
    if (false || x.cljs$test$IAsyncTest$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
  }
};
cljs.test.run_block = function cljs$test$run_block(fns) {
  while (true) {
    var temp__4425__auto__ = cljs.core.seq.call(null, fns);
    if (temp__4425__auto__) {
      var xs__4977__auto__ = temp__4425__auto__;
      var f = cljs.core.first.call(null, xs__4977__auto__);
      var obj = f.call(null);
      if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, obj))) {
        return obj.call(null, function() {
          var d = new cljs.core.Delay(function(fns, obj, f, xs__4977__auto__, temp__4425__auto__) {
            return function() {
              return cljs$test$run_block.call(null, cljs.core.rest.call(null, fns));
            };
          }(fns, obj, f, xs__4977__auto__, temp__4425__auto__), null);
          return function(fns, d, obj, f, xs__4977__auto__, temp__4425__auto__) {
            return function() {
              if (cljs.core.realized_QMARK_.call(null, d)) {
                return cljs.core.println.call(null, "WARNING: Async test called done more than one time.");
              } else {
                return cljs.core.deref.call(null, d);
              }
            };
          }(fns, d, obj, f, xs__4977__auto__, temp__4425__auto__);
        }());
      } else {
        var G__7795 = function() {
          var G__7794 = cljs.core.rest.call(null, fns);
          var G__7794__$1 = cljs.core.truth_((new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, obj))) ? cljs.core.concat.call(null, obj, G__7794) : G__7794;
          return G__7794__$1;
        }();
        fns = G__7795;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.test.block = function cljs$test$block(fns) {
  var G__7797 = fns;
  var G__7797__$1 = G__7797 == null ? null : cljs.core.vary_meta.call(null, G__7797, cljs.core.assoc, new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965), true);
  return G__7797__$1;
};
cljs.test.test_var_block_STAR_ = function cljs$test$test_var_block_STAR_(v, t) {
  if (v instanceof cljs.core.Var) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "instance?", "instance?", 1075939923, null), new cljs.core.Symbol(null, "Var", "Var", -1833791616, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null))))].join(""));
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.conj, v);
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.Keyword(null, "test", "test", 577538877)], null), cljs.core.inc);
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    try {
      return t.call(null);
    } catch (e7800) {
      var e = e7800;
      var G__7801 = e instanceof cljs.core.Keyword ? e.fqn : null;
      switch(G__7801) {
        case "cljs.test/async-disabled":
          throw "Async tests require fixtures to be specified as maps.  Testing aborted.";break;
        default:
          return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), e], null));
      }
    }
  }, function() {
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.rest);
  }], null);
};
cljs.test.test_var_block = function cljs$test$test_var_block(v) {
  var temp__4423__auto__ = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var t = temp__4423__auto__;
    return cljs.test.test_var_block_STAR_.call(null, v, t);
  } else {
    return null;
  }
};
cljs.test.test_var = function cljs$test$test_var(v) {
  return cljs.test.run_block.call(null, cljs.test.test_var_block.call(null, v));
};
cljs.test.default_fixture = function cljs$test$default_fixture(f) {
  return f.call(null);
};
cljs.test.compose_fixtures = function cljs$test$compose_fixtures(f1, f2) {
  return function(g) {
    return f1.call(null, function() {
      return f2.call(null, g);
    });
  };
};
cljs.test.join_fixtures = function cljs$test$join_fixtures(fixtures) {
  return cljs.core.reduce.call(null, cljs.test.compose_fixtures, cljs.test.default_fixture, fixtures);
};
cljs.test.wrap_map_fixtures = function cljs$test$wrap_map_fixtures(map_fixtures, block) {
  return cljs.core.concat.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "before", "before", -1633692388), map_fixtures), block, cljs.core.reverse.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "after", "after", 594996914), map_fixtures)));
};
cljs.test.execution_strategy = function cljs$test$execution_strategy(once, each) {
  var fixtures_type = function cljs$test$execution_strategy_$_fixtures_type(coll) {
    if (cljs.core.empty_QMARK_.call(null, coll)) {
      return new cljs.core.Keyword(null, "none", "none", 1333468478);
    } else {
      if (cljs.core.every_QMARK_.call(null, cljs.core.map_QMARK_, coll)) {
        return new cljs.core.Keyword(null, "map", "map", 1371690461);
      } else {
        if (cljs.core.every_QMARK_.call(null, cljs.core.fn_QMARK_, coll)) {
          return new cljs.core.Keyword(null, "fn", "fn", -1175266204);
        } else {
          return null;
        }
      }
    }
  };
  var fixtures_types = function cljs$test$execution_strategy_$_fixtures_types() {
    return cljs.core.distinct.call(null, cljs.core.remove.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "none", "none", 1333468478), null], null), null), cljs.core.map.call(null, fixtures_type, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [once, each], null))));
  };
  var vec__7804 = fixtures_types.call(null);
  var type = cljs.core.nth.call(null, vec__7804, 0, null);
  var types = vec__7804;
  if (cljs.core.not_any_QMARK_.call(null, cljs.core.nil_QMARK_, types)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Fixtures may not be of mixed types"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not-any?", "not-any?", -2114707554, null), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "types", "types", -2064405130, null))))].join(""));
  }
  if (2 > cljs.core.count.call(null, types)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("fixtures specified in :once and :each must be of the same type"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "types", "types", -2064405130, null)))))].join(""));
  }
  return (new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "async", "async", 1050769601), new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "sync", "sync", -624148946)], null)).call(null, type, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.test.disable_async = function cljs$test$disable_async(f) {
  return function() {
    var obj = f.call(null);
    if (cljs.core.truth_(cljs.test.async_QMARK_.call(null, obj))) {
      throw new cljs.core.Keyword("cljs.test", "async-disabled", "cljs.test/async-disabled", -772095377);
    } else {
    }
    return obj;
  };
};
cljs.test.test_vars_block = function cljs$test$test_vars_block(vars) {
  return cljs.core.map.call(null, function(p__7812) {
    var vec__7813 = p__7812;
    var ns = cljs.core.nth.call(null, vec__7813, 0, null);
    var vars__$1 = cljs.core.nth.call(null, vec__7813, 1, null);
    return function(vec__7813, ns, vars__$1) {
      return function() {
        return cljs.test.block.call(null, function() {
          var env = cljs.test.get_current_env.call(null);
          var once_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-fixtures", "once-fixtures", 1253947167), ns], null));
          var each_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "each-fixtures", "each-fixtures", 802243977), ns], null));
          var G__7814 = cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures) instanceof cljs.core.Keyword ? cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures).fqn : null;
          switch(G__7814) {
            case "async":
              return cljs.test.wrap_map_fixtures.call(null, once_fixtures, cljs.core.mapcat.call(null, cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.test.wrap_map_fixtures, each_fixtures), cljs.test.test_var_block), cljs.core.filter.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "test", "test", 577538877), cljs.core.meta), vars__$1)));
              break;
            case "sync":
              var each_fixture_fn = cljs.test.join_fixtures.call(null, each_fixtures);
              return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(each_fixture_fn, G__7814, env, once_fixtures, each_fixtures, vec__7813, ns, vars__$1) {
                return function() {
                  return cljs.test.join_fixtures.call(null, once_fixtures).call(null, function(each_fixture_fn, G__7814, env, once_fixtures, each_fixtures, vec__7813, ns, vars__$1) {
                    return function() {
                      var seq__7815 = cljs.core.seq.call(null, vars__$1);
                      var chunk__7816 = null;
                      var count__7817 = 0;
                      var i__7818 = 0;
                      while (true) {
                        if (i__7818 < count__7817) {
                          var v = cljs.core._nth.call(null, chunk__7816, i__7818);
                          var temp__4425__auto___7820 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                          if (cljs.core.truth_(temp__4425__auto___7820)) {
                            var t_7821 = temp__4425__auto___7820;
                            each_fixture_fn.call(null, function(seq__7815, chunk__7816, count__7817, i__7818, t_7821, temp__4425__auto___7820, v, each_fixture_fn, G__7814, env, once_fixtures, each_fixtures, vec__7813, ns, vars__$1) {
                              return function() {
                                return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_7821)));
                              };
                            }(seq__7815, chunk__7816, count__7817, i__7818, t_7821, temp__4425__auto___7820, v, each_fixture_fn, G__7814, env, once_fixtures, each_fixtures, vec__7813, ns, vars__$1));
                          } else {
                          }
                          var G__7822 = seq__7815;
                          var G__7823 = chunk__7816;
                          var G__7824 = count__7817;
                          var G__7825 = i__7818 + 1;
                          seq__7815 = G__7822;
                          chunk__7816 = G__7823;
                          count__7817 = G__7824;
                          i__7818 = G__7825;
                          continue;
                        } else {
                          var temp__4425__auto__ = cljs.core.seq.call(null, seq__7815);
                          if (temp__4425__auto__) {
                            var seq__7815__$1 = temp__4425__auto__;
                            if (cljs.core.chunked_seq_QMARK_.call(null, seq__7815__$1)) {
                              var c__5310__auto__ = cljs.core.chunk_first.call(null, seq__7815__$1);
                              var G__7826 = cljs.core.chunk_rest.call(null, seq__7815__$1);
                              var G__7827 = c__5310__auto__;
                              var G__7828 = cljs.core.count.call(null, c__5310__auto__);
                              var G__7829 = 0;
                              seq__7815 = G__7826;
                              chunk__7816 = G__7827;
                              count__7817 = G__7828;
                              i__7818 = G__7829;
                              continue;
                            } else {
                              var v = cljs.core.first.call(null, seq__7815__$1);
                              var temp__4425__auto___7830__$1 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                              if (cljs.core.truth_(temp__4425__auto___7830__$1)) {
                                var t_7831 = temp__4425__auto___7830__$1;
                                each_fixture_fn.call(null, function(seq__7815, chunk__7816, count__7817, i__7818, t_7831, temp__4425__auto___7830__$1, v, seq__7815__$1, temp__4425__auto__, each_fixture_fn, G__7814, env, once_fixtures, each_fixtures, vec__7813, ns, vars__$1) {
                                  return function() {
                                    return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_7831)));
                                  };
                                }(seq__7815, chunk__7816, count__7817, i__7818, t_7831, temp__4425__auto___7830__$1, v, seq__7815__$1, temp__4425__auto__, each_fixture_fn, G__7814, env, once_fixtures, each_fixtures, vec__7813, ns, vars__$1));
                              } else {
                              }
                              var G__7832 = cljs.core.next.call(null, seq__7815__$1);
                              var G__7833 = null;
                              var G__7834 = 0;
                              var G__7835 = 0;
                              seq__7815 = G__7832;
                              chunk__7816 = G__7833;
                              count__7817 = G__7834;
                              i__7818 = G__7835;
                              continue;
                            }
                          } else {
                            return null;
                          }
                        }
                        break;
                      }
                    };
                  }(each_fixture_fn, G__7814, env, once_fixtures, each_fixtures, vec__7813, ns, vars__$1));
                };
              }(each_fixture_fn, G__7814, env, once_fixtures, each_fixtures, vec__7813, ns, vars__$1)], null);
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures))].join(""));;
          }
        }());
      };
    }(vec__7813, ns, vars__$1);
  }, cljs.core.group_by.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "ns", "ns", 441598760), cljs.core.meta), vars));
};
cljs.test.test_vars = function cljs$test$test_vars(vars) {
  return cljs.test.run_block.call(null, cljs.core.concat.call(null, cljs.test.test_vars_block.call(null, vars), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    return cljs.test.report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713), new cljs.core.Keyword(null, "vars", "vars", -2046957217), vars], null));
  }], null)));
};
cljs.test.successful_QMARK_ = function cljs$test$successful_QMARK_(summary) {
  return (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0 && (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0;
};
goog.provide("tiltontec.rube.ut_macros");
goog.require("cljs.core");
goog.require("clojure.string");
cljs.core.enable_console_print_BANG_.call(null);
tiltontec.rube.ut_macros._STAR_trx_QMARK__STAR_ = true;
tiltontec.rube.ut_macros._STAR_trc_ensure_STAR_ = null;
tiltontec.rube.ut_macros._STAR_trx_path_id_STAR_ = null;
tiltontec.rube.ut_macros._STAR_trxdepth_STAR_ = 0;
tiltontec.rube.ut_macros.last_trc = cljs.core.atom.call(null, 0);
tiltontec.rube.ut_macros.call_trc$ = function tiltontec$rube$ut_macros$call_trc$(s, bits) {
  return [cljs.core.str(s), cljs.core.str(": "), cljs.core.str(clojure.string.join.call(null, ", ", bits))].join("");
};
tiltontec.rube.ut_macros.call_trc = function tiltontec$rube$ut_macros$call_trc() {
  var args__8833__auto__ = [];
  var len__8826__auto___9997 = arguments.length;
  var i__8827__auto___9998 = 0;
  while (true) {
    if (i__8827__auto___9998 < len__8826__auto___9997) {
      args__8833__auto__.push(arguments[i__8827__auto___9998]);
      var G__9999 = i__8827__auto___9998 + 1;
      i__8827__auto___9998 = G__9999;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 1 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(1), 0) : null;
  return tiltontec.rube.ut_macros.call_trc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__8834__auto__);
};
tiltontec.rube.ut_macros.call_trc.cljs$core$IFn$_invoke$arity$variadic = function(s, os) {
  if (cljs.core.truth_(tiltontec.rube.ut_macros._STAR_trx_QMARK__STAR_)) {
    if (cljs.core.truth_(s)) {
      var path = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, tiltontec.rube.ut_macros._STAR_trxdepth_STAR_, "."));
      return cljs.core.println.call(null, path, tiltontec.rube.ut_macros.call_trc$.call(null, s, os));
    } else {
      return null;
    }
  } else {
    return null;
  }
};
tiltontec.rube.ut_macros.call_trc.cljs$lang$maxFixedArity = 1;
tiltontec.rube.ut_macros.call_trc.cljs$lang$applyTo = function(seq9995) {
  var G__9996 = cljs.core.first.call(null, seq9995);
  var seq9995__$1 = cljs.core.next.call(null, seq9995);
  return tiltontec.rube.ut_macros.call_trc.cljs$core$IFn$_invoke$arity$variadic(G__9996, seq9995__$1);
};
tiltontec.rube.ut_macros.trx = function tiltontec$rube$ut_macros$trx() {
  var args__8833__auto__ = [];
  var len__8826__auto___10004 = arguments.length;
  var i__8827__auto___10005 = 0;
  while (true) {
    if (i__8827__auto___10005 < len__8826__auto___10004) {
      args__8833__auto__.push(arguments[i__8827__auto___10005]);
      var G__10006 = i__8827__auto___10005 + 1;
      i__8827__auto___10005 = G__10006;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 3 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(3), 0) : null;
  return tiltontec.rube.ut_macros.trx.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__8834__auto__);
};
tiltontec.rube.ut_macros.trx.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, label, vals) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.ut-macros", "call-trc", "tiltontec.rube.ut-macros/call-trc", 1525429284, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, !(label == null) ? [cljs.core.str(label)].join("") : null), vals)));
};
tiltontec.rube.ut_macros.trx.cljs$lang$maxFixedArity = 3;
tiltontec.rube.ut_macros.trx.cljs$lang$applyTo = function(seq10000) {
  var G__10001 = cljs.core.first.call(null, seq10000);
  var seq10000__$1 = cljs.core.next.call(null, seq10000);
  var G__10002 = cljs.core.first.call(null, seq10000__$1);
  var seq10000__$2 = cljs.core.next.call(null, seq10000__$1);
  var G__10003 = cljs.core.first.call(null, seq10000__$2);
  var seq10000__$3 = cljs.core.next.call(null, seq10000__$2);
  return tiltontec.rube.ut_macros.trx.cljs$core$IFn$_invoke$arity$variadic(G__10001, G__10002, G__10003, seq10000__$3);
};
tiltontec.rube.ut_macros.trx.cljs$lang$macro = true;
tiltontec.rube.ut_macros.wtrx = function tiltontec$rube$ut_macros$wtrx() {
  var args__8833__auto__ = [];
  var len__8826__auto___10013 = arguments.length;
  var i__8827__auto___10014 = 0;
  while (true) {
    if (i__8827__auto___10014 < len__8826__auto___10013) {
      args__8833__auto__.push(arguments[i__8827__auto___10014]);
      var G__10015 = i__8827__auto___10014 + 1;
      i__8827__auto___10014 = G__10015;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 3 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(3), 0) : null;
  return tiltontec.rube.ut_macros.wtrx.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__8834__auto__);
};
tiltontec.rube.ut_macros.wtrx.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__10011, body) {
  var vec__10012 = p__10011;
  var lo = cljs.core.nth.call(null, vec__10012, 0, null);
  var hi = cljs.core.nth.call(null, vec__10012, 1, null);
  var trxargs = cljs.core.nthnext.call(null, vec__10012, 2);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "binding", "cljs.core/binding", 2050379843, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.ut-macros", "*trxdepth*", "tiltontec.rube.ut-macros/*trxdepth*", 
  -1596334828, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "inc", "cljs.core/inc", -879172610, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.ut-macros", "*trxdepth*", "tiltontec.rube.ut-macros/*trxdepth*", -1596334828, null))))))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, 
  cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "cond", "cljs.core/cond", 2005388338, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "\x3c\x3d", "cljs.core/\x3c\x3d", 1677001748, null)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, lo), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.ut-macros", "*trxdepth*", "tiltontec.rube.ut-macros/*trxdepth*", -1596334828, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, hi))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.ut-macros", "trx", "tiltontec.rube.ut-macros/trx", 
  -999886650, null)), trxargs)))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "\x3e", "cljs.core/\x3e", 2020535938, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.ut-macros", "*trxdepth*", "tiltontec.rube.ut-macros/*trxdepth*", -1596334828, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 
  hi))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "throw", "throw", 595905694, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("js", "Error.", "js/Error.", 750655924, null)), 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "str", "cljs.core/str", -1971828991, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, "wtrx exceeded max depth "), cljs.core._conj.call(null, cljs.core.List.EMPTY, hi), cljs.core._conj.call(null, cljs.core.List.EMPTY, ":"), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.ut-macros", "call-trc$", "tiltontec.rube.ut-macros/call-trc$", 1310750565, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 
  cljs.core.first.call(null, trxargs)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "list", "cljs.core/list", -1331406371, null)), cljs.core.rest.call(null, trxargs))))))))))))))))))))))))), body)));
};
tiltontec.rube.ut_macros.wtrx.cljs$lang$maxFixedArity = 3;
tiltontec.rube.ut_macros.wtrx.cljs$lang$applyTo = function(seq10007) {
  var G__10008 = cljs.core.first.call(null, seq10007);
  var seq10007__$1 = cljs.core.next.call(null, seq10007);
  var G__10009 = cljs.core.first.call(null, seq10007__$1);
  var seq10007__$2 = cljs.core.next.call(null, seq10007__$1);
  var G__10010 = cljs.core.first.call(null, seq10007__$2);
  var seq10007__$3 = cljs.core.next.call(null, seq10007__$2);
  return tiltontec.rube.ut_macros.wtrx.cljs$core$IFn$_invoke$arity$variadic(G__10008, G__10009, G__10010, seq10007__$3);
};
tiltontec.rube.ut_macros.wtrx.cljs$lang$macro = true;
tiltontec.rube.ut_macros.prog1 = function tiltontec$rube$ut_macros$prog1() {
  var args__8833__auto__ = [];
  var len__8826__auto___10020 = arguments.length;
  var i__8827__auto___10021 = 0;
  while (true) {
    if (i__8827__auto___10021 < len__8826__auto___10020) {
      args__8833__auto__.push(arguments[i__8827__auto___10021]);
      var G__10022 = i__8827__auto___10021 + 1;
      i__8827__auto___10021 = G__10022;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 2 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(2), 0) : null;
  return tiltontec.rube.ut_macros.prog1.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__8834__auto__);
};
tiltontec.rube.ut_macros.prog1.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "let", "cljs.core/let", -308701135, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "result__10016__auto__", "result__10016__auto__", 
  1029289442, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.first.call(null, body))))))), cljs.core.rest.call(null, body), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "result__10016__auto__", "result__10016__auto__", 1029289442, null)))));
};
tiltontec.rube.ut_macros.prog1.cljs$lang$maxFixedArity = 2;
tiltontec.rube.ut_macros.prog1.cljs$lang$applyTo = function(seq10017) {
  var G__10018 = cljs.core.first.call(null, seq10017);
  var seq10017__$1 = cljs.core.next.call(null, seq10017);
  var G__10019 = cljs.core.first.call(null, seq10017__$1);
  var seq10017__$2 = cljs.core.next.call(null, seq10017__$1);
  return tiltontec.rube.ut_macros.prog1.cljs$core$IFn$_invoke$arity$variadic(G__10018, G__10019, seq10017__$2);
};
tiltontec.rube.ut_macros.prog1.cljs$lang$macro = true;
tiltontec.rube.ut_macros.b_when = function tiltontec$rube$ut_macros$b_when() {
  var args__8833__auto__ = [];
  var len__8826__auto___10028 = arguments.length;
  var i__8827__auto___10029 = 0;
  while (true) {
    if (i__8827__auto___10029 < len__8826__auto___10028) {
      args__8833__auto__.push(arguments[i__8827__auto___10029]);
      var G__10030 = i__8827__auto___10029 + 1;
      i__8827__auto___10029 = G__10030;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 4 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(4), 0) : null;
  return tiltontec.rube.ut_macros.b_when.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__8834__auto__);
};
tiltontec.rube.ut_macros.b_when.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, var$, form, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "when-let", "cljs.core/when-let", -2049838349, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, var$), cljs.core._conj.call(null, cljs.core.List.EMPTY, form)))))), 
  body)));
};
tiltontec.rube.ut_macros.b_when.cljs$lang$maxFixedArity = 4;
tiltontec.rube.ut_macros.b_when.cljs$lang$applyTo = function(seq10023) {
  var G__10024 = cljs.core.first.call(null, seq10023);
  var seq10023__$1 = cljs.core.next.call(null, seq10023);
  var G__10025 = cljs.core.first.call(null, seq10023__$1);
  var seq10023__$2 = cljs.core.next.call(null, seq10023__$1);
  var G__10026 = cljs.core.first.call(null, seq10023__$2);
  var seq10023__$3 = cljs.core.next.call(null, seq10023__$2);
  var G__10027 = cljs.core.first.call(null, seq10023__$3);
  var seq10023__$4 = cljs.core.next.call(null, seq10023__$3);
  return tiltontec.rube.ut_macros.b_when.cljs$core$IFn$_invoke$arity$variadic(G__10024, G__10025, G__10026, G__10027, seq10023__$4);
};
tiltontec.rube.ut_macros.b_when.cljs$lang$macro = true;
tiltontec.rube.ut_macros.unless = function tiltontec$rube$ut_macros$unless() {
  var args__8833__auto__ = [];
  var len__8826__auto___10035 = arguments.length;
  var i__8827__auto___10036 = 0;
  while (true) {
    if (i__8827__auto___10036 < len__8826__auto___10035) {
      args__8833__auto__.push(arguments[i__8827__auto___10036]);
      var G__10037 = i__8827__auto___10036 + 1;
      i__8827__auto___10036 = G__10037;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 3 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(3), 0) : null;
  return tiltontec.rube.ut_macros.unless.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__8834__auto__);
};
tiltontec.rube.ut_macros.unless.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, form, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "when-not", "cljs.core/when-not", -556141047, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, form), body)));
};
tiltontec.rube.ut_macros.unless.cljs$lang$maxFixedArity = 3;
tiltontec.rube.ut_macros.unless.cljs$lang$applyTo = function(seq10031) {
  var G__10032 = cljs.core.first.call(null, seq10031);
  var seq10031__$1 = cljs.core.next.call(null, seq10031);
  var G__10033 = cljs.core.first.call(null, seq10031__$1);
  var seq10031__$2 = cljs.core.next.call(null, seq10031__$1);
  var G__10034 = cljs.core.first.call(null, seq10031__$2);
  var seq10031__$3 = cljs.core.next.call(null, seq10031__$2);
  return tiltontec.rube.ut_macros.unless.cljs$core$IFn$_invoke$arity$variadic(G__10032, G__10033, G__10034, seq10031__$3);
};
tiltontec.rube.ut_macros.unless.cljs$lang$macro = true;
tiltontec.rube.ut_macros.obj = Object;
tiltontec.rube.ut_macros.get_obj = function tiltontec$rube$ut_macros$get_obj(_AMPERSAND_form, _AMPERSAND_env) {
  return new cljs.core.Symbol("tiltontec.rube.ut-macros", "obj", "tiltontec.rube.ut-macros/obj", -440208596, null);
};
tiltontec.rube.ut_macros.get_obj.cljs$lang$macro = true;
tiltontec.rube.ut_macros.def_rmap_slots = function tiltontec$rube$ut_macros$def_rmap_slots() {
  var args__8833__auto__ = [];
  var len__8826__auto___10042 = arguments.length;
  var i__8827__auto___10043 = 0;
  while (true) {
    if (i__8827__auto___10043 < len__8826__auto___10042) {
      args__8833__auto__.push(arguments[i__8827__auto___10043]);
      var G__10044 = i__8827__auto___10043 + 1;
      i__8827__auto___10043 = G__10044;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 3 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(3), 0) : null;
  return tiltontec.rube.ut_macros.def_rmap_slots.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__8834__auto__);
};
tiltontec.rube.ut_macros.def_rmap_slots.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, reader_prefix, slots) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "do", "do", 1686842252, null)), cljs.core.map.call(null, function(slot_SHARP_) {
    return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "defn", "cljs.core/defn", -1606493717, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.symbol.call(null, [cljs.core.str(function() {
      var or__7787__auto__ = reader_prefix;
      if (cljs.core.truth_(or__7787__auto__)) {
        return or__7787__auto__;
      } else {
        return "";
      }
    }()), cljs.core.str(slot_SHARP_)].join(""))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
    cljs.core.keyword.call(null, slot_SHARP_)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "ref", "ref", -1364538802, null)))))))))))));
  }, slots))));
};
tiltontec.rube.ut_macros.def_rmap_slots.cljs$lang$maxFixedArity = 3;
tiltontec.rube.ut_macros.def_rmap_slots.cljs$lang$applyTo = function(seq10038) {
  var G__10039 = cljs.core.first.call(null, seq10038);
  var seq10038__$1 = cljs.core.next.call(null, seq10038);
  var G__10040 = cljs.core.first.call(null, seq10038__$1);
  var seq10038__$2 = cljs.core.next.call(null, seq10038__$1);
  var G__10041 = cljs.core.first.call(null, seq10038__$2);
  var seq10038__$3 = cljs.core.next.call(null, seq10038__$2);
  return tiltontec.rube.ut_macros.def_rmap_slots.cljs$core$IFn$_invoke$arity$variadic(G__10039, G__10040, G__10041, seq10038__$3);
};
tiltontec.rube.ut_macros.def_rmap_slots.cljs$lang$macro = true;
tiltontec.rube.ut_macros.def_rmap_meta_slots = function tiltontec$rube$ut_macros$def_rmap_meta_slots() {
  var args__8833__auto__ = [];
  var len__8826__auto___10049 = arguments.length;
  var i__8827__auto___10050 = 0;
  while (true) {
    if (i__8827__auto___10050 < len__8826__auto___10049) {
      args__8833__auto__.push(arguments[i__8827__auto___10050]);
      var G__10051 = i__8827__auto___10050 + 1;
      i__8827__auto___10050 = G__10051;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 3 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(3), 0) : null;
  return tiltontec.rube.ut_macros.def_rmap_meta_slots.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__8834__auto__);
};
tiltontec.rube.ut_macros.def_rmap_meta_slots.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, reader_prefix, slots) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "do", "do", 1686842252, null)), cljs.core.map.call(null, function(slot_SHARP_) {
    return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "defn", "cljs.core/defn", -1606493717, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.symbol.call(null, [cljs.core.str(function() {
      var or__7787__auto__ = reader_prefix;
      if (cljs.core.truth_(or__7787__auto__)) {
        return or__7787__auto__;
      } else {
        return "";
      }
    }()), cljs.core.str(slot_SHARP_)].join(""))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
    cljs.core.keyword.call(null, slot_SHARP_)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "meta", "cljs.core/meta", -748218346, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "ref", "ref", -1364538802, null)))))))))))));
  }, slots))));
};
tiltontec.rube.ut_macros.def_rmap_meta_slots.cljs$lang$maxFixedArity = 3;
tiltontec.rube.ut_macros.def_rmap_meta_slots.cljs$lang$applyTo = function(seq10045) {
  var G__10046 = cljs.core.first.call(null, seq10045);
  var seq10045__$1 = cljs.core.next.call(null, seq10045);
  var G__10047 = cljs.core.first.call(null, seq10045__$1);
  var seq10045__$2 = cljs.core.next.call(null, seq10045__$1);
  var G__10048 = cljs.core.first.call(null, seq10045__$2);
  var seq10045__$3 = cljs.core.next.call(null, seq10045__$2);
  return tiltontec.rube.ut_macros.def_rmap_meta_slots.cljs$core$IFn$_invoke$arity$variadic(G__10046, G__10047, G__10048, seq10045__$3);
};
tiltontec.rube.ut_macros.def_rmap_meta_slots.cljs$lang$macro = true;
goog.provide("tiltontec.rube.utility");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("tiltontec.rube.ut_macros");
cljs.core._STAR_print_level_STAR_ = 2;
tiltontec.rube.utility.type_of = function tiltontec$rube$utility$type_of(x) {
  return cljs.core.type.call(null, x);
};
tiltontec.rube.utility.set_ify = function tiltontec$rube$utility$set_ify(x) {
  if (x == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (cljs.core.sequential_QMARK_.call(null, x)) {
      return cljs.core.set.call(null, x);
    } else {
      return cljs.core.PersistentHashSet.fromArray([x], true);
    }
  }
};
tiltontec.rube.utility.cl_find = function tiltontec$rube$utility$cl_find(sought, coll) {
  if (sought == null) {
    return null;
  } else {
    return cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([sought], true), coll);
  }
};
tiltontec.rube.utility.ia_ref = function tiltontec$rube$utility$ia_ref(x) {
  return cljs.core.atom.call(null, x);
};
tiltontec.rube.utility.any_ref_QMARK_ = function tiltontec$rube$utility$any_ref_QMARK_(x) {
  return x instanceof cljs.core.Atom;
};
tiltontec.rube.utility.rmap_setf = function tiltontec$rube$utility$rmap_setf(p__10054, new_value) {
  var vec__10056 = p__10054;
  var slot = cljs.core.nth.call(null, vec__10056, 0, null);
  var ref = cljs.core.nth.call(null, vec__10056, 1, null);
  if (cljs.core.truth_(tiltontec.rube.utility.any_ref_QMARK_.call(null, ref))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))].join(""));
  }
  if (cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, ref))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ref", "ref", -1364538802, null)))))].join(""));
  }
  cljs.core.swap_BANG_.call(null, ref, cljs.core.assoc, slot, new_value);
  return new_value;
};
tiltontec.rube.utility.rmap_meta_setf = function tiltontec$rube$utility$rmap_meta_setf(p__10057, new_value) {
  var vec__10059 = p__10057;
  var slot = cljs.core.nth.call(null, vec__10059, 0, null);
  var ref = cljs.core.nth.call(null, vec__10059, 1, null);
  if (cljs.core.truth_(cljs.core.meta.call(null, ref))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "ref", "ref", -1364538802, null))))].join(""));
  }
  cljs.core.alter_meta_BANG_.call(null, ref, cljs.core.assoc, slot, new_value);
  return new_value;
};
if (typeof tiltontec.rube.utility.err !== "undefined") {
} else {
  tiltontec.rube.utility.err = function() {
    var method_table__8681__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__8682__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__8683__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__8684__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__8685__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.rube.utility", "err"), function(method_table__8681__auto__, prefer_table__8682__auto__, method_cache__8683__auto__, cached_hierarchy__8684__auto__, hierarchy__8685__auto__) {
      return function() {
        var G__10060__delegate = function(a1, args) {
          return cljs.core.fn_QMARK_.call(null, a1);
        };
        var G__10060 = function(a1, var_args) {
          var args = null;
          if (arguments.length > 1) {
            var G__10061__i = 0, G__10061__a = new Array(arguments.length - 1);
            while (G__10061__i < G__10061__a.length) {
              G__10061__a[G__10061__i] = arguments[G__10061__i + 1];
              ++G__10061__i;
            }
            args = new cljs.core.IndexedSeq(G__10061__a, 0);
          }
          return G__10060__delegate.call(this, a1, args);
        };
        G__10060.cljs$lang$maxFixedArity = 1;
        G__10060.cljs$lang$applyTo = function(arglist__10062) {
          var a1 = cljs.core.first(arglist__10062);
          var args = cljs.core.rest(arglist__10062);
          return G__10060__delegate(a1, args);
        };
        G__10060.cljs$core$IFn$_invoke$arity$variadic = G__10060__delegate;
        return G__10060;
      }();
    }(method_table__8681__auto__, prefer_table__8682__auto__, method_cache__8683__auto__, cached_hierarchy__8684__auto__, hierarchy__8685__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__8685__auto__, method_table__8681__auto__, prefer_table__8682__auto__, method_cache__8683__auto__, cached_hierarchy__8684__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.rube.utility.err, true, function() {
  var G__10063__delegate = function(fn, mas) {
    return tiltontec.rube.utility.err.call(null, cljs.core.apply.call(null, fn, mas));
  };
  var G__10063 = function(fn, var_args) {
    var mas = null;
    if (arguments.length > 1) {
      var G__10064__i = 0, G__10064__a = new Array(arguments.length - 1);
      while (G__10064__i < G__10064__a.length) {
        G__10064__a[G__10064__i] = arguments[G__10064__i + 1];
        ++G__10064__i;
      }
      mas = new cljs.core.IndexedSeq(G__10064__a, 0);
    }
    return G__10063__delegate.call(this, fn, mas);
  };
  G__10063.cljs$lang$maxFixedArity = 1;
  G__10063.cljs$lang$applyTo = function(arglist__10065) {
    var fn = cljs.core.first(arglist__10065);
    var mas = cljs.core.rest(arglist__10065);
    return G__10063__delegate(fn, mas);
  };
  G__10063.cljs$core$IFn$_invoke$arity$variadic = G__10063__delegate;
  return G__10063;
}());
cljs.core._add_method.call(null, tiltontec.rube.utility.err, new cljs.core.Keyword(null, "default", "default", -1987822328), function() {
  var G__10066__delegate = function(bits) {
    throw new Error(clojure.string.join.call(null, " ", cljs.core.cons.call(null, "jz/err\x3e", bits)));
  };
  var G__10066 = function(var_args) {
    var bits = null;
    if (arguments.length > 0) {
      var G__10067__i = 0, G__10067__a = new Array(arguments.length - 0);
      while (G__10067__i < G__10067__a.length) {
        G__10067__a[G__10067__i] = arguments[G__10067__i + 0];
        ++G__10067__i;
      }
      bits = new cljs.core.IndexedSeq(G__10067__a, 0);
    }
    return G__10066__delegate.call(this, bits);
  };
  G__10066.cljs$lang$maxFixedArity = 0;
  G__10066.cljs$lang$applyTo = function(arglist__10068) {
    var bits = cljs.core.seq(arglist__10068);
    return G__10066__delegate(bits);
  };
  G__10066.cljs$core$IFn$_invoke$arity$variadic = G__10066__delegate;
  return G__10066;
}());
tiltontec.rube.utility.flz = function tiltontec$rube$utility$flz(x) {
  if (cljs.core.isa_QMARK_.call(null, cljs.core.type.call(null, x), cljs.core.LazySeq)) {
    return cljs.core.vec.call(null, cljs.core.doall.call(null, x));
  } else {
    return x;
  }
};
tiltontec.rube.utility.wtrx_test = function tiltontec$rube$utility$wtrx_test(n) {
  var _STAR_trxdepth_STAR_10070 = tiltontec.rube.ut_macros._STAR_trxdepth_STAR_;
  tiltontec.rube.ut_macros._STAR_trxdepth_STAR_ = tiltontec.rube.ut_macros._STAR_trxdepth_STAR_ + 1;
  try {
    if (0 <= tiltontec.rube.ut_macros._STAR_trxdepth_STAR_ && tiltontec.rube.ut_macros._STAR_trxdepth_STAR_ <= 10) {
      tiltontec.rube.ut_macros.call_trc.call(null, "test", n);
    } else {
      if (tiltontec.rube.ut_macros._STAR_trxdepth_STAR_ > 10) {
        throw new java.lang.Exception([cljs.core.str("wtrx exceeded max depth "), cljs.core.str(10), cljs.core.str(":"), cljs.core.str(tiltontec.rube.ut_macros.call_trc$.call(null, "test", cljs.core._conj.call(null, cljs.core.List.EMPTY, n)))].join(""));
      } else {
      }
    }
    if (n > 0) {
      return tiltontec$rube$utility$wtrx_test.call(null, n - 1);
    } else {
      return null;
    }
  } finally {
    tiltontec.rube.ut_macros._STAR_trxdepth_STAR_ = _STAR_trxdepth_STAR_10070;
  }
};
tiltontec.rube.utility.slot_users = function tiltontec$rube$utility$slot_users(me, slot) {
  return cljs.core.set.call(null, cljs.core.map.call(null, new cljs.core.Keyword(null, "slotq", "slotq", 1456717980), cljs.core.map.call(null, cljs.core.deref, (new cljs.core.Keyword(null, "callers", "callers", -1991542784)).cljs$core$IFn$_invoke$arity$2(cljs.core.deref.call(null, slot.call(null, cljs.core.deref.call(null, me))), cljs.core.PersistentHashSet.EMPTY))));
};
tiltontec.rube.utility.slot_useds = function tiltontec$rube$utility$slot_useds(me, slot) {
  return cljs.core.set.call(null, cljs.core.map.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), cljs.core.map.call(null, cljs.core.deref, (new cljs.core.Keyword(null, "useds", "useds", 621350967)).cljs$core$IFn$_invoke$arity$2(cljs.core.deref.call(null, slot.call(null, cljs.core.deref.call(null, me))), cljs.core.PersistentHashSet.EMPTY))));
};
tiltontec.rube.utility.make_fifo_queue = function tiltontec$rube$utility$make_fifo_queue() {
  return cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
};
tiltontec.rube.utility.fifo_data = function tiltontec$rube$utility$fifo_data(q) {
  return cljs.core.deref.call(null, q);
};
tiltontec.rube.utility.fifo_clear = function tiltontec$rube$utility$fifo_clear(q) {
  return cljs.core.swap_BANG_.call(null, q, cljs.core.empty);
};
tiltontec.rube.utility.fifo_empty_QMARK_ = function tiltontec$rube$utility$fifo_empty_QMARK_(q) {
  return cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, q));
};
tiltontec.rube.utility.fifo_peek = function tiltontec$rube$utility$fifo_peek(q) {
  return cljs.core.first.call(null, cljs.core.deref.call(null, q));
};
tiltontec.rube.utility.fifo_add = function tiltontec$rube$utility$fifo_add(q, new$) {
  return cljs.core.swap_BANG_.call(null, q, cljs.core.conj, new$);
};
tiltontec.rube.utility.fifo_pop = function tiltontec$rube$utility$fifo_pop(q) {
  if (cljs.core.truth_(tiltontec.rube.utility.fifo_empty_QMARK_.call(null, q))) {
    return null;
  } else {
    var result__5566__auto__ = cljs.core.first.call(null, cljs.core.deref.call(null, q));
    cljs.core.swap_BANG_.call(null, q, cljs.core.subvec, 1);
    return result__5566__auto__;
  }
};
goog.provide("tiltontec.rube.cell_types");
goog.require("cljs.core");
goog.require("tiltontec.rube.ut_macros");
goog.require("cljs.test");
goog.require("tiltontec.rube.utility");
tiltontec.rube.cell_types._PLUS_pulse_PLUS_ = cljs.core.atom.call(null, 0);
tiltontec.rube.cell_types.cells_init = function tiltontec$rube$cell_types$cells_init() {
  return cljs.core.reset_BANG_.call(null, tiltontec.rube.cell_types._PLUS_pulse_PLUS_, 0);
};
tiltontec.rube.cell_types._STAR_causation_STAR_ = cljs.core.List.EMPTY;
tiltontec.rube.cell_types._STAR_call_stack_STAR_ = null;
tiltontec.rube.cell_types._STAR_depender_STAR_ = null;
tiltontec.rube.cell_types._STAR_defer_changes_STAR_ = false;
tiltontec.rube.cell_types._PLUS_client_q_handler_PLUS_ = cljs.core.atom.call(null, null);
if (typeof tiltontec.rube.cell_types.unbound !== "undefined") {
} else {
  tiltontec.rube.cell_types.unbound = cljs.core.gensym.call(null, "unbound-cell-value");
}
if (typeof tiltontec.rube.cell_types.uncurrent !== "undefined") {
} else {
  tiltontec.rube.cell_types.uncurrent = cljs.core.gensym.call(null, "uncurrent-formulaic-value");
}
tiltontec.rube.cell_types._STAR_not_to_be_STAR_ = false;
tiltontec.rube.cell_types._STAR_unfinished_business_STAR_ = null;
tiltontec.rube.cell_types._STAR_within_integrity_STAR_ = false;
tiltontec.rube.cell_types._STAR_finbiz_id_STAR_ = 0;
tiltontec.rube.cell_types._STAR_c_prop_depth_STAR_ = 0;
tiltontec.rube.cell_types._PLUS_c_debug_PLUS_ = cljs.core.atom.call(null, false);
tiltontec.rube.cell_types._PLUS_stop_PLUS_ = cljs.core.atom.call(null, false);
tiltontec.rube.cell_types.cells_reset = function tiltontec$rube$cell_types$cells_reset() {
  var args11085 = [];
  var len__8826__auto___11088 = arguments.length;
  var i__8827__auto___11089 = 0;
  while (true) {
    if (i__8827__auto___11089 < len__8826__auto___11088) {
      args11085.push(arguments[i__8827__auto___11089]);
      var G__11090 = i__8827__auto___11089 + 1;
      i__8827__auto___11089 = G__11090;
      continue;
    } else {
    }
    break;
  }
  var G__11087 = args11085.length;
  switch(G__11087) {
    case 0:
      return tiltontec.rube.cell_types.cells_reset.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return tiltontec.rube.cell_types.cells_reset.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11085.length)].join(""));;
  }
};
tiltontec.rube.cell_types.cells_reset.cljs$core$IFn$_invoke$arity$0 = function() {
  return tiltontec.rube.cell_types.cells_reset.call(null, cljs.core.PersistentArrayMap.EMPTY);
};
tiltontec.rube.cell_types.cells_reset.cljs$core$IFn$_invoke$arity$1 = function(options) {
  cljs.core.reset_BANG_.call(null, tiltontec.rube.cell_types._PLUS_c_debug_PLUS_, (new cljs.core.Keyword(null, "debug", "debug", -1608172596)).cljs$core$IFn$_invoke$arity$2(options, false));
  cljs.core.reset_BANG_.call(null, cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_pulse_PLUS_), 0);
  return cljs.core.reset_BANG_.call(null, tiltontec.rube.cell_types._PLUS_client_q_handler_PLUS_, (new cljs.core.Keyword(null, "client-queue-handler", "client-queue-handler", -817174181)).cljs$core$IFn$_invoke$arity$1(options));
};
tiltontec.rube.cell_types.cells_reset.cljs$lang$maxFixedArity = 1;
tiltontec.rube.cell_types.without_c_dependency = function tiltontec$rube$cell_types$without_c_dependency() {
  var args__8833__auto__ = [];
  var len__8826__auto___11095 = arguments.length;
  var i__8827__auto___11096 = 0;
  while (true) {
    if (i__8827__auto___11096 < len__8826__auto___11095) {
      args__8833__auto__.push(arguments[i__8827__auto___11096]);
      var G__11097 = i__8827__auto___11096 + 1;
      i__8827__auto___11096 = G__11097;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 2 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(2), 0) : null;
  return tiltontec.rube.cell_types.without_c_dependency.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__8834__auto__);
};
tiltontec.rube.cell_types.without_c_dependency.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "binding", "cljs.core/binding", 2050379843, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cell-types", "*depender*", "tiltontec.rube.cell-types/*depender*", 
  83348792, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, null)))))), body)));
};
tiltontec.rube.cell_types.without_c_dependency.cljs$lang$maxFixedArity = 2;
tiltontec.rube.cell_types.without_c_dependency.cljs$lang$applyTo = function(seq11092) {
  var G__11093 = cljs.core.first.call(null, seq11092);
  var seq11092__$1 = cljs.core.next.call(null, seq11092);
  var G__11094 = cljs.core.first.call(null, seq11092__$1);
  var seq11092__$2 = cljs.core.next.call(null, seq11092__$1);
  return tiltontec.rube.cell_types.without_c_dependency.cljs$core$IFn$_invoke$arity$variadic(G__11093, G__11094, seq11092__$2);
};
tiltontec.rube.cell_types.without_c_dependency.cljs$lang$macro = true;
tiltontec.rube.cell_types._PLUS_cause = function tiltontec$rube$cell_types$_PLUS_cause() {
  return cljs.core.first.call(null, tiltontec.rube.cell_types._STAR_causation_STAR_);
};
tiltontec.rube.cell_types.c_stopper = function tiltontec$rube$cell_types$c_stopper(why) {
  return cljs.core.reset_BANG_.call(null, tiltontec.rube.cell_types._PLUS_stop_PLUS_, why);
};
tiltontec.rube.cell_types._PLUS_c_stopper_PLUS_ = cljs.core.atom.call(null, tiltontec.rube.cell_types.c_stopper);
tiltontec.rube.cell_types.c_stop = function tiltontec$rube$cell_types$c_stop() {
  var args11098 = [];
  var len__8826__auto___11101 = arguments.length;
  var i__8827__auto___11102 = 0;
  while (true) {
    if (i__8827__auto___11102 < len__8826__auto___11101) {
      args11098.push(arguments[i__8827__auto___11102]);
      var G__11103 = i__8827__auto___11102 + 1;
      i__8827__auto___11102 = G__11103;
      continue;
    } else {
    }
    break;
  }
  var G__11100 = args11098.length;
  switch(G__11100) {
    case 0:
      return tiltontec.rube.cell_types.c_stop.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return tiltontec.rube.cell_types.c_stop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11098.length)].join(""));;
  }
};
tiltontec.rube.cell_types.c_stop.cljs$core$IFn$_invoke$arity$0 = function() {
  return tiltontec.rube.cell_types.c_stop.call(null, true);
};
tiltontec.rube.cell_types.c_stop.cljs$core$IFn$_invoke$arity$1 = function(why) {
  return cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_c_stopper_PLUS_).call(null, why);
};
tiltontec.rube.cell_types.c_stop.cljs$lang$maxFixedArity = 1;
tiltontec.rube.cell_types.c_stopped = function tiltontec$rube$cell_types$c_stopped() {
  return cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_stop_PLUS_);
};
tiltontec.rube.cell_types.un_stopped = function tiltontec$rube$cell_types$un_stopped() {
  var args__8833__auto__ = [];
  var len__8826__auto___11108 = arguments.length;
  var i__8827__auto___11109 = 0;
  while (true) {
    if (i__8827__auto___11109 < len__8826__auto___11108) {
      args__8833__auto__.push(arguments[i__8827__auto___11109]);
      var G__11110 = i__8827__auto___11109 + 1;
      i__8827__auto___11109 = G__11110;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 2 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(2), 0) : null;
  return tiltontec.rube.cell_types.un_stopped.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__8834__auto__);
};
tiltontec.rube.cell_types.un_stopped.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "when-not", "cljs.core/when-not", -556141047, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cell-types", "+stop+", "tiltontec.rube.cell-types/+stop+", 530139248, null)))))), body)));
};
tiltontec.rube.cell_types.un_stopped.cljs$lang$maxFixedArity = 2;
tiltontec.rube.cell_types.un_stopped.cljs$lang$applyTo = function(seq11105) {
  var G__11106 = cljs.core.first.call(null, seq11105);
  var seq11105__$1 = cljs.core.next.call(null, seq11105);
  var G__11107 = cljs.core.first.call(null, seq11105__$1);
  var seq11105__$2 = cljs.core.next.call(null, seq11105__$1);
  return tiltontec.rube.cell_types.un_stopped.cljs$core$IFn$_invoke$arity$variadic(G__11106, G__11107, seq11105__$2);
};
tiltontec.rube.cell_types.un_stopped.cljs$lang$macro = true;
tiltontec.rube.cell_types.ustack$ = function tiltontec$rube$cell_types$ustack$(tag) {
  return [cljs.core.str(tag), cljs.core.str("ustack\x3e "), cljs.core.str(cljs.core.vec.call(null, cljs.core.map.call(null, function(c) {
    return (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c));
  }, tiltontec.rube.cell_types._STAR_call_stack_STAR_)))].join("");
};
tiltontec.rube.cell_types.c_assert = function tiltontec$rube$cell_types$c_assert() {
  var args11111 = [];
  var len__8826__auto___11117 = arguments.length;
  var i__8827__auto___11118 = 0;
  while (true) {
    if (i__8827__auto___11118 < len__8826__auto___11117) {
      args11111.push(arguments[i__8827__auto___11118]);
      var G__11119 = i__8827__auto___11118 + 1;
      i__8827__auto___11118 = G__11119;
      continue;
    } else {
    }
    break;
  }
  var G__11116 = args11111.length;
  switch(G__11116) {
    case 1:
      return tiltontec.rube.cell_types.c_assert.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var argseq__8845__auto__ = new cljs.core.IndexedSeq(args11111.slice(2), 0);
      return tiltontec.rube.cell_types.c_assert.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__8845__auto__);
  }
};
tiltontec.rube.cell_types.c_assert.cljs$core$IFn$_invoke$arity$1 = function(assertion) {
  if (cljs.core.truth_(assertion)) {
    return null;
  } else {
    return tiltontec.rube.utility.err.call(null, "c-assert anon failed");
  }
};
tiltontec.rube.cell_types.c_assert.cljs$core$IFn$_invoke$arity$variadic = function(assertion, fmt$, fmt_args) {
  if (cljs.core.truth_(tiltontec.rube.cell_types._PLUS_stop_PLUS_)) {
    return null;
  } else {
    if (cljs.core.truth_(assertion)) {
      return null;
    } else {
      return cljs.core.apply.call(null, new cljs.core.Var(function() {
        return tiltontec.rube.utility.err;
      }, new cljs.core.Symbol("tiltontec.rube.utility", "err", "tiltontec.rube.utility/err", -262153442, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
      new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.utility", "tiltontec.rube.utility", -1470079531, null), new cljs.core.Symbol(null, "err", "err", -448925678, null), "src/tiltontec/rube/utility.cljc", 16, 3, 45, 45, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.utility.err) ? 
      tiltontec.rube.utility.err.cljs$lang$test : null])), [cljs.core.str("c-assert\x3e "), cljs.core.str(fmt$), cljs.core.str(fmt_args)].join(""));
    }
  }
};
tiltontec.rube.cell_types.c_assert.cljs$lang$applyTo = function(seq11112) {
  var G__11113 = cljs.core.first.call(null, seq11112);
  var seq11112__$1 = cljs.core.next.call(null, seq11112);
  var G__11114 = cljs.core.first.call(null, seq11112__$1);
  var seq11112__$2 = cljs.core.next.call(null, seq11112__$1);
  return tiltontec.rube.cell_types.c_assert.cljs$core$IFn$_invoke$arity$variadic(G__11113, G__11114, seq11112__$2);
};
tiltontec.rube.cell_types.c_assert.cljs$lang$maxFixedArity = 2;
tiltontec.rube.cell_types.c_break = function tiltontec$rube$cell_types$c_break() {
  var args__8833__auto__ = [];
  var len__8826__auto___11122 = arguments.length;
  var i__8827__auto___11123 = 0;
  while (true) {
    if (i__8827__auto___11123 < len__8826__auto___11122) {
      args__8833__auto__.push(arguments[i__8827__auto___11123]);
      var G__11124 = i__8827__auto___11123 + 1;
      i__8827__auto___11123 = G__11124;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 0 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(0), 0) : null;
  return tiltontec.rube.cell_types.c_break.cljs$core$IFn$_invoke$arity$variadic(argseq__8834__auto__);
};
tiltontec.rube.cell_types.c_break.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (cljs.core.truth_(tiltontec.rube.cell_types._PLUS_stop_PLUS_)) {
    return null;
  } else {
    return tiltontec.rube.utility.err.call(null, [cljs.core.str(args)].join(""));
  }
};
tiltontec.rube.cell_types.c_break.cljs$lang$maxFixedArity = 0;
tiltontec.rube.cell_types.c_break.cljs$lang$applyTo = function(seq11121) {
  return tiltontec.rube.cell_types.c_break.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq11121));
};
tiltontec.rube.cell_types.c_warn = function tiltontec$rube$cell_types$c_warn() {
  var args__8833__auto__ = [];
  var len__8826__auto___11126 = arguments.length;
  var i__8827__auto___11127 = 0;
  while (true) {
    if (i__8827__auto___11127 < len__8826__auto___11126) {
      args__8833__auto__.push(arguments[i__8827__auto___11127]);
      var G__11128 = i__8827__auto___11127 + 1;
      i__8827__auto___11127 = G__11128;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 0 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(0), 0) : null;
  return tiltontec.rube.cell_types.c_warn.cljs$core$IFn$_invoke$arity$variadic(argseq__8834__auto__);
};
tiltontec.rube.cell_types.c_warn.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (cljs.core.truth_(tiltontec.rube.cell_types._PLUS_stop_PLUS_)) {
    return null;
  } else {
    return cljs.core.println.call(null, cljs.core.apply.call(null, cljs.core.str, "WARNING: ", args));
  }
};
tiltontec.rube.cell_types.c_warn.cljs$lang$maxFixedArity = 0;
tiltontec.rube.cell_types.c_warn.cljs$lang$applyTo = function(seq11125) {
  return tiltontec.rube.cell_types.c_warn.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq11125));
};
if (typeof tiltontec.rube.cell_types.ia_types !== "undefined") {
} else {
  tiltontec.rube.cell_types.ia_types = cljs.core.derive.call(null, cljs.core.derive.call(null, cljs.core.derive.call(null, cljs.core.make_hierarchy.call(null), new cljs.core.Keyword("tiltontec.rube.cell-types", "model", "tiltontec.rube.cell-types/model", 1406839549), new cljs.core.Keyword("tiltontec.rube.cell-types", "object", "tiltontec.rube.cell-types/object", 402853503)), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610), new cljs.core.Keyword("tiltontec.rube.cell-types", 
  "object", "tiltontec.rube.cell-types/object", 402853503)), new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", -1677011786), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610));
}
tiltontec.rube.cell_types.ia_type_QMARK_ = function tiltontec$rube$cell_types$ia_type_QMARK_(it, typ) {
  return cljs.core.isa_QMARK_.call(null, tiltontec.rube.cell_types.ia_types, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, it)), typ);
};
tiltontec.rube.cell_types.c_formula_QMARK_ = function tiltontec$rube$cell_types$c_formula_QMARK_(c) {
  return tiltontec.rube.cell_types.ia_type_QMARK_.call(null, c, new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", -1677011786));
};
tiltontec.rube.cell_types.c_ref_QMARK_ = function tiltontec$rube$cell_types$c_ref_QMARK_(x) {
  return tiltontec.rube.cell_types.ia_type_QMARK_.call(null, x, new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610));
};
tiltontec.rube.cell_types.c_me = function tiltontec$rube$cell_types$c_me(ref) {
  return (new cljs.core.Keyword(null, "me", "me", -139006693)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.rube.cell_types.c_slot = function tiltontec$rube$cell_types$c_slot(ref) {
  return (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.rube.cell_types.c_state = function tiltontec$rube$cell_types$c_state(ref) {
  return (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.rube.cell_types.c_input_QMARK_ = function tiltontec$rube$cell_types$c_input_QMARK_(ref) {
  return (new cljs.core.Keyword(null, "input?", "input?", -1792843173)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.rube.cell_types.c_rule = function tiltontec$rube$cell_types$c_rule(ref) {
  return (new cljs.core.Keyword(null, "rule", "rule", 729973257)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.rube.cell_types.c_pulse = function tiltontec$rube$cell_types$c_pulse(ref) {
  return (new cljs.core.Keyword(null, "pulse", "pulse", -244494476)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.rube.cell_types.c_pulse_last_changed = function tiltontec$rube$cell_types$c_pulse_last_changed(ref) {
  return (new cljs.core.Keyword(null, "pulse-last-changed", "pulse-last-changed", 1035703380)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.rube.cell_types.c_pulse_observed = function tiltontec$rube$cell_types$c_pulse_observed(ref) {
  return (new cljs.core.Keyword(null, "pulse-observed", "pulse-observed", 595719633)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.rube.cell_types.c_useds = function tiltontec$rube$cell_types$c_useds(ref) {
  return (new cljs.core.Keyword(null, "useds", "useds", 621350967)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.rube.cell_types.c_users = function tiltontec$rube$cell_types$c_users(ref) {
  return (new cljs.core.Keyword(null, "users", "users", -713552705)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.rube.cell_types.c_callers = function tiltontec$rube$cell_types$c_callers(ref) {
  return (new cljs.core.Keyword(null, "callers", "callers", -1991542784)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.rube.cell_types.c_optimize = function tiltontec$rube$cell_types$c_optimize(ref) {
  return (new cljs.core.Keyword(null, "optimize", "optimize", -1912349448)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.rube.cell_types.c_ephemeral_QMARK_ = function tiltontec$rube$cell_types$c_ephemeral_QMARK_(ref) {
  return (new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.rube.cell_types.c_lazy = function tiltontec$rube$cell_types$c_lazy(ref) {
  return (new cljs.core.Keyword(null, "lazy", "lazy", -424547181)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.rube.cell_types.c_synaptic_QMARK_ = function tiltontec$rube$cell_types$c_synaptic_QMARK_(ref) {
  return (new cljs.core.Keyword(null, "synaptic?", "synaptic?", -2113061248)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.rube.cell_types.c_value = function tiltontec$rube$cell_types$c_value(c) {
  if (cljs.core.truth_(tiltontec.rube.utility.any_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  if (cljs.core.truth_(function() {
    var and__7775__auto__ = tiltontec.rube.cell_types.c_ref_QMARK_.call(null, c);
    if (cljs.core.truth_(and__7775__auto__)) {
      return cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, c));
    } else {
      return and__7775__auto__;
    }
  }())) {
    return (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c));
  } else {
    return cljs.core.deref.call(null, c);
  }
};
tiltontec.rube.cell_types.c_optimized_away_QMARK_ = function tiltontec$rube$cell_types$c_optimized_away_QMARK_(c) {
  if (cljs.core.truth_(tiltontec.rube.cell_types.c_ref_QMARK_.call(null, c))) {
    return !cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, c)) || cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "optimized-away", "optimized-away", 876765856), (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c)));
  } else {
    return true;
  }
};
tiltontec.rube.cell_types.c_model = function tiltontec$rube$cell_types$c_model(rc) {
  return (new cljs.core.Keyword(null, "me", "me", -139006693)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, rc));
};
tiltontec.rube.cell_types.c_slot_name = function tiltontec$rube$cell_types$c_slot_name(rc) {
  return (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, rc));
};
tiltontec.rube.cell_types.c_value_state = function tiltontec$rube$cell_types$c_value_state(rc) {
  var v = tiltontec.rube.cell_types.c_value.call(null, rc);
  if (cljs.core._EQ_.call(null, v, tiltontec.rube.cell_types.unbound)) {
    return new cljs.core.Keyword(null, "unbound", "unbound", -1366326654);
  } else {
    if (cljs.core._EQ_.call(null, v, tiltontec.rube.cell_types.uncurrent)) {
      return new cljs.core.Keyword(null, "uncurrent", "uncurrent", -217246265);
    } else {
      return new cljs.core.Keyword(null, "valid", "valid", 155614240);
    }
  }
};
tiltontec.rube.cell_types.c_unbound_QMARK_ = function tiltontec$rube$cell_types$c_unbound_QMARK_(rc) {
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654), tiltontec.rube.cell_types.c_value_state.call(null, rc));
};
tiltontec.rube.cell_types.c_valid_QMARK_ = function tiltontec$rube$cell_types$c_valid_QMARK_(rc) {
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "valid", "valid", 155614240), tiltontec.rube.cell_types.c_value_state.call(null, rc));
};
tiltontec.rube.cell_types.caller_ensure = function tiltontec$rube$cell_types$caller_ensure(used, new_caller) {
  return cljs.core.swap_BANG_.call(null, used, cljs.core.assoc, new cljs.core.Keyword(null, "callers", "callers", -1991542784), cljs.core.conj.call(null, tiltontec.rube.cell_types.c_callers.call(null, used), new_caller));
};
tiltontec.rube.cell_types.caller_drop = function tiltontec$rube$cell_types$caller_drop(used, caller) {
  return cljs.core.swap_BANG_.call(null, used, cljs.core.assoc, new cljs.core.Keyword(null, "callers", "callers", -1991542784), cljs.core.disj.call(null, tiltontec.rube.cell_types.c_callers.call(null, used), caller));
};
tiltontec.rube.cell_types.unlink_from_callers = function tiltontec$rube$cell_types$unlink_from_callers(c) {
  var iter__8540__auto___11137 = function tiltontec$rube$cell_types$unlink_from_callers_$_iter__11133(s__11134) {
    return new cljs.core.LazySeq(null, function() {
      var s__11134__$1 = s__11134;
      while (true) {
        var temp__4425__auto__ = cljs.core.seq.call(null, s__11134__$1);
        if (temp__4425__auto__) {
          var s__11134__$2 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__11134__$2)) {
            var c__8538__auto__ = cljs.core.chunk_first.call(null, s__11134__$2);
            var size__8539__auto__ = cljs.core.count.call(null, c__8538__auto__);
            var b__11136 = cljs.core.chunk_buffer.call(null, size__8539__auto__);
            if (function() {
              var i__11135 = 0;
              while (true) {
                if (i__11135 < size__8539__auto__) {
                  var caller = cljs.core._nth.call(null, c__8538__auto__, i__11135);
                  cljs.core.chunk_append.call(null, b__11136, tiltontec.rube.cell_types.caller_drop.call(null, c, caller));
                  var G__11138 = i__11135 + 1;
                  i__11135 = G__11138;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11136), tiltontec$rube$cell_types$unlink_from_callers_$_iter__11133.call(null, cljs.core.chunk_rest.call(null, s__11134__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11136), null);
            }
          } else {
            var caller = cljs.core.first.call(null, s__11134__$2);
            return cljs.core.cons.call(null, tiltontec.rube.cell_types.caller_drop.call(null, c, caller), tiltontec$rube$cell_types$unlink_from_callers_$_iter__11133.call(null, cljs.core.rest.call(null, s__11134__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  iter__8540__auto___11137.call(null, tiltontec.rube.cell_types.c_callers.call(null, c));
  return tiltontec.rube.utility.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "callers", "callers", -1991542784), c], null), null);
};
tiltontec.rube.cell_types.c_slots = function tiltontec$rube$cell_types$c_slots(c, k) {
  if (cljs.core.truth_(tiltontec.rube.cell_types.c_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  return cljs.core.set.call(null, cljs.core.map.call(null, tiltontec.rube.cell_types.c_slot, k.call(null, cljs.core.deref.call(null, c))));
};
tiltontec.rube.cell_types.md_ref_QMARK_ = function tiltontec$rube$cell_types$md_ref_QMARK_(x) {
  return x instanceof cljs.core.Atom;
};
if (typeof tiltontec.rube.cell_types.mdead_QMARK_ !== "undefined") {
} else {
  tiltontec.rube.cell_types.mdead_QMARK_ = function() {
    var method_table__8681__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__8682__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__8683__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__8684__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__8685__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.rube.cell-types", "mdead?"), function(method_table__8681__auto__, prefer_table__8682__auto__, method_cache__8683__auto__, cached_hierarchy__8684__auto__, hierarchy__8685__auto__) {
      return function(me) {
        if (cljs.core.truth_(function() {
          var or__7787__auto__ = me == null;
          if (or__7787__auto__) {
            return or__7787__auto__;
          } else {
            return tiltontec.rube.cell_types.md_ref_QMARK_.call(null, me);
          }
        }())) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)), cljs.core.list(new cljs.core.Symbol(null, "md-ref?", "md-ref?", 1571167727, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)))))].join(""));
        }
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.type.call(null, cljs.core.truth_(me) ? cljs.core.deref.call(null, me) : null)], null);
      };
    }(method_table__8681__auto__, prefer_table__8682__auto__, method_cache__8683__auto__, cached_hierarchy__8684__auto__, hierarchy__8685__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__8685__auto__, method_table__8681__auto__, prefer_table__8682__auto__, method_cache__8683__auto__, cached_hierarchy__8684__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.rube.cell_types.mdead_QMARK_, new cljs.core.Keyword(null, "default", "default", -1987822328), function(me) {
  return false;
});
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.rube.cell_types.md_slot_owning_QMARK_ = function tiltontec$rube$cell_types$md_slot_owning_QMARK_(class_name, slot_name) {
  return false;
};
tiltontec.rube.cell_types.type_isa_test = function tiltontec$rube$cell_types$type_isa_test() {
  return cljs.test.test_var.call(null, tiltontec$rube$cell_types$type_isa_test.cljs$lang$var);
};
tiltontec.rube.cell_types.type_isa_test.cljs$lang$test = function() {
  try {
    var values__10877__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", -1677011786)), tiltontec.rube.cell_types.ia_types);
    var result__10878__auto__ = cljs.core.apply.call(null, cljs.core.isa_QMARK_, values__10877__auto__);
    if (cljs.core.truth_(result__10878__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", 
      -1677011786), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.isa_QMARK_, values__10877__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", 
      -1677011786), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), values__10877__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], 
      null));
    }
    return result__10878__auto__;
  } catch (e11139) {
    var t__10915__auto__ = e11139;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", 
    -1677011786), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10915__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.cell_types.type_isa_test.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.cell_types.type_isa_test;
}, new cljs.core.Symbol("tiltontec.rube.cell-types", "type-isa-test", "tiltontec.rube.cell-types/type-isa-test", -715681057, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.cell-types", "tiltontec.rube.cell-types", -768487834, null), new cljs.core.Symbol(null, "type-isa-test", "type-isa-test", -1790163047, null), "src/tiltontec/rube/cell_types.cljc", 26, 4, 205, 205, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.cell_types.type_isa_test) ? tiltontec.rube.cell_types.type_isa_test.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env11140 = cljs.test.empty_env.call(null);
  var summary11141 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env11140, summary11141) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env11140);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.cell-types", "tiltontec.rube.cell-types", -768487834, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__10982__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10982__auto__, env11140, summary11141) {
          return function() {
            if (env__10982__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__10982__auto__, env11140, summary11141)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.rube.cell_types.type_isa_test;
        }, new cljs.core.Symbol("tiltontec.rube.cell-types", "type-isa-test", "tiltontec.rube.cell-types/type-isa-test", -715681057, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.cell-types", "tiltontec.rube.cell-types", -768487834, null), new cljs.core.Symbol(null, "type-isa-test", "type-isa-test", -1790163047, null), "src/tiltontec/rube/cell_types.cljc", 
        26, 4, 205, 205, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.cell_types.type_isa_test) ? tiltontec.rube.cell_types.type_isa_test.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10982__auto__, env11140, summary11141) {
          return function() {
            if (env__10982__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__10982__auto__, env11140, summary11141)], null));
      }());
    };
  }(env11140, summary11141), function(env11140, summary11141) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.cell-types", "tiltontec.rube.cell-types", -768487834, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env11140, summary11141)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env11140, summary11141) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary11141, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary11141), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env11140, summary11141)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env11140, summary11141) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env11140);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary11141));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary11141), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env11140, summary11141)], null));
}());
goog.provide("tiltontec.rube.integrity");
goog.require("cljs.core");
goog.require("tiltontec.rube.ut_macros");
goog.require("tiltontec.rube.utility");
goog.require("tiltontec.rube.cell_types");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.rube.integrity._STAR_one_pulse_QMARK__STAR_ = false;
tiltontec.rube.integrity._STAR_dp_log_STAR_ = false;
tiltontec.rube.integrity.data_pulse_next = function tiltontec$rube$integrity$data_pulse_next() {
  var args11144 = [];
  var len__8826__auto___11147 = arguments.length;
  var i__8827__auto___11148 = 0;
  while (true) {
    if (i__8827__auto___11148 < len__8826__auto___11147) {
      args11144.push(arguments[i__8827__auto___11148]);
      var G__11149 = i__8827__auto___11148 + 1;
      i__8827__auto___11148 = G__11149;
      continue;
    } else {
    }
    break;
  }
  var G__11146 = args11144.length;
  switch(G__11146) {
    case 0:
      return tiltontec.rube.integrity.data_pulse_next.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return tiltontec.rube.integrity.data_pulse_next.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11144.length)].join(""));;
  }
};
tiltontec.rube.integrity.data_pulse_next.cljs$core$IFn$_invoke$arity$0 = function() {
  return tiltontec.rube.integrity.data_pulse_next.call(null, new cljs.core.Keyword(null, "anon", "anon", -765650478));
};
tiltontec.rube.integrity.data_pulse_next.cljs$core$IFn$_invoke$arity$1 = function(pulse_info) {
  if (cljs.core.truth_(tiltontec.rube.integrity._STAR_one_pulse_QMARK__STAR_)) {
    return null;
  } else {
    if (cljs.core.truth_(tiltontec.rube.integrity._STAR_dp_log_STAR_)) {
      tiltontec.rube.ut_macros.call_trc.call(null, "dp-next\x3e ", cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_pulse_PLUS_) + 1, pulse_info);
    } else {
    }
    return cljs.core.swap_BANG_.call(null, tiltontec.rube.cell_types._PLUS_pulse_PLUS_, cljs.core.inc);
  }
};
tiltontec.rube.integrity.data_pulse_next.cljs$lang$maxFixedArity = 1;
tiltontec.rube.integrity.c_current_QMARK_ = function tiltontec$rube$integrity$c_current_QMARK_(c) {
  return cljs.core._EQ_.call(null, tiltontec.rube.cell_types.c_pulse.call(null, c), cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_pulse_PLUS_));
};
tiltontec.rube.integrity.c_pulse_update = function tiltontec$rube$integrity$c_pulse_update(c, key) {
  if (cljs.core.truth_(tiltontec.rube.cell_types.c_optimized_away_QMARK_.call(null, c))) {
    return null;
  } else {
    if (cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_pulse_PLUS_) >= tiltontec.rube.cell_types.c_pulse.call(null, c)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e\x3d", "\x3e\x3d", 1016916022, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)))))].join(""));
    }
    return cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "pulse", "pulse", -244494476), cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_pulse_PLUS_));
  }
};
tiltontec.rube.integrity._PLUS_ufb_opcodes_PLUS_ = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388), new cljs.core.Keyword(null, "awaken", "awaken", -1899628152), new cljs.core.Keyword(null, "client", "client", -1323448117), new cljs.core.Keyword(null, "ephemeral-reset", "ephemeral-reset", -1442676603), new cljs.core.Keyword(null, "change", "change", -1163046502)], null);
tiltontec.rube.integrity.unfin_biz = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
  var iter__8540__auto__ = function tiltontec$rube$integrity$iter__11151(s__11152) {
    return new cljs.core.LazySeq(null, function() {
      var s__11152__$1 = s__11152;
      while (true) {
        var temp__4425__auto__ = cljs.core.seq.call(null, s__11152__$1);
        if (temp__4425__auto__) {
          var s__11152__$2 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__11152__$2)) {
            var c__8538__auto__ = cljs.core.chunk_first.call(null, s__11152__$2);
            var size__8539__auto__ = cljs.core.count.call(null, c__8538__auto__);
            var b__11154 = cljs.core.chunk_buffer.call(null, size__8539__auto__);
            if (function() {
              var i__11153 = 0;
              while (true) {
                if (i__11153 < size__8539__auto__) {
                  var i = cljs.core._nth.call(null, c__8538__auto__, i__11153);
                  cljs.core.chunk_append.call(null, b__11154, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY)], null));
                  var G__11155 = i__11153 + 1;
                  i__11153 = G__11155;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11154), tiltontec$rube$integrity$iter__11151.call(null, cljs.core.chunk_rest.call(null, s__11152__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11154), null);
            }
          } else {
            var i = cljs.core.first.call(null, s__11152__$2);
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i, cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY)], null), tiltontec$rube$integrity$iter__11151.call(null, cljs.core.rest.call(null, s__11152__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  return iter__8540__auto__.call(null, tiltontec.rube.integrity._PLUS_ufb_opcodes_PLUS_);
}());
tiltontec.rube.integrity.ufb_queue = function tiltontec$rube$integrity$ufb_queue(opcode) {
  var or__7787__auto__ = opcode.call(null, tiltontec.rube.integrity.unfin_biz);
  if (cljs.core.truth_(or__7787__auto__)) {
    return or__7787__auto__;
  } else {
    return tiltontec.rube.utility.err.call(null, [cljs.core.str("ufb-queue\x3e opcode unknown: "), cljs.core.str(opcode)].join(""));
  }
};
tiltontec.rube.integrity.ufb_queue_ensure = function tiltontec$rube$integrity$ufb_queue_ensure(opcode) {
  return tiltontec.rube.integrity.ufb_queue.call(null, opcode);
};
tiltontec.rube.integrity.ufb_add = function tiltontec$rube$integrity$ufb_add(opcode, continuation) {
  return tiltontec.rube.utility.fifo_add.call(null, tiltontec.rube.integrity.ufb_queue_ensure.call(null, opcode), continuation);
};
tiltontec.rube.integrity.ufb_assert_q_empty = function tiltontec$rube$integrity$ufb_assert_q_empty(opcode) {
  var temp__4423__auto__ = tiltontec.rube.utility.fifo_peek.call(null, tiltontec.rube.integrity.ufb_queue_ensure.call(null, opcode));
  if (cljs.core.truth_(temp__4423__auto__)) {
    var uqp = temp__4423__auto__;
    return tiltontec.rube.utility.err.call(null, [cljs.core.str("ufb queue %s not empty, viz %s"), cljs.core.str(opcode), cljs.core.str(uqp)].join(""));
  } else {
    return true;
  }
};
tiltontec.rube.integrity._STAR_ufb_do_q_STAR_ = null;
tiltontec.rube.integrity.ufb_do = function tiltontec$rube$integrity$ufb_do() {
  var args11156 = [];
  var len__8826__auto___11160 = arguments.length;
  var i__8827__auto___11161 = 0;
  while (true) {
    if (i__8827__auto___11161 < len__8826__auto___11160) {
      args11156.push(arguments[i__8827__auto___11161]);
      var G__11162 = i__8827__auto___11161 + 1;
      i__8827__auto___11161 = G__11162;
      continue;
    } else {
    }
    break;
  }
  var G__11158 = args11156.length;
  switch(G__11158) {
    case 1:
      return tiltontec.rube.integrity.ufb_do.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return tiltontec.rube.integrity.ufb_do.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11156.length)].join(""));;
  }
};
tiltontec.rube.integrity.ufb_do.cljs$core$IFn$_invoke$arity$1 = function(opcode) {
  return tiltontec.rube.integrity.ufb_do.call(null, tiltontec.rube.integrity.ufb_queue.call(null, opcode), opcode);
};
tiltontec.rube.integrity.ufb_do.cljs$core$IFn$_invoke$arity$2 = function(q, opcode) {
  while (true) {
    var temp__4425__auto__ = tiltontec.rube.utility.fifo_pop.call(null, q);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var vec__11159 = temp__4425__auto__;
      var defer_info = cljs.core.nth.call(null, vec__11159, 0, null);
      var task = cljs.core.nth.call(null, vec__11159, 1, null);
      tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "ufb-do-yep", "ufb-do-yep", -2077548937), defer_info, task);
      task.call(null, opcode, defer_info);
      var G__11164 = q;
      var G__11165 = opcode;
      q = G__11164;
      opcode = G__11165;
      continue;
    } else {
      return null;
    }
    break;
  }
};
tiltontec.rube.integrity.ufb_do.cljs$lang$maxFixedArity = 2;
tiltontec.rube.integrity.finish_business = function tiltontec$rube$integrity$finish_business() {
  if (cljs.core.truth_(cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_stop_PLUS_))) {
    return null;
  } else {
    var tag = new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388);
    while (true) {
      var G__11168 = tag instanceof cljs.core.Keyword ? tag.fqn : null;
      switch(G__11168) {
        case "tell-dependents":
          tiltontec.rube.integrity.ufb_do.call(null, new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388));
          tiltontec.rube.integrity.ufb_do.call(null, new cljs.core.Keyword(null, "awaken", "awaken", -1899628152));
          var G__11171 = cljs.core.truth_(tiltontec.rube.utility.fifo_peek.call(null, tiltontec.rube.integrity.ufb_queue_ensure.call(null, new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388)))) ? new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388) : new cljs.core.Keyword(null, "handle-clients", "handle-clients", -1446571173);
          tag = G__11171;
          continue;
          break;
        case "handle-clients":
          var temp__4425__auto__ = tiltontec.rube.integrity.ufb_queue.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117));
          if (cljs.core.truth_(temp__4425__auto__)) {
            var clientq = temp__4425__auto__;
            var temp__4423__auto___11172 = cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_client_q_handler_PLUS_);
            if (cljs.core.truth_(temp__4423__auto___11172)) {
              var cqh_11173 = temp__4423__auto___11172;
              cqh_11173.call(null, clientq);
            } else {
              tiltontec.rube.integrity.ufb_do.call(null, clientq, new cljs.core.Keyword(null, "client", "client", -1323448117));
            }
            var G__11174 = cljs.core.truth_(tiltontec.rube.utility.fifo_peek.call(null, tiltontec.rube.integrity.ufb_queue.call(null, new cljs.core.Keyword(null, "client", "client", -1323448117)))) ? new cljs.core.Keyword(null, "handle-clients", "handle-clients", -1446571173) : new cljs.core.Keyword(null, "ephemeral-reset", "ephemeral-reset", -1442676603);
            tag = G__11174;
            continue;
          } else {
            return null;
          }
          break;
        case "ephemeral-reset":
          tiltontec.rube.integrity.ufb_do.call(null, new cljs.core.Keyword(null, "ephemeral-reset", "ephemeral-reset", -1442676603));
          var G__11175 = new cljs.core.Keyword(null, "deferred-state-change", "deferred-state-change", -1362791478);
          tag = G__11175;
          continue;
          break;
        case "deferred-state-change":
          var temp__4425__auto__ = tiltontec.rube.utility.fifo_pop.call(null, tiltontec.rube.integrity.ufb_queue.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502)));
          if (cljs.core.truth_(temp__4425__auto__)) {
            var vec__11169 = temp__4425__auto__;
            var defer_info = cljs.core.nth.call(null, vec__11169, 0, null);
            var task_fn = cljs.core.nth.call(null, vec__11169, 1, null);
            tiltontec.rube.integrity.data_pulse_next.call(null, new cljs.core.Keyword(null, "def-state-chg", "def-state-chg", 1797246466));
            task_fn.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502), defer_info);
            var G__11176 = new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388);
            tag = G__11176;
            continue;
          } else {
            return null;
          }
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(tag)].join(""));;
      }
      break;
    }
  }
};
tiltontec.rube.integrity.with_integrity = function tiltontec$rube$integrity$with_integrity() {
  var args__8833__auto__ = [];
  var len__8826__auto___11183 = arguments.length;
  var i__8827__auto___11184 = 0;
  while (true) {
    if (i__8827__auto___11184 < len__8826__auto___11183) {
      args__8833__auto__.push(arguments[i__8827__auto___11184]);
      var G__11185 = i__8827__auto___11184 + 1;
      i__8827__auto___11184 = G__11185;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 3 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(3), 0) : null;
  return tiltontec.rube.integrity.with_integrity.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__8834__auto__);
};
tiltontec.rube.integrity.with_integrity.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__11181, body) {
  var vec__11182 = p__11181;
  var opcode = cljs.core.nth.call(null, vec__11182, 0, null);
  var info = cljs.core.nth.call(null, vec__11182, 1, null);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.integrity", "call-with-integrity", "tiltontec.rube.integrity/call-with-integrity", -1820377119, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, opcode), cljs.core._conj.call(null, cljs.core.List.EMPTY, info), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "opcode", "opcode", 311089360, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "defer-info", "defer-info", 
  -446799704, null))))))), body)))))));
};
tiltontec.rube.integrity.with_integrity.cljs$lang$maxFixedArity = 3;
tiltontec.rube.integrity.with_integrity.cljs$lang$applyTo = function(seq11177) {
  var G__11178 = cljs.core.first.call(null, seq11177);
  var seq11177__$1 = cljs.core.next.call(null, seq11177);
  var G__11179 = cljs.core.first.call(null, seq11177__$1);
  var seq11177__$2 = cljs.core.next.call(null, seq11177__$1);
  var G__11180 = cljs.core.first.call(null, seq11177__$2);
  var seq11177__$3 = cljs.core.next.call(null, seq11177__$2);
  return tiltontec.rube.integrity.with_integrity.cljs$core$IFn$_invoke$arity$variadic(G__11178, G__11179, G__11180, seq11177__$3);
};
tiltontec.rube.integrity.with_integrity.cljs$lang$macro = true;
tiltontec.rube.integrity.with_cc = function tiltontec$rube$integrity$with_cc(_AMPERSAND_form, _AMPERSAND_env, id, _AMPERSAND_body, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.integrity", "with-integrity", "tiltontec.rube.integrity/with-integrity", -384725740, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "change", "change", -1163046502)), 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, id))))), body)));
};
tiltontec.rube.integrity.with_cc.cljs$lang$macro = true;
tiltontec.rube.integrity.without_integrity = function tiltontec$rube$integrity$without_integrity() {
  var args__8833__auto__ = [];
  var len__8826__auto___11189 = arguments.length;
  var i__8827__auto___11190 = 0;
  while (true) {
    if (i__8827__auto___11190 < len__8826__auto___11189) {
      args__8833__auto__.push(arguments[i__8827__auto___11190]);
      var G__11191 = i__8827__auto___11190 + 1;
      i__8827__auto___11190 = G__11191;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 2 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(2), 0) : null;
  return tiltontec.rube.integrity.without_integrity.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__8834__auto__);
};
tiltontec.rube.integrity.without_integrity.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "binding", "cljs.core/binding", 2050379843, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cell-types", "*within-integrity*", 
  "tiltontec.rube.cell-types/*within-integrity*", -1748587954, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, false), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cell-types", "*defer-changes*", "tiltontec.rube.cell-types/*defer-changes*", 1359484974, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, false), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.integrity", "*call-stack*", "tiltontec.rube.integrity/*call-stack*", 
  -1578664144, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.List.EMPTY)))))))))), body)));
};
tiltontec.rube.integrity.without_integrity.cljs$lang$maxFixedArity = 2;
tiltontec.rube.integrity.without_integrity.cljs$lang$applyTo = function(seq11186) {
  var G__11187 = cljs.core.first.call(null, seq11186);
  var seq11186__$1 = cljs.core.next.call(null, seq11186);
  var G__11188 = cljs.core.first.call(null, seq11186__$1);
  var seq11186__$2 = cljs.core.next.call(null, seq11186__$1);
  return tiltontec.rube.integrity.without_integrity.cljs$core$IFn$_invoke$arity$variadic(G__11187, G__11188, seq11186__$2);
};
tiltontec.rube.integrity.without_integrity.cljs$lang$macro = true;
tiltontec.rube.integrity.call_with_integrity = function tiltontec$rube$integrity$call_with_integrity(opcode, defer_info, action) {
  if (cljs.core.truth_(opcode)) {
    if (cljs.core.truth_(tiltontec.rube.utility.cl_find.call(null, opcode, tiltontec.rube.integrity._PLUS_ufb_opcodes_PLUS_))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("Invalid opcode for with-integrity: %s. Allowed values: %s"), cljs.core.str(opcode), cljs.core.str(tiltontec.rube.integrity._PLUS_ufb_opcodes_PLUS_)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "cl-find", "cl-find", -402244315, null), new cljs.core.Symbol(null, "opcode", "opcode", 311089360, null), new cljs.core.Symbol(null, "+ufb-opcodes+", 
      "+ufb-opcodes+", -1562699838, null))))].join(""));
    }
  } else {
  }
  if (cljs.core.truth_(cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_stop_PLUS_))) {
    return null;
  } else {
    if (cljs.core.truth_(tiltontec.rube.cell_types.c_stopped.call(null))) {
      return cljs.core.println.call(null, new cljs.core.Keyword(null, "cwi-sees-stop!!!!!!!!!!!", "cwi-sees-stop!!!!!!!!!!!", -1009254623));
    } else {
      if (cljs.core.truth_(tiltontec.rube.cell_types._STAR_within_integrity_STAR_)) {
        if (cljs.core.truth_(opcode)) {
          var result__5566__auto__ = new cljs.core.Keyword(null, "deferred-to-ufb-1", "deferred-to-ufb-1", -1094275721);
          tiltontec.rube.integrity.ufb_add.call(null, opcode, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [defer_info, action], null));
          return result__5566__auto__;
        } else {
          return action.call(null, opcode, defer_info);
        }
      } else {
        var _STAR_within_integrity_STAR_11194 = tiltontec.rube.cell_types._STAR_within_integrity_STAR_;
        var _STAR_defer_changes_STAR_11195 = tiltontec.rube.cell_types._STAR_defer_changes_STAR_;
        tiltontec.rube.cell_types._STAR_within_integrity_STAR_ = true;
        tiltontec.rube.cell_types._STAR_defer_changes_STAR_ = false;
        try {
          if (cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_pulse_PLUS_) === 0 || cljs.core._EQ_.call(null, opcode, new cljs.core.Keyword(null, "change", "change", -1163046502))) {
            tiltontec.rube.integrity.data_pulse_next.call(null, new cljs.core.Keyword(null, "cwi", "cwi", 1748296377));
          } else {
          }
          var result__5566__auto__ = action.call(null, opcode, defer_info);
          tiltontec.rube.integrity.finish_business.call(null);
          tiltontec.rube.integrity.ufb_assert_q_empty.call(null, new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388));
          tiltontec.rube.integrity.ufb_assert_q_empty.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502));
          return result__5566__auto__;
        } finally {
          tiltontec.rube.cell_types._STAR_defer_changes_STAR_ = _STAR_defer_changes_STAR_11195;
          tiltontec.rube.cell_types._STAR_within_integrity_STAR_ = _STAR_within_integrity_STAR_11194;
        }
      }
    }
  }
};
goog.provide("clojure.set");
goog.require("cljs.core");
clojure.set.bubble_max_key = function clojure$set$bubble_max_key(k, coll) {
  var max = cljs.core.apply.call(null, cljs.core.max_key, k, coll);
  return cljs.core.cons.call(null, max, cljs.core.remove.call(null, function(max) {
    return function(p1__13064_SHARP_) {
      return max === p1__13064_SHARP_;
    };
  }(max), coll));
};
clojure.set.union = function clojure$set$union() {
  var args13065 = [];
  var len__5632__auto___13071 = arguments.length;
  var i__5633__auto___13072 = 0;
  while (true) {
    if (i__5633__auto___13072 < len__5632__auto___13071) {
      args13065.push(arguments[i__5633__auto___13072]);
      var G__13073 = i__5633__auto___13072 + 1;
      i__5633__auto___13072 = G__13073;
      continue;
    } else {
    }
    break;
  }
  var G__13070 = args13065.length;
  switch(G__13070) {
    case 0:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.union.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5651__auto__ = new cljs.core.IndexedSeq(args13065.slice(2), 0);
      return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5651__auto__);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.union.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
    return cljs.core.reduce.call(null, cljs.core.conj, s2, s1);
  } else {
    return cljs.core.reduce.call(null, cljs.core.conj, s1, s2);
  }
};
clojure.set.union.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key.call(null, cljs.core.count, cljs.core.conj.call(null, sets, s2, s1));
  return cljs.core.reduce.call(null, cljs.core.into, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
};
clojure.set.union.cljs$lang$applyTo = function(seq13066) {
  var G__13067 = cljs.core.first.call(null, seq13066);
  var seq13066__$1 = cljs.core.next.call(null, seq13066);
  var G__13068 = cljs.core.first.call(null, seq13066__$1);
  var seq13066__$2 = cljs.core.next.call(null, seq13066__$1);
  return clojure.set.union.cljs$core$IFn$_invoke$arity$variadic(G__13067, G__13068, seq13066__$2);
};
clojure.set.union.cljs$lang$maxFixedArity = 2;
clojure.set.intersection = function clojure$set$intersection() {
  var args13076 = [];
  var len__5632__auto___13082 = arguments.length;
  var i__5633__auto___13083 = 0;
  while (true) {
    if (i__5633__auto___13083 < len__5632__auto___13082) {
      args13076.push(arguments[i__5633__auto___13083]);
      var G__13084 = i__5633__auto___13083 + 1;
      i__5633__auto___13083 = G__13084;
      continue;
    } else {
    }
    break;
  }
  var G__13081 = args13076.length;
  switch(G__13081) {
    case 1:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5651__auto__ = new cljs.core.IndexedSeq(args13076.slice(2), 0);
      return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5651__auto__);
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  while (true) {
    if (cljs.core.count.call(null, s2) < cljs.core.count.call(null, s1)) {
      var G__13086 = s2;
      var G__13087 = s1;
      s1 = G__13086;
      s2 = G__13087;
      continue;
    } else {
      return cljs.core.reduce.call(null, function(s1, s2) {
        return function(result, item) {
          if (cljs.core.contains_QMARK_.call(null, s2, item)) {
            return result;
          } else {
            return cljs.core.disj.call(null, result, item);
          }
        };
      }(s1, s2), s1, s1);
    }
    break;
  }
};
clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  var bubbled_sets = clojure.set.bubble_max_key.call(null, function(p1__13075_SHARP_) {
    return -cljs.core.count.call(null, p1__13075_SHARP_);
  }, cljs.core.conj.call(null, sets, s2, s1));
  return cljs.core.reduce.call(null, clojure.set.intersection, cljs.core.first.call(null, bubbled_sets), cljs.core.rest.call(null, bubbled_sets));
};
clojure.set.intersection.cljs$lang$applyTo = function(seq13077) {
  var G__13078 = cljs.core.first.call(null, seq13077);
  var seq13077__$1 = cljs.core.next.call(null, seq13077);
  var G__13079 = cljs.core.first.call(null, seq13077__$1);
  var seq13077__$2 = cljs.core.next.call(null, seq13077__$1);
  return clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic(G__13078, G__13079, seq13077__$2);
};
clojure.set.intersection.cljs$lang$maxFixedArity = 2;
clojure.set.difference = function clojure$set$difference() {
  var args13088 = [];
  var len__5632__auto___13094 = arguments.length;
  var i__5633__auto___13095 = 0;
  while (true) {
    if (i__5633__auto___13095 < len__5632__auto___13094) {
      args13088.push(arguments[i__5633__auto___13095]);
      var G__13096 = i__5633__auto___13095 + 1;
      i__5633__auto___13095 = G__13096;
      continue;
    } else {
    }
    break;
  }
  var G__13093 = args13088.length;
  switch(G__13093) {
    case 1:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var argseq__5651__auto__ = new cljs.core.IndexedSeq(args13088.slice(2), 0);
      return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__5651__auto__);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$1 = function(s1) {
  return s1;
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$2 = function(s1, s2) {
  if (cljs.core.count.call(null, s1) < cljs.core.count.call(null, s2)) {
    return cljs.core.reduce.call(null, function(result, item) {
      if (cljs.core.contains_QMARK_.call(null, s2, item)) {
        return cljs.core.disj.call(null, result, item);
      } else {
        return result;
      }
    }, s1, s1);
  } else {
    return cljs.core.reduce.call(null, cljs.core.disj, s1, s2);
  }
};
clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic = function(s1, s2, sets) {
  return cljs.core.reduce.call(null, clojure.set.difference, s1, cljs.core.conj.call(null, sets, s2));
};
clojure.set.difference.cljs$lang$applyTo = function(seq13089) {
  var G__13090 = cljs.core.first.call(null, seq13089);
  var seq13089__$1 = cljs.core.next.call(null, seq13089);
  var G__13091 = cljs.core.first.call(null, seq13089__$1);
  var seq13089__$2 = cljs.core.next.call(null, seq13089__$1);
  return clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic(G__13090, G__13091, seq13089__$2);
};
clojure.set.difference.cljs$lang$maxFixedArity = 2;
clojure.set.select = function clojure$set$select(pred, xset) {
  return cljs.core.reduce.call(null, function(s, k) {
    if (cljs.core.truth_(pred.call(null, k))) {
      return s;
    } else {
      return cljs.core.disj.call(null, s, k);
    }
  }, xset, xset);
};
clojure.set.project = function clojure$set$project(xrel, ks) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__13098_SHARP_) {
    return cljs.core.select_keys.call(null, p1__13098_SHARP_, ks);
  }, xrel));
};
clojure.set.rename_keys = function clojure$set$rename_keys(map, kmap) {
  return cljs.core.reduce.call(null, function(m, p__13101) {
    var vec__13102 = p__13101;
    var old = cljs.core.nth.call(null, vec__13102, 0, null);
    var new$ = cljs.core.nth.call(null, vec__13102, 1, null);
    if (cljs.core.contains_QMARK_.call(null, map, old)) {
      return cljs.core.assoc.call(null, m, new$, cljs.core.get.call(null, map, old));
    } else {
      return m;
    }
  }, cljs.core.apply.call(null, cljs.core.dissoc, map, cljs.core.keys.call(null, kmap)), kmap);
};
clojure.set.rename = function clojure$set$rename(xrel, kmap) {
  return cljs.core.set.call(null, cljs.core.map.call(null, function(p1__13103_SHARP_) {
    return clojure.set.rename_keys.call(null, p1__13103_SHARP_, kmap);
  }, xrel));
};
clojure.set.index = function clojure$set$index(xrel, ks) {
  return cljs.core.reduce.call(null, function(m, x) {
    var ik = cljs.core.select_keys.call(null, x, ks);
    return cljs.core.assoc.call(null, m, ik, cljs.core.conj.call(null, cljs.core.get.call(null, m, ik, cljs.core.PersistentHashSet.EMPTY), x));
  }, cljs.core.PersistentArrayMap.EMPTY, xrel);
};
clojure.set.map_invert = function clojure$set$map_invert(m) {
  return cljs.core.reduce.call(null, function(m__$1, p__13106) {
    var vec__13107 = p__13106;
    var k = cljs.core.nth.call(null, vec__13107, 0, null);
    var v = cljs.core.nth.call(null, vec__13107, 1, null);
    return cljs.core.assoc.call(null, m__$1, v, k);
  }, cljs.core.PersistentArrayMap.EMPTY, m);
};
clojure.set.join = function clojure$set$join() {
  var args13112 = [];
  var len__5632__auto___13117 = arguments.length;
  var i__5633__auto___13118 = 0;
  while (true) {
    if (i__5633__auto___13118 < len__5632__auto___13117) {
      args13112.push(arguments[i__5633__auto___13118]);
      var G__13119 = i__5633__auto___13118 + 1;
      i__5633__auto___13118 = G__13119;
      continue;
    } else {
    }
    break;
  }
  var G__13114 = args13112.length;
  switch(G__13114) {
    case 2:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.set.join.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args13112.length)].join(""));;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$2 = function(xrel, yrel) {
  if (cljs.core.seq.call(null, xrel) && cljs.core.seq.call(null, yrel)) {
    var ks = clojure.set.intersection.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, xrel))), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, yrel))));
    var vec__13115 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel], null);
    var r = cljs.core.nth.call(null, vec__13115, 0, null);
    var s = cljs.core.nth.call(null, vec__13115, 1, null);
    var idx = clojure.set.index.call(null, r, ks);
    return cljs.core.reduce.call(null, function(ks, vec__13115, r, s, idx) {
      return function(ret, x) {
        var found = idx.call(null, cljs.core.select_keys.call(null, x, ks));
        if (cljs.core.truth_(found)) {
          return cljs.core.reduce.call(null, function(found, ks, vec__13115, r, s, idx) {
            return function(p1__13108_SHARP_, p2__13109_SHARP_) {
              return cljs.core.conj.call(null, p1__13108_SHARP_, cljs.core.merge.call(null, p2__13109_SHARP_, x));
            };
          }(found, ks, vec__13115, r, s, idx), ret, found);
        } else {
          return ret;
        }
      };
    }(ks, vec__13115, r, s, idx), cljs.core.PersistentHashSet.EMPTY, s);
  } else {
    return cljs.core.PersistentHashSet.EMPTY;
  }
};
clojure.set.join.cljs$core$IFn$_invoke$arity$3 = function(xrel, yrel, km) {
  var vec__13116 = cljs.core.count.call(null, xrel) <= cljs.core.count.call(null, yrel) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel, yrel, clojure.set.map_invert.call(null, km)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel, xrel, km], null);
  var r = cljs.core.nth.call(null, vec__13116, 0, null);
  var s = cljs.core.nth.call(null, vec__13116, 1, null);
  var k = cljs.core.nth.call(null, vec__13116, 2, null);
  var idx = clojure.set.index.call(null, r, cljs.core.vals.call(null, k));
  return cljs.core.reduce.call(null, function(vec__13116, r, s, k, idx) {
    return function(ret, x) {
      var found = idx.call(null, clojure.set.rename_keys.call(null, cljs.core.select_keys.call(null, x, cljs.core.keys.call(null, k)), k));
      if (cljs.core.truth_(found)) {
        return cljs.core.reduce.call(null, function(found, vec__13116, r, s, k, idx) {
          return function(p1__13110_SHARP_, p2__13111_SHARP_) {
            return cljs.core.conj.call(null, p1__13110_SHARP_, cljs.core.merge.call(null, p2__13111_SHARP_, x));
          };
        }(found, vec__13116, r, s, k, idx), ret, found);
      } else {
        return ret;
      }
    };
  }(vec__13116, r, s, k, idx), cljs.core.PersistentHashSet.EMPTY, s);
};
clojure.set.join.cljs$lang$maxFixedArity = 3;
clojure.set.subset_QMARK_ = function clojure$set$subset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) <= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__13121_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set2, p1__13121_SHARP_);
  }, set1);
};
clojure.set.superset_QMARK_ = function clojure$set$superset_QMARK_(set1, set2) {
  return cljs.core.count.call(null, set1) >= cljs.core.count.call(null, set2) && cljs.core.every_QMARK_.call(null, function(p1__13122_SHARP_) {
    return cljs.core.contains_QMARK_.call(null, set1, p1__13122_SHARP_);
  }, set2);
};
goog.provide("tiltontec.rube.observer");
goog.require("cljs.core");
goog.require("tiltontec.rube.ut_macros");
goog.require("tiltontec.rube.utility");
goog.require("tiltontec.rube.cell_types");
tiltontec.rube.observer.type_cljc = function tiltontec$rube$observer$type_cljc(x) {
  var or__7787__auto__ = function() {
    var temp__4425__auto__ = cljs.core.meta.call(null, x);
    if (cljs.core.truth_(temp__4425__auto__)) {
      var m = temp__4425__auto__;
      return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m);
    } else {
      return null;
    }
  }();
  if (cljs.core.truth_(or__7787__auto__)) {
    return or__7787__auto__;
  } else {
    return cljs.core.type.call(null, x);
  }
};
if (typeof tiltontec.rube.observer.observe !== "undefined") {
} else {
  tiltontec.rube.observer.observe = function() {
    var method_table__8681__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__8682__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__8683__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__8684__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__8685__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.rube.observer", "observe"), function(method_table__8681__auto__, prefer_table__8682__auto__, method_cache__8683__auto__, cached_hierarchy__8684__auto__, hierarchy__8685__auto__) {
      return function(slot_name, me, new_val, old_val, c) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot_name, tiltontec.rube.observer.type_cljc.call(null, me)], null);
      };
    }(method_table__8681__auto__, prefer_table__8682__auto__, method_cache__8683__auto__, cached_hierarchy__8684__auto__, hierarchy__8685__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__8685__auto__, method_table__8681__auto__, prefer_table__8682__auto__, method_cache__8683__auto__, cached_hierarchy__8684__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.rube.observer.observe, new cljs.core.Keyword(null, "default", "default", -1987822328), function(slot, me, new_val, old_val, c) {
  return null;
});
tiltontec.rube.observer.defobserver = function tiltontec$rube$observer$defobserver() {
  var args__8833__auto__ = [];
  var len__8826__auto___11204 = arguments.length;
  var i__8827__auto___11205 = 0;
  while (true) {
    if (i__8827__auto___11205 < len__8826__auto___11204) {
      args__8833__auto__.push(arguments[i__8827__auto___11205]);
      var G__11206 = i__8827__auto___11205 + 1;
      i__8827__auto___11205 = G__11206;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 5 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(5), 0) : null;
  return tiltontec.rube.observer.defobserver.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__8834__auto__);
};
tiltontec.rube.observer.defobserver.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, slot, types, params, body) {
  if (slot instanceof cljs.core.Keyword) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("defobserver\x3e slot should be a keyword."), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "slot", "slot", 1880761098, null))))].join(""));
  }
  var ftypes = cljs.core.concat.call(null, types, cljs.core.take_last.call(null, 1 - cljs.core.count.call(null, types), cljs.core.list(new cljs.core.Keyword("tiltontec.rube.cell-types", "model", "tiltontec.rube.cell-types/model", 1406839549))));
  var fparams = cljs.core.concat.call(null, params, cljs.core.take_last.call(null, 4 - cljs.core.count.call(null, params), cljs.core.list(new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null), new cljs.core.Symbol(null, "old-value", "old-value", -1791888974, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))));
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "defmethod", "cljs.core/defmethod", -180785162, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.observer", "observe", "tiltontec.rube.observer/observe", -1048914573, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, slot), ftypes))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "slot", "slot", 1880761098, null)), fparams))))), body)));
};
tiltontec.rube.observer.defobserver.cljs$lang$maxFixedArity = 5;
tiltontec.rube.observer.defobserver.cljs$lang$applyTo = function(seq11198) {
  var G__11199 = cljs.core.first.call(null, seq11198);
  var seq11198__$1 = cljs.core.next.call(null, seq11198);
  var G__11200 = cljs.core.first.call(null, seq11198__$1);
  var seq11198__$2 = cljs.core.next.call(null, seq11198__$1);
  var G__11201 = cljs.core.first.call(null, seq11198__$2);
  var seq11198__$3 = cljs.core.next.call(null, seq11198__$2);
  var G__11202 = cljs.core.first.call(null, seq11198__$3);
  var seq11198__$4 = cljs.core.next.call(null, seq11198__$3);
  var G__11203 = cljs.core.first.call(null, seq11198__$4);
  var seq11198__$5 = cljs.core.next.call(null, seq11198__$4);
  return tiltontec.rube.observer.defobserver.cljs$core$IFn$_invoke$arity$variadic(G__11199, G__11200, G__11201, G__11202, G__11203, seq11198__$5);
};
tiltontec.rube.observer.defobserver.cljs$lang$macro = true;
tiltontec.rube.observer.fn_obs = function tiltontec$rube$observer$fn_obs() {
  var args__8833__auto__ = [];
  var len__8826__auto___11210 = arguments.length;
  var i__8827__auto___11211 = 0;
  while (true) {
    if (i__8827__auto___11211 < len__8826__auto___11210) {
      args__8833__auto__.push(arguments[i__8827__auto___11211]);
      var G__11212 = i__8827__auto___11211 + 1;
      i__8827__auto___11211 = G__11212;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 2 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(2), 0) : null;
  return tiltontec.rube.observer.fn_obs.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__8834__auto__);
};
tiltontec.rube.observer.fn_obs.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "slot", "slot", 1880761098, null)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol(null, "me", "me", 1501524834, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "new", "new", -444906321, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "old", "old", -184691163, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "c", "c", -122660552, null))))))), body)));
};
tiltontec.rube.observer.fn_obs.cljs$lang$maxFixedArity = 2;
tiltontec.rube.observer.fn_obs.cljs$lang$applyTo = function(seq11207) {
  var G__11208 = cljs.core.first.call(null, seq11207);
  var seq11207__$1 = cljs.core.next.call(null, seq11207);
  var G__11209 = cljs.core.first.call(null, seq11207__$1);
  var seq11207__$2 = cljs.core.next.call(null, seq11207__$1);
  return tiltontec.rube.observer.fn_obs.cljs$core$IFn$_invoke$arity$variadic(G__11208, G__11209, seq11207__$2);
};
tiltontec.rube.observer.fn_obs.cljs$lang$macro = true;
tiltontec.rube.observer.c_observe = function tiltontec$rube$observer$c_observe() {
  var args11213 = [];
  var len__8826__auto___11216 = arguments.length;
  var i__8827__auto___11217 = 0;
  while (true) {
    if (i__8827__auto___11217 < len__8826__auto___11216) {
      args11213.push(arguments[i__8827__auto___11217]);
      var G__11218 = i__8827__auto___11217 + 1;
      i__8827__auto___11217 = G__11218;
      continue;
    } else {
    }
    break;
  }
  var G__11215 = args11213.length;
  switch(G__11215) {
    case 2:
      return tiltontec.rube.observer.c_observe.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return tiltontec.rube.observer.c_observe.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error([cljs.core.str("Invalid arity: "), cljs.core.str(args11213.length)].join(""));;
  }
};
tiltontec.rube.observer.c_observe.cljs$core$IFn$_invoke$arity$2 = function(c, why) {
  return tiltontec.rube.observer.c_observe.call(null, c, tiltontec.rube.cell_types.unbound, why);
};
tiltontec.rube.observer.c_observe.cljs$core$IFn$_invoke$arity$3 = function(c, prior_value, why) {
  if (cljs.core.truth_(tiltontec.rube.cell_types.c_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  tiltontec.rube.utility.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pulse-observed", "pulse-observed", 595719633), c], null), cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_pulse_PLUS_));
  return function() {
    var or__7787__auto__ = (new cljs.core.Keyword(null, "obs", "obs", -664011444)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c));
    if (cljs.core.truth_(or__7787__auto__)) {
      return or__7787__auto__;
    } else {
      return tiltontec.rube.observer.observe;
    }
  }().call(null, tiltontec.rube.cell_types.c_slot.call(null, c), tiltontec.rube.cell_types.c_model.call(null, c), tiltontec.rube.cell_types.c_value.call(null, c), prior_value, c);
};
tiltontec.rube.observer.c_observe.cljs$lang$maxFixedArity = 3;
goog.provide("tiltontec.rube.evaluate");
goog.require("cljs.core");
goog.require("clojure.set");
goog.require("tiltontec.rube.ut_macros");
goog.require("tiltontec.rube.utility");
goog.require("tiltontec.rube.cell_types");
goog.require("tiltontec.rube.observer");
goog.require("tiltontec.rube.integrity");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.rube.evaluate.ephemeral_reset = function tiltontec$rube$evaluate$ephemeral_reset(rc) {
  if (cljs.core.truth_(tiltontec.rube.cell_types.c_ephemeral_QMARK_.call(null, rc))) {
    return tiltontec.rube.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "ephemeral-reset", "ephemeral-reset", -1442676603), rc, function(opcode, defer_info) {
      var temp__4425__auto___11263 = (new cljs.core.Keyword(null, "me", "me", -139006693)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, rc));
      if (cljs.core.truth_(temp__4425__auto___11263)) {
        var me_11264 = temp__4425__auto___11263;
        cljs.core.swap_BANG_.call(null, me_11264, cljs.core.assoc, (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, rc)), null);
      } else {
      }
      return cljs.core.swap_BANG_.call(null, rc, cljs.core.assoc, new cljs.core.Keyword(null, "value", "value", 305978217), null);
    });
  } else {
    return null;
  }
};
tiltontec.rube.evaluate.record_dependency = function tiltontec$rube$evaluate$record_dependency(used) {
  if (cljs.core.truth_(tiltontec.rube.cell_types.c_optimized_away_QMARK_.call(null, used))) {
    return null;
  } else {
    if (cljs.core.truth_(tiltontec.rube.cell_types._STAR_depender_STAR_)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "*depender*", "*depender*", 1156413950, null)))].join(""));
    }
    tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "reco-dep!!!", "reco-dep!!!", 380319801), new cljs.core.Keyword(null, "used", "used", -1414786177), tiltontec.rube.cell_types.c_slot.call(null, used), new cljs.core.Keyword(null, "caller", "caller", -1275362879), tiltontec.rube.cell_types.c_slot.call(null, tiltontec.rube.cell_types._STAR_depender_STAR_));
    tiltontec.rube.utility.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "useds", "useds", 621350967), tiltontec.rube.cell_types._STAR_depender_STAR_], null), cljs.core.conj.call(null, tiltontec.rube.cell_types.c_useds.call(null, tiltontec.rube.cell_types._STAR_depender_STAR_), used));
    return tiltontec.rube.cell_types.caller_ensure.call(null, used, tiltontec.rube.cell_types._STAR_depender_STAR_);
  }
};
tiltontec.rube.evaluate.ensure_value_is_current = function tiltontec$rube$evaluate$ensure_value_is_current(c, debug_id, ensurer) {
  if (cljs.core.truth_(tiltontec.rube.cell_types._STAR_not_to_be_STAR_)) {
    if (cljs.core.truth_(tiltontec.rube.cell_types.c_unbound_QMARK_.call(null, c))) {
      return tiltontec.rube.utility.err.call(null, "evic\x3e unbound slot %s of model %s", tiltontec.rube.cell_types.c_slot.call(null, c), tiltontec.rube.cell_types.c_model.call(null, c));
    } else {
      if (cljs.core.truth_(tiltontec.rube.cell_types.c_valid_QMARK_.call(null, c))) {
        return tiltontec.rube.cell_types.c_value.call(null, c);
      } else {
        return null;
      }
    }
  } else {
    if (cljs.core.truth_(tiltontec.rube.integrity.c_current_QMARK_.call(null, c))) {
      return tiltontec.rube.cell_types.c_value.call(null, c);
    } else {
      if (cljs.core.truth_(function() {
        var and__7775__auto__ = tiltontec.rube.cell_types.c_input_QMARK_.call(null, c);
        if (cljs.core.truth_(and__7775__auto__)) {
          var and__7775__auto____$1 = tiltontec.rube.cell_types.c_valid_QMARK_.call(null, c);
          if (cljs.core.truth_(and__7775__auto____$1)) {
            return cljs.core.not.call(null, function() {
              var and__7775__auto____$2 = tiltontec.rube.cell_types.c_formula_QMARK_.call(null, c);
              if (cljs.core.truth_(and__7775__auto____$2)) {
                return cljs.core._EQ_.call(null, tiltontec.rube.cell_types.c_optimize.call(null, c), new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336)) && tiltontec.rube.cell_types.c_value.call(null, c) == null;
              } else {
                return and__7775__auto____$2;
              }
            }());
          } else {
            return and__7775__auto____$1;
          }
        } else {
          return and__7775__auto__;
        }
      }())) {
        return tiltontec.rube.cell_types.c_value.call(null, c);
      } else {
        if (cljs.core.truth_(function() {
          var temp__4425__auto__ = tiltontec.rube.cell_types.c_model.call(null, c);
          if (cljs.core.truth_(temp__4425__auto__)) {
            var md = temp__4425__auto__;
            return tiltontec.rube.cell_types.mdead_QMARK_.call(null, tiltontec.rube.cell_types.c_model.call(null, c));
          } else {
            return null;
          }
        }())) {
          return tiltontec.rube.utility.err.call(null, cljs.core.str, "evic\x3e model %s of cell %s is dead", tiltontec.rube.cell_types.c_model.call(null, c), c);
        } else {
          if (cljs.core.truth_(function() {
            var or__7787__auto__ = cljs.core.not.call(null, tiltontec.rube.cell_types.c_valid_QMARK_.call(null, c));
            if (or__7787__auto__) {
              return or__7787__auto__;
            } else {
              var G__11278 = cljs.core.seq.call(null, tiltontec.rube.cell_types.c_useds.call(null, c));
              var vec__11279 = G__11278;
              var used = cljs.core.nth.call(null, vec__11279, 0, null);
              var urest = cljs.core.nthnext.call(null, vec__11279, 1);
              var G__11278__$1 = G__11278;
              while (true) {
                var vec__11280 = G__11278__$1;
                var used__$1 = cljs.core.nth.call(null, vec__11280, 0, null);
                var urest__$1 = cljs.core.nthnext.call(null, vec__11280, 1);
                if (cljs.core.truth_(used__$1)) {
                  tiltontec$rube$evaluate$ensure_value_is_current.call(null, used__$1, new cljs.core.Keyword(null, "nested", "nested", 18943849), c);
                  var or__7787__auto____$1 = tiltontec.rube.cell_types.c_pulse_last_changed.call(null, used__$1) > tiltontec.rube.cell_types.c_pulse.call(null, c);
                  if (or__7787__auto____$1) {
                    return or__7787__auto____$1;
                  } else {
                    var G__11281 = urest__$1;
                    G__11278__$1 = G__11281;
                    continue;
                  }
                } else {
                  return null;
                }
                break;
              }
            }
          }())) {
            if (cljs.core.truth_(tiltontec.rube.integrity.c_current_QMARK_.call(null, c))) {
            } else {
              tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "not-current-so-calc", "not-current-so-calc", 1987242617));
              tiltontec.rube.evaluate.calculate_and_set.call(null, c, new cljs.core.Keyword(null, "evic", "evic", 1309656753), ensurer);
            }
            return tiltontec.rube.cell_types.c_value.call(null, c);
          } else {
            tiltontec.rube.integrity.c_pulse_update.call(null, c, new cljs.core.Keyword(null, "valid-uninfluenced", "valid-uninfluenced", 676756797));
            return tiltontec.rube.cell_types.c_value.call(null, c);
          }
        }
      }
    }
  }
};
tiltontec.rube.evaluate.c_get = function tiltontec$rube$evaluate$c_get(c) {
  if (cljs.core.truth_(tiltontec.rube.cell_types.c_ref_QMARK_.call(null, c))) {
    var result__5566__auto__ = tiltontec.rube.integrity.call_with_integrity.call(null, null, null, function(opcode, defer_info) {
      var prior_value = tiltontec.rube.cell_types.c_value.call(null, c);
      var result__5566__auto__ = tiltontec.rube.evaluate.ensure_value_is_current.call(null, c, new cljs.core.Keyword(null, "c-read", "c-read", -1481921085), null);
      if (tiltontec.rube.cell_types.c_model.call(null, c) == null && cljs.core._EQ_.call(null, tiltontec.rube.cell_types.c_state.call(null, c), new cljs.core.Keyword(null, "nascent", "nascent", 443401807)) && cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_pulse_PLUS_) > tiltontec.rube.cell_types.c_pulse_observed.call(null, c)) {
        tiltontec.rube.utility.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), c], null), new cljs.core.Keyword(null, "awake", "awake", 1922840899));
        tiltontec.rube.observer.c_observe.call(null, c, prior_value, new cljs.core.Keyword(null, "c-get", "c-get", -1456818517));
        tiltontec.rube.evaluate.ephemeral_reset.call(null, c);
      } else {
      }
      return result__5566__auto__;
    });
    if (cljs.core.truth_(tiltontec.rube.cell_types._STAR_depender_STAR_)) {
      tiltontec.rube.evaluate.record_dependency.call(null, c);
    } else {
    }
    return result__5566__auto__;
  } else {
    if (cljs.core.truth_(tiltontec.rube.utility.any_ref_QMARK_.call(null, c))) {
      return cljs.core.deref.call(null, c);
    } else {
      return c;
    }
  }
};
tiltontec.rube.evaluate.calculate_and_set = function tiltontec$rube$evaluate$calculate_and_set(c, dbgid, dbgdata) {
  var raw_value = tiltontec.rube.evaluate.calculate_and_link.call(null, c);
  if (cljs.core.truth_(tiltontec.rube.cell_types.c_optimized_away_QMARK_.call(null, c))) {
    return null;
  } else {
    if (cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, c))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("calc-n-set"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)))))].join(""));
    }
    return tiltontec.rube.evaluate.c_value_assume.call(null, c, raw_value, null);
  }
};
tiltontec.rube.evaluate.calculate_and_link = function tiltontec$rube$evaluate$calculate_and_link(c) {
  var _STAR_call_stack_STAR_11285 = tiltontec.rube.cell_types._STAR_call_stack_STAR_;
  var _STAR_depender_STAR_11286 = tiltontec.rube.cell_types._STAR_depender_STAR_;
  var _STAR_defer_changes_STAR_11287 = tiltontec.rube.cell_types._STAR_defer_changes_STAR_;
  tiltontec.rube.cell_types._STAR_call_stack_STAR_ = cljs.core.cons.call(null, c, tiltontec.rube.cell_types._STAR_call_stack_STAR_);
  tiltontec.rube.cell_types._STAR_depender_STAR_ = c;
  tiltontec.rube.cell_types._STAR_defer_changes_STAR_ = true;
  try {
    tiltontec.rube.evaluate.unlink_from_used.call(null, c, new cljs.core.Keyword(null, "pre-rule-clear", "pre-rule-clear", 258781380));
    if (cljs.core.truth_(tiltontec.rube.cell_types.c_rule.call(null, c))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No rule in %s type %s"), cljs.core.str((new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(c)), cljs.core.str(cljs.core.type.call(null, cljs.core.deref.call(null, c)))].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
    }
    return tiltontec.rube.cell_types.c_rule.call(null, c).call(null, c);
  } finally {
    tiltontec.rube.cell_types._STAR_defer_changes_STAR_ = _STAR_defer_changes_STAR_11287;
    tiltontec.rube.cell_types._STAR_depender_STAR_ = _STAR_depender_STAR_11286;
    tiltontec.rube.cell_types._STAR_call_stack_STAR_ = _STAR_call_stack_STAR_11285;
  }
};
if (typeof tiltontec.rube.evaluate.c_awaken !== "undefined") {
} else {
  tiltontec.rube.evaluate.c_awaken = function() {
    var method_table__8681__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__8682__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__8683__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__8684__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__8685__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.rube.evaluate", "c-awaken"), function(method_table__8681__auto__, prefer_table__8682__auto__, method_cache__8683__auto__, cached_hierarchy__8684__auto__, hierarchy__8685__auto__) {
      return function(c) {
        return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, c));
      };
    }(method_table__8681__auto__, prefer_table__8682__auto__, method_cache__8683__auto__, cached_hierarchy__8684__auto__, hierarchy__8685__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__8685__auto__, method_table__8681__auto__, prefer_table__8682__auto__, method_cache__8683__auto__, cached_hierarchy__8684__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.rube.evaluate.c_awaken, new cljs.core.Keyword(null, "default", "default", -1987822328), function(c) {
  if (cljs.core.coll_QMARK_.call(null, c)) {
    return cljs.core.doall.call(null, function() {
      var iter__8540__auto__ = function tiltontec$rube$evaluate$iter__11288(s__11289) {
        return new cljs.core.LazySeq(null, function() {
          var s__11289__$1 = s__11289;
          while (true) {
            var temp__4425__auto__ = cljs.core.seq.call(null, s__11289__$1);
            if (temp__4425__auto__) {
              var s__11289__$2 = temp__4425__auto__;
              if (cljs.core.chunked_seq_QMARK_.call(null, s__11289__$2)) {
                var c__8538__auto__ = cljs.core.chunk_first.call(null, s__11289__$2);
                var size__8539__auto__ = cljs.core.count.call(null, c__8538__auto__);
                var b__11291 = cljs.core.chunk_buffer.call(null, size__8539__auto__);
                if (function() {
                  var i__11290 = 0;
                  while (true) {
                    if (i__11290 < size__8539__auto__) {
                      var ce = cljs.core._nth.call(null, c__8538__auto__, i__11290);
                      cljs.core.chunk_append.call(null, b__11291, tiltontec.rube.evaluate.c_awaken.call(null, ce));
                      var G__11292 = i__11290 + 1;
                      i__11290 = G__11292;
                      continue;
                    } else {
                      return true;
                    }
                    break;
                  }
                }()) {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11291), tiltontec$rube$evaluate$iter__11288.call(null, cljs.core.chunk_rest.call(null, s__11289__$2)));
                } else {
                  return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11291), null);
                }
              } else {
                var ce = cljs.core.first.call(null, s__11289__$2);
                return cljs.core.cons.call(null, tiltontec.rube.evaluate.c_awaken.call(null, ce), tiltontec$rube$evaluate$iter__11288.call(null, cljs.core.rest.call(null, s__11289__$2)));
              }
            } else {
              return null;
            }
            break;
          }
        }, null, null);
      };
      return iter__8540__auto__.call(null, c);
    }());
  } else {
    return cljs.core.println.call(null, new cljs.core.Keyword(null, "c-awaken-fall-thru", "c-awaken-fall-thru", -2004606871), cljs.core.truth_(tiltontec.rube.utility.any_ref_QMARK_.call(null, c)) ? new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ref-of", "ref-of", 1886926194), cljs.core.type.call(null, c), cljs.core.deref.call(null, c)], null) : new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, 
    "unref", "unref", -1884894186), c, cljs.core.type.call(null, c)], null));
  }
});
cljs.core._add_method.call(null, tiltontec.rube.evaluate.c_awaken, new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610), function(c) {
  if (cljs.core.truth_(tiltontec.rube.cell_types.c_input_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  if (cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_pulse_PLUS_) > tiltontec.rube.cell_types.c_pulse_observed.call(null, c)) {
    var temp__4425__auto___11293 = tiltontec.rube.cell_types.c_me.call(null, c);
    if (cljs.core.truth_(temp__4425__auto___11293)) {
      var me_11294 = temp__4425__auto___11293;
      tiltontec.rube.utility.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.rube.cell_types.c_slot.call(null, c), me_11294], null), tiltontec.rube.cell_types.c_value.call(null, c));
    } else {
    }
    tiltontec.rube.observer.c_observe.call(null, c, new cljs.core.Keyword(null, "cell-awaken", "cell-awaken", 2137807704));
    return tiltontec.rube.evaluate.ephemeral_reset.call(null, c);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, tiltontec.rube.evaluate.c_awaken, new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", -1677011786), function(c) {
  var _STAR_depender_STAR_11295 = tiltontec.rube.cell_types._STAR_depender_STAR_;
  tiltontec.rube.cell_types._STAR_depender_STAR_ = null;
  try {
    if (cljs.core.truth_(tiltontec.rube.integrity.c_current_QMARK_.call(null, c))) {
      return null;
    } else {
      return tiltontec.rube.evaluate.calculate_and_set.call(null, c, new cljs.core.Keyword(null, "fn-c-awaken", "fn-c-awaken", 1597115821), null);
    }
  } finally {
    tiltontec.rube.cell_types._STAR_depender_STAR_ = _STAR_depender_STAR_11295;
  }
});
tiltontec.rube.evaluate.md_slot_value_store = function tiltontec$rube$evaluate$md_slot_value_store(me, slot, value) {
  if (cljs.core.truth_(me)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "me", "me", 1501524834, null)))].join(""));
  }
  if (cljs.core.truth_(tiltontec.rube.utility.any_ref_QMARK_.call(null, me))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))))].join(""));
  }
  return tiltontec.rube.utility.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me], null), value);
};
tiltontec.rube.evaluate.c_value_assume = function tiltontec$rube$evaluate$c_value_assume(c, new_value, propagation_code) {
  if (cljs.core.truth_(tiltontec.rube.cell_types.c_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  var result__5566__auto__ = new_value;
  var _STAR_depender_STAR_11298_11300 = tiltontec.rube.cell_types._STAR_depender_STAR_;
  tiltontec.rube.cell_types._STAR_depender_STAR_ = null;
  try {
    var prior_value_11301 = tiltontec.rube.cell_types.c_value.call(null, c);
    var prior_state_11302 = tiltontec.rube.cell_types.c_value_state.call(null, c);
    tiltontec.rube.utility.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), c], null), new_value);
    tiltontec.rube.utility.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), c], null), new cljs.core.Keyword(null, "awake", "awake", 1922840899));
    if (cljs.core.truth_(function() {
      var and__7775__auto__ = tiltontec.rube.cell_types.c_model.call(null, c);
      if (cljs.core.truth_(and__7775__auto__)) {
        return cljs.core.not.call(null, tiltontec.rube.cell_types.c_synaptic_QMARK_.call(null, c));
      } else {
        return and__7775__auto__;
      }
    }())) {
      tiltontec.rube.evaluate.md_slot_value_store.call(null, tiltontec.rube.cell_types.c_model.call(null, c), tiltontec.rube.cell_types.c_slot_name.call(null, c), new_value);
    } else {
    }
    tiltontec.rube.integrity.c_pulse_update.call(null, c, new cljs.core.Keyword(null, "slotv-assume", "slotv-assume", -1071260275));
    if (cljs.core.truth_(function() {
      var or__7787__auto__ = cljs.core._EQ_.call(null, propagation_code, new cljs.core.Keyword(null, "propagate", "propagate", 274376905));
      if (or__7787__auto__) {
        return or__7787__auto__;
      } else {
        var or__7787__auto____$1 = cljs.core.not.call(null, cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([prior_state_11302], true), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "valid", "valid", 155614240), new cljs.core.Keyword(null, "uncurrent", "uncurrent", -217246265)], null)));
        if (or__7787__auto____$1) {
          return or__7787__auto____$1;
        } else {
          return tiltontec.rube.evaluate.c_value_changed_QMARK_.call(null, c, new_value, prior_value_11301);
        }
      }
    }())) {
      var callers_11303 = tiltontec.rube.cell_types.c_callers.call(null, c);
      var temp__4425__auto___11304 = function() {
        var and__7775__auto__ = tiltontec.rube.cell_types.c_formula_QMARK_.call(null, c);
        if (cljs.core.truth_(and__7775__auto__)) {
          return tiltontec.rube.cell_types.c_optimize.call(null, c);
        } else {
          return and__7775__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4425__auto___11304)) {
        var optimize_11305 = temp__4425__auto___11304;
        tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "wtf", "wtf", -1581114577), optimize_11305);
        var G__11299_11306 = optimize_11305;
        if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336), G__11299_11306)) {
          if (cljs.core.truth_(tiltontec.rube.cell_types.c_value.call(null, c))) {
            tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336), tiltontec.rube.cell_types.c_slot.call(null, c));
            tiltontec.rube.evaluate.unlink_from_used.call(null, c, new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336));
          } else {
          }
        } else {
          if (cljs.core._EQ_.call(null, true, G__11299_11306)) {
            tiltontec.rube.evaluate.optimize_away_QMARK__BANG_.call(null, c, prior_value_11301);
          } else {
            throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(optimize_11305)].join(""));
          }
        }
      } else {
      }
      if (cljs.core.truth_(function() {
        var or__7787__auto__ = cljs.core._EQ_.call(null, propagation_code, new cljs.core.Keyword(null, "no-propagate", "no-propagate", -573850970));
        if (or__7787__auto__) {
          return or__7787__auto__;
        } else {
          return tiltontec.rube.cell_types.c_optimized_away_QMARK_.call(null, c);
        }
      }())) {
      } else {
        if (cljs.core.map_QMARK_.call(null, cljs.core.deref.call(null, c))) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "map?", "map?", -1780568534, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)))))].join(""));
        }
        tiltontec.rube.evaluate.propagate.call(null, c, prior_value_11301, callers_11303);
      }
    } else {
    }
  } finally {
    tiltontec.rube.cell_types._STAR_depender_STAR_ = _STAR_depender_STAR_11298_11300;
  }
  return result__5566__auto__;
};
tiltontec.rube.evaluate.unlink_from_used = function tiltontec$rube$evaluate$unlink_from_used(c, why) {
  var iter__8540__auto___11315 = function tiltontec$rube$evaluate$unlink_from_used_$_iter__11311(s__11312) {
    return new cljs.core.LazySeq(null, function() {
      var s__11312__$1 = s__11312;
      while (true) {
        var temp__4425__auto__ = cljs.core.seq.call(null, s__11312__$1);
        if (temp__4425__auto__) {
          var s__11312__$2 = temp__4425__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, s__11312__$2)) {
            var c__8538__auto__ = cljs.core.chunk_first.call(null, s__11312__$2);
            var size__8539__auto__ = cljs.core.count.call(null, c__8538__auto__);
            var b__11314 = cljs.core.chunk_buffer.call(null, size__8539__auto__);
            if (function() {
              var i__11313 = 0;
              while (true) {
                if (i__11313 < size__8539__auto__) {
                  var used = cljs.core._nth.call(null, c__8538__auto__, i__11313);
                  cljs.core.chunk_append.call(null, b__11314, tiltontec.rube.utility.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "callers", "callers", -1991542784), used], null), cljs.core.disj.call(null, tiltontec.rube.cell_types.c_callers.call(null, used), c)));
                  var G__11316 = i__11313 + 1;
                  i__11313 = G__11316;
                  continue;
                } else {
                  return true;
                }
                break;
              }
            }()) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11314), tiltontec$rube$evaluate$unlink_from_used_$_iter__11311.call(null, cljs.core.chunk_rest.call(null, s__11312__$2)));
            } else {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11314), null);
            }
          } else {
            var used = cljs.core.first.call(null, s__11312__$2);
            return cljs.core.cons.call(null, tiltontec.rube.utility.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "callers", "callers", -1991542784), used], null), cljs.core.disj.call(null, tiltontec.rube.cell_types.c_callers.call(null, used), c)), tiltontec$rube$evaluate$unlink_from_used_$_iter__11311.call(null, cljs.core.rest.call(null, s__11312__$2)));
          }
        } else {
          return null;
        }
        break;
      }
    }, null, null);
  };
  iter__8540__auto___11315.call(null, tiltontec.rube.cell_types.c_useds.call(null, c));
  return tiltontec.rube.utility.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "useds", "useds", 621350967), c], null), cljs.core.PersistentHashSet.EMPTY);
};
tiltontec.rube.evaluate.md_cell_flush = function tiltontec$rube$evaluate$md_cell_flush(c) {
  if (cljs.core.truth_(tiltontec.rube.cell_types.c_ref_QMARK_.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  var temp__4425__auto__ = tiltontec.rube.cell_types.c_model.call(null, c);
  if (cljs.core.truth_(temp__4425__auto__)) {
    var me = temp__4425__auto__;
    return tiltontec.rube.utility.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cells-flushed", "cells-flushed", -1653073949), me], null), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "cells-flushed", "cells-flushed", -1653073949)).cljs$core$IFn$_invoke$arity$1(me), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.rube.cell_types.c_slot.call(null, c), tiltontec.rube.cell_types.c_pulse_observed.call(null, 
    c)], null)));
  } else {
    return null;
  }
};
tiltontec.rube.evaluate.optimize_away_QMARK__BANG_ = function tiltontec$rube$evaluate$optimize_away_QMARK__BANG_(c, prior_value) {
  if (cljs.core.truth_(function() {
    var and__7775__auto__ = tiltontec.rube.cell_types.c_formula_QMARK_.call(null, c);
    if (cljs.core.truth_(and__7775__auto__)) {
      var and__7775__auto____$1 = cljs.core.empty_QMARK_.call(null, tiltontec.rube.cell_types.c_useds.call(null, c));
      if (and__7775__auto____$1) {
        var and__7775__auto____$2 = tiltontec.rube.cell_types.c_optimize.call(null, c);
        if (cljs.core.truth_(and__7775__auto____$2)) {
          var and__7775__auto____$3 = cljs.core.not.call(null, tiltontec.rube.cell_types.c_optimized_away_QMARK_.call(null, c));
          if (and__7775__auto____$3) {
            var and__7775__auto____$4 = tiltontec.rube.cell_types.c_valid_QMARK_.call(null, c);
            if (cljs.core.truth_(and__7775__auto____$4)) {
              return cljs.core.not.call(null, tiltontec.rube.cell_types.c_synaptic_QMARK_.call(null, c)) && cljs.core.not.call(null, tiltontec.rube.cell_types.c_input_QMARK_.call(null, c));
            } else {
              return and__7775__auto____$4;
            }
          } else {
            return and__7775__auto____$3;
          }
        } else {
          return and__7775__auto____$2;
        }
      } else {
        return and__7775__auto____$1;
      }
    } else {
      return and__7775__auto__;
    }
  }())) {
    tiltontec.rube.utility.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), c], null), new cljs.core.Keyword(null, "optimized-away", "optimized-away", 876765856));
    tiltontec.rube.observer.c_observe.call(null, c, prior_value, new cljs.core.Keyword(null, "opti-away", "opti-away", 1290785499));
    var temp__4425__auto___11325 = tiltontec.rube.cell_types.c_model.call(null, c);
    if (cljs.core.truth_(temp__4425__auto___11325)) {
      var me_11326 = temp__4425__auto___11325;
      tiltontec.rube.utility.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cz", "cz", 1670864932), me_11326], null), cljs.core.dissoc.call(null, (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me_11326)), tiltontec.rube.cell_types.c_slot.call(null, c)));
      tiltontec.rube.evaluate.md_cell_flush.call(null, c);
    } else {
    }
    var seq__11321_11327 = cljs.core.seq.call(null, cljs.core.seq.call(null, tiltontec.rube.cell_types.c_callers.call(null, c)));
    var chunk__11322_11328 = null;
    var count__11323_11329 = 0;
    var i__11324_11330 = 0;
    while (true) {
      if (i__11324_11330 < count__11323_11329) {
        var caller_11331 = cljs.core._nth.call(null, chunk__11322_11328, i__11324_11330);
        cljs.core.swap_BANG_.call(null, caller_11331, cljs.core.assoc, new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.remove.call(null, cljs.core.PersistentHashSet.fromArray([c], true), tiltontec.rube.cell_types.c_useds.call(null, caller_11331)));
        tiltontec.rube.cell_types.caller_drop.call(null, c, caller_11331);
        tiltontec.rube.evaluate.ensure_value_is_current.call(null, caller_11331, new cljs.core.Keyword(null, "opti-used", "opti-used", 660350789), c);
        var G__11332 = seq__11321_11327;
        var G__11333 = chunk__11322_11328;
        var G__11334 = count__11323_11329;
        var G__11335 = i__11324_11330 + 1;
        seq__11321_11327 = G__11332;
        chunk__11322_11328 = G__11333;
        count__11323_11329 = G__11334;
        i__11324_11330 = G__11335;
        continue;
      } else {
        var temp__4425__auto___11336 = cljs.core.seq.call(null, seq__11321_11327);
        if (temp__4425__auto___11336) {
          var seq__11321_11337__$1 = temp__4425__auto___11336;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__11321_11337__$1)) {
            var c__8571__auto___11338 = cljs.core.chunk_first.call(null, seq__11321_11337__$1);
            var G__11339 = cljs.core.chunk_rest.call(null, seq__11321_11337__$1);
            var G__11340 = c__8571__auto___11338;
            var G__11341 = cljs.core.count.call(null, c__8571__auto___11338);
            var G__11342 = 0;
            seq__11321_11327 = G__11339;
            chunk__11322_11328 = G__11340;
            count__11323_11329 = G__11341;
            i__11324_11330 = G__11342;
            continue;
          } else {
            var caller_11343 = cljs.core.first.call(null, seq__11321_11337__$1);
            cljs.core.swap_BANG_.call(null, caller_11343, cljs.core.assoc, new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.remove.call(null, cljs.core.PersistentHashSet.fromArray([c], true), tiltontec.rube.cell_types.c_useds.call(null, caller_11343)));
            tiltontec.rube.cell_types.caller_drop.call(null, c, caller_11343);
            tiltontec.rube.evaluate.ensure_value_is_current.call(null, caller_11343, new cljs.core.Keyword(null, "opti-used", "opti-used", 660350789), c);
            var G__11344 = cljs.core.next.call(null, seq__11321_11337__$1);
            var G__11345 = null;
            var G__11346 = 0;
            var G__11347 = 0;
            seq__11321_11327 = G__11344;
            chunk__11322_11328 = G__11345;
            count__11323_11329 = G__11346;
            i__11324_11330 = G__11347;
            continue;
          }
        } else {
        }
      }
      break;
    }
    return cljs.core.reset_BANG_.call(null, c, tiltontec.rube.cell_types.c_value.call(null, c));
  } else {
    return null;
  }
};
tiltontec.rube.evaluate.c_quiesce = function tiltontec$rube$evaluate$c_quiesce(c) {
  tiltontec.rube.cell_types.unlink_from_callers.call(null, c);
  tiltontec.rube.evaluate.unlink_from_used.call(null, c, new cljs.core.Keyword(null, "quiesce", "quiesce", -798294121));
  return cljs.core.reset_BANG_.call(null, c, new cljs.core.Keyword(null, "dead-c", "dead-c", 385485497));
};
if (typeof tiltontec.rube.evaluate.not_to_be !== "undefined") {
} else {
  tiltontec.rube.evaluate.not_to_be = function() {
    var method_table__8681__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__8682__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__8683__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__8684__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__8685__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.rube.evaluate", "not-to-be"), function(method_table__8681__auto__, prefer_table__8682__auto__, method_cache__8683__auto__, cached_hierarchy__8684__auto__, hierarchy__8685__auto__) {
      return function(me) {
        if (cljs.core.truth_(tiltontec.rube.cell_types.md_ref_QMARK_.call(null, me))) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "md-ref?", "md-ref?", 1571167727, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))))].join(""));
        }
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.type.call(null, cljs.core.truth_(me) ? cljs.core.deref.call(null, me) : null)], null);
      };
    }(method_table__8681__auto__, prefer_table__8682__auto__, method_cache__8683__auto__, cached_hierarchy__8684__auto__, hierarchy__8685__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__8685__auto__, method_table__8681__auto__, prefer_table__8682__auto__, method_cache__8683__auto__, cached_hierarchy__8684__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.rube.evaluate.not_to_be, new cljs.core.Keyword(null, "default", "default", -1987822328), function(me) {
  var seq__11348_11352 = cljs.core.seq.call(null, cljs.core.vals.call(null, (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, me))));
  var chunk__11349_11353 = null;
  var count__11350_11354 = 0;
  var i__11351_11355 = 0;
  while (true) {
    if (i__11351_11355 < count__11350_11354) {
      var c_11356 = cljs.core._nth.call(null, chunk__11349_11353, i__11351_11355);
      tiltontec.rube.evaluate.c_quiesce.call(null, c_11356);
      var G__11357 = seq__11348_11352;
      var G__11358 = chunk__11349_11353;
      var G__11359 = count__11350_11354;
      var G__11360 = i__11351_11355 + 1;
      seq__11348_11352 = G__11357;
      chunk__11349_11353 = G__11358;
      count__11350_11354 = G__11359;
      i__11351_11355 = G__11360;
      continue;
    } else {
      var temp__4425__auto___11361 = cljs.core.seq.call(null, seq__11348_11352);
      if (temp__4425__auto___11361) {
        var seq__11348_11362__$1 = temp__4425__auto___11361;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__11348_11362__$1)) {
          var c__8571__auto___11363 = cljs.core.chunk_first.call(null, seq__11348_11362__$1);
          var G__11364 = cljs.core.chunk_rest.call(null, seq__11348_11362__$1);
          var G__11365 = c__8571__auto___11363;
          var G__11366 = cljs.core.count.call(null, c__8571__auto___11363);
          var G__11367 = 0;
          seq__11348_11352 = G__11364;
          chunk__11349_11353 = G__11365;
          count__11350_11354 = G__11366;
          i__11351_11355 = G__11367;
          continue;
        } else {
          var c_11368 = cljs.core.first.call(null, seq__11348_11362__$1);
          tiltontec.rube.evaluate.c_quiesce.call(null, c_11368);
          var G__11369 = cljs.core.next.call(null, seq__11348_11362__$1);
          var G__11370 = null;
          var G__11371 = 0;
          var G__11372 = 0;
          seq__11348_11352 = G__11369;
          chunk__11349_11353 = G__11370;
          count__11350_11354 = G__11371;
          i__11351_11355 = G__11372;
          continue;
        }
      } else {
      }
    }
    break;
  }
  cljs.core.reset_BANG_.call(null, me, null);
  return tiltontec.rube.utility.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), me], null), new cljs.core.Keyword(null, "dead", "dead", -1946604091));
});
if (typeof tiltontec.rube.evaluate.unchanged_test !== "undefined") {
} else {
  tiltontec.rube.evaluate.unchanged_test = function() {
    var method_table__8681__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__8682__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__8683__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__8684__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__8685__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "tiltontec.rube.evaluate", "unchanged-test"), function(method_table__8681__auto__, prefer_table__8682__auto__, method_cache__8683__auto__, cached_hierarchy__8684__auto__, hierarchy__8685__auto__) {
      return function(me, slot) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.truth_(me) ? cljs.core.type.call(null, cljs.core.deref.call(null, me)) : null, slot], null);
      };
    }(method_table__8681__auto__, prefer_table__8682__auto__, method_cache__8683__auto__, cached_hierarchy__8684__auto__, hierarchy__8685__auto__), new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__8685__auto__, method_table__8681__auto__, prefer_table__8682__auto__, method_cache__8683__auto__, cached_hierarchy__8684__auto__);
  }();
}
cljs.core._add_method.call(null, tiltontec.rube.evaluate.unchanged_test, new cljs.core.Keyword(null, "default", "default", -1987822328), function(self, slotname) {
  return cljs.core._EQ_;
});
tiltontec.rube.evaluate.c_value_changed_QMARK_ = function tiltontec$rube$evaluate$c_value_changed_QMARK_(c, new_value, old_value) {
  return cljs.core.not.call(null, function() {
    var or__7787__auto__ = (new cljs.core.Keyword(null, "unchanged-if", "unchanged-if", -923210106)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c));
    if (cljs.core.truth_(or__7787__auto__)) {
      return or__7787__auto__;
    } else {
      return tiltontec.rube.evaluate.unchanged_test.call(null, tiltontec.rube.cell_types.c_model.call(null, c), tiltontec.rube.cell_types.c_slot.call(null, c));
    }
  }().call(null, new_value, old_value));
};
tiltontec.rube.evaluate._STAR_custom_propagater_STAR_ = null;
tiltontec.rube.evaluate.propagate = function tiltontec$rube$evaluate$propagate(c, prior_value, callers) {
  tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "propagate", "propagate", 274376905), (new cljs.core.Keyword(null, "slot", "slot", 240229571)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, c)));
  if (cljs.core.truth_(tiltontec.rube.integrity._STAR_one_pulse_QMARK__STAR_)) {
    if (cljs.core.truth_(tiltontec.rube.evaluate._STAR_custom_propagater_STAR_)) {
      return tiltontec.rube.evaluate._STAR_custom_propagater_STAR_.call(null, c, prior_value);
    } else {
      return null;
    }
  } else {
    tiltontec.rube.utility.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pulse-last-changed", "pulse-last-changed", 1035703380), c], null), cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_pulse_PLUS_));
    var _STAR_depender_STAR_11381 = tiltontec.rube.cell_types._STAR_depender_STAR_;
    var _STAR_call_stack_STAR_11382 = tiltontec.rube.cell_types._STAR_call_stack_STAR_;
    var _STAR_c_prop_depth_STAR_11383 = tiltontec.rube.cell_types._STAR_c_prop_depth_STAR_;
    var _STAR_defer_changes_STAR_11384 = tiltontec.rube.cell_types._STAR_defer_changes_STAR_;
    tiltontec.rube.cell_types._STAR_depender_STAR_ = null;
    tiltontec.rube.cell_types._STAR_call_stack_STAR_ = null;
    tiltontec.rube.cell_types._STAR_c_prop_depth_STAR_ = tiltontec.rube.cell_types._STAR_c_prop_depth_STAR_ + 1;
    tiltontec.rube.cell_types._STAR_defer_changes_STAR_ = true;
    try {
      if (cljs.core.truth_(function() {
        var and__7775__auto__ = prior_value;
        if (cljs.core.truth_(and__7775__auto__)) {
          var and__7775__auto____$1 = tiltontec.rube.cell_types.c_model.call(null, c);
          if (cljs.core.truth_(and__7775__auto____$1)) {
            return tiltontec.rube.cell_types.md_slot_owning_QMARK_.call(null, cljs.core.type.call(null, tiltontec.rube.cell_types.c_model.call(null, c)), tiltontec.rube.cell_types.c_slot_name.call(null, c));
          } else {
            return and__7775__auto____$1;
          }
        } else {
          return and__7775__auto__;
        }
      }())) {
        var temp__4425__auto___11389 = clojure.set.difference.call(null, tiltontec.rube.utility.set_ify.call(null, prior_value), tiltontec.rube.utility.set_ify.call(null, tiltontec.rube.cell_types.c_value.call(null, c)));
        if (cljs.core.truth_(temp__4425__auto___11389)) {
          var ownees_11390 = temp__4425__auto___11389;
          var seq__11385_11391 = cljs.core.seq.call(null, ownees_11390);
          var chunk__11386_11392 = null;
          var count__11387_11393 = 0;
          var i__11388_11394 = 0;
          while (true) {
            if (i__11388_11394 < count__11387_11393) {
              var ownee_11395 = cljs.core._nth.call(null, chunk__11386_11392, i__11388_11394);
              tiltontec.rube.evaluate.not_to_be.call(null, ownee_11395);
              var G__11396 = seq__11385_11391;
              var G__11397 = chunk__11386_11392;
              var G__11398 = count__11387_11393;
              var G__11399 = i__11388_11394 + 1;
              seq__11385_11391 = G__11396;
              chunk__11386_11392 = G__11397;
              count__11387_11393 = G__11398;
              i__11388_11394 = G__11399;
              continue;
            } else {
              var temp__4425__auto___11400__$1 = cljs.core.seq.call(null, seq__11385_11391);
              if (temp__4425__auto___11400__$1) {
                var seq__11385_11401__$1 = temp__4425__auto___11400__$1;
                if (cljs.core.chunked_seq_QMARK_.call(null, seq__11385_11401__$1)) {
                  var c__8571__auto___11402 = cljs.core.chunk_first.call(null, seq__11385_11401__$1);
                  var G__11403 = cljs.core.chunk_rest.call(null, seq__11385_11401__$1);
                  var G__11404 = c__8571__auto___11402;
                  var G__11405 = cljs.core.count.call(null, c__8571__auto___11402);
                  var G__11406 = 0;
                  seq__11385_11391 = G__11403;
                  chunk__11386_11392 = G__11404;
                  count__11387_11393 = G__11405;
                  i__11388_11394 = G__11406;
                  continue;
                } else {
                  var ownee_11407 = cljs.core.first.call(null, seq__11385_11401__$1);
                  tiltontec.rube.evaluate.not_to_be.call(null, ownee_11407);
                  var G__11408 = cljs.core.next.call(null, seq__11385_11401__$1);
                  var G__11409 = null;
                  var G__11410 = 0;
                  var G__11411 = 0;
                  seq__11385_11391 = G__11408;
                  chunk__11386_11392 = G__11409;
                  count__11387_11393 = G__11410;
                  i__11388_11394 = G__11411;
                  continue;
                }
              } else {
              }
            }
            break;
          }
        } else {
        }
      } else {
      }
      tiltontec.rube.evaluate.propagate_to_callers.call(null, c, callers);
      tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "obs-chkpulse!!!!!!!!", "obs-chkpulse!!!!!!!!", 498932923), cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_pulse_PLUS_), tiltontec.rube.cell_types.c_pulse_observed.call(null, c));
      if (cljs.core.truth_(function() {
        var or__7787__auto__ = cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_pulse_PLUS_) > tiltontec.rube.cell_types.c_pulse_observed.call(null, c);
        if (or__7787__auto__) {
          return or__7787__auto__;
        } else {
          return cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.rube.cell_types.c_lazy.call(null, c)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854), new cljs.core.Keyword(null, "always", "always", -1772028770), true], null));
        }
      }())) {
        tiltontec.rube.observer.c_observe.call(null, c, prior_value, new cljs.core.Keyword(null, "propagate", "propagate", 274376905));
      } else {
      }
      return tiltontec.rube.evaluate.ephemeral_reset.call(null, c);
    } finally {
      tiltontec.rube.cell_types._STAR_defer_changes_STAR_ = _STAR_defer_changes_STAR_11384;
      tiltontec.rube.cell_types._STAR_c_prop_depth_STAR_ = _STAR_c_prop_depth_STAR_11383;
      tiltontec.rube.cell_types._STAR_call_stack_STAR_ = _STAR_call_stack_STAR_11382;
      tiltontec.rube.cell_types._STAR_depender_STAR_ = _STAR_depender_STAR_11381;
    }
  }
};
tiltontec.rube.evaluate.propagate_to_callers = function tiltontec$rube$evaluate$propagate_to_callers(c, callers) {
  if (cljs.core.empty_QMARK_.call(null, callers)) {
    return null;
  } else {
    var causation = cljs.core.cons.call(null, c, tiltontec.rube.cell_types._STAR_causation_STAR_);
    return tiltontec.rube.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "tell-dependents", "tell-dependents", 1916330388), c, function(causation) {
      return function(opcode, defer_info) {
        if (cljs.core.truth_(tiltontec.rube.cell_types.mdead_QMARK_.call(null, tiltontec.rube.cell_types.c_model.call(null, c)))) {
          return tiltontec.rube.ut_macros.call_trc.call(null, "WHOAA!!!! dead by time :tell-deps dispatched; bailing", c);
        } else {
          var _STAR_causation_STAR_11417 = tiltontec.rube.cell_types._STAR_causation_STAR_;
          tiltontec.rube.cell_types._STAR_causation_STAR_ = causation;
          try {
            var seq__11418 = cljs.core.seq.call(null, cljs.core.seq.call(null, callers));
            var chunk__11419 = null;
            var count__11420 = 0;
            var i__11421 = 0;
            while (true) {
              if (i__11421 < count__11420) {
                var caller = cljs.core._nth.call(null, chunk__11419, i__11421);
                if (cljs.core.truth_(function() {
                  var or__7787__auto__ = cljs.core._EQ_.call(null, tiltontec.rube.cell_types.c_state.call(null, caller), new cljs.core.Keyword(null, "quiesced", "quiesced", 421940903));
                  if (or__7787__auto__) {
                    return or__7787__auto__;
                  } else {
                    var or__7787__auto____$1 = tiltontec.rube.integrity.c_current_QMARK_.call(null, caller);
                    if (cljs.core.truth_(or__7787__auto____$1)) {
                      return or__7787__auto____$1;
                    } else {
                      var or__7787__auto____$2 = cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.rube.cell_types.c_lazy.call(null, caller)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.Keyword(null, "always", "always", -1772028770), new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854)], null));
                      if (cljs.core.truth_(or__7787__auto____$2)) {
                        return or__7787__auto____$2;
                      } else {
                        return cljs.core.not.call(null, cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([c], true), tiltontec.rube.cell_types.c_useds.call(null, caller))) && cljs.core.not.call(null, tiltontec.rube.cell_types.c_optimized_away_QMARK_.call(null, c));
                      }
                    }
                  }
                }())) {
                  tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "not-propping", "not-propping", 438111539), tiltontec.rube.cell_types.c_slot.call(null, c), new cljs.core.Keyword(null, "to", "to", 192099007), tiltontec.rube.cell_types.c_slot.call(null, caller));
                } else {
                  tiltontec.rube.evaluate.calculate_and_set.call(null, caller, new cljs.core.Keyword(null, "propagate", "propagate", 274376905), c);
                }
                var G__11422 = seq__11418;
                var G__11423 = chunk__11419;
                var G__11424 = count__11420;
                var G__11425 = i__11421 + 1;
                seq__11418 = G__11422;
                chunk__11419 = G__11423;
                count__11420 = G__11424;
                i__11421 = G__11425;
                continue;
              } else {
                var temp__4425__auto__ = cljs.core.seq.call(null, seq__11418);
                if (temp__4425__auto__) {
                  var seq__11418__$1 = temp__4425__auto__;
                  if (cljs.core.chunked_seq_QMARK_.call(null, seq__11418__$1)) {
                    var c__8571__auto__ = cljs.core.chunk_first.call(null, seq__11418__$1);
                    var G__11426 = cljs.core.chunk_rest.call(null, seq__11418__$1);
                    var G__11427 = c__8571__auto__;
                    var G__11428 = cljs.core.count.call(null, c__8571__auto__);
                    var G__11429 = 0;
                    seq__11418 = G__11426;
                    chunk__11419 = G__11427;
                    count__11420 = G__11428;
                    i__11421 = G__11429;
                    continue;
                  } else {
                    var caller = cljs.core.first.call(null, seq__11418__$1);
                    if (cljs.core.truth_(function() {
                      var or__7787__auto__ = cljs.core._EQ_.call(null, tiltontec.rube.cell_types.c_state.call(null, caller), new cljs.core.Keyword(null, "quiesced", "quiesced", 421940903));
                      if (or__7787__auto__) {
                        return or__7787__auto__;
                      } else {
                        var or__7787__auto____$1 = tiltontec.rube.integrity.c_current_QMARK_.call(null, caller);
                        if (cljs.core.truth_(or__7787__auto____$1)) {
                          return or__7787__auto____$1;
                        } else {
                          var or__7787__auto____$2 = cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.rube.cell_types.c_lazy.call(null, caller)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.Keyword(null, "always", "always", -1772028770), new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854)], null));
                          if (cljs.core.truth_(or__7787__auto____$2)) {
                            return or__7787__auto____$2;
                          } else {
                            return cljs.core.not.call(null, cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([c], true), tiltontec.rube.cell_types.c_useds.call(null, caller))) && cljs.core.not.call(null, tiltontec.rube.cell_types.c_optimized_away_QMARK_.call(null, c));
                          }
                        }
                      }
                    }())) {
                      tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "not-propping", "not-propping", 438111539), tiltontec.rube.cell_types.c_slot.call(null, c), new cljs.core.Keyword(null, "to", "to", 192099007), tiltontec.rube.cell_types.c_slot.call(null, caller));
                    } else {
                      tiltontec.rube.evaluate.calculate_and_set.call(null, caller, new cljs.core.Keyword(null, "propagate", "propagate", 274376905), c);
                    }
                    var G__11430 = cljs.core.next.call(null, seq__11418__$1);
                    var G__11431 = null;
                    var G__11432 = 0;
                    var G__11433 = 0;
                    seq__11418 = G__11430;
                    chunk__11419 = G__11431;
                    count__11420 = G__11432;
                    i__11421 = G__11433;
                    continue;
                  }
                } else {
                  return null;
                }
              }
              break;
            }
          } finally {
            tiltontec.rube.cell_types._STAR_causation_STAR_ = _STAR_causation_STAR_11417;
          }
        }
      };
    }(causation));
  }
};
goog.provide("tiltontec.rube.cells");
goog.require("cljs.core");
goog.require("tiltontec.rube.utility");
goog.require("tiltontec.rube.cell_types");
goog.require("tiltontec.rube.observer");
goog.require("tiltontec.rube.integrity");
goog.require("tiltontec.rube.evaluate");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.rube.cells.make_cell = function tiltontec$rube$cells$make_cell() {
  var args__8833__auto__ = [];
  var len__8826__auto___11437 = arguments.length;
  var i__8827__auto___11438 = 0;
  while (true) {
    if (i__8827__auto___11438 < len__8826__auto___11437) {
      args__8833__auto__.push(arguments[i__8827__auto___11438]);
      var G__11439 = i__8827__auto___11438 + 1;
      i__8827__auto___11438 = G__11439;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 0 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(0), 0) : null;
  return tiltontec.rube.cells.make_cell.cljs$core$IFn$_invoke$arity$variadic(argseq__8834__auto__);
};
tiltontec.rube.cells.make_cell.cljs$core$IFn$_invoke$arity$variadic = function(kvs) {
  var options = cljs.core.apply.call(null, cljs.core.hash_map, kvs);
  return cljs.core.atom.call(null, cljs.core.merge.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "callers", "callers", -1991542784), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Keyword(null, "pulse-observed", "pulse-observed", 595719633), new cljs.core.Keyword(null, "lazy", "lazy", -424547181), new cljs.core.Keyword(null, 
  "pulse-last-changed", "pulse-last-changed", 1035703380), new cljs.core.Keyword(null, "pulse", "pulse", -244494476), new cljs.core.Keyword(null, "input?", "input?", -1792843173)], [cljs.core.PersistentHashSet.EMPTY, tiltontec.rube.cell_types.unbound, false, new cljs.core.Keyword(null, "nascent", "nascent", 443401807), 0, false, 0, 0, true]), options), new cljs.core.Keyword(null, "meta", "meta", 1499536964), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), 
  new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)], null));
};
tiltontec.rube.cells.make_cell.cljs$lang$maxFixedArity = 0;
tiltontec.rube.cells.make_cell.cljs$lang$applyTo = function(seq11436) {
  return tiltontec.rube.cells.make_cell.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq11436));
};
tiltontec.rube.cells.make_c_formula = function tiltontec$rube$cells$make_c_formula() {
  var args__8833__auto__ = [];
  var len__8826__auto___11441 = arguments.length;
  var i__8827__auto___11442 = 0;
  while (true) {
    if (i__8827__auto___11442 < len__8826__auto___11441) {
      args__8833__auto__.push(arguments[i__8827__auto___11442]);
      var G__11443 = i__8827__auto___11442 + 1;
      i__8827__auto___11442 = G__11443;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 0 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(0), 0) : null;
  return tiltontec.rube.cells.make_c_formula.cljs$core$IFn$_invoke$arity$variadic(argseq__8834__auto__);
};
tiltontec.rube.cells.make_c_formula.cljs$core$IFn$_invoke$arity$variadic = function(kvs) {
  var options = cljs.core.apply.call(null, cljs.core.hash_map, kvs);
  var rule = (new cljs.core.Keyword(null, "rule", "rule", 729973257)).cljs$core$IFn$_invoke$arity$1(options);
  if (cljs.core.truth_(rule)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "rule", "rule", -1924462512, null)))].join(""));
  }
  if (cljs.core.fn_QMARK_.call(null, rule)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), new cljs.core.Symbol(null, "rule", "rule", -1924462512, null))))].join(""));
  }
  return cljs.core.atom.call(null, cljs.core.merge.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "callers", "callers", -1991542784), new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Keyword(null, "pulse-observed", "pulse-observed", 595719633), new cljs.core.Keyword(null, "lazy", "lazy", -424547181), new cljs.core.Keyword(null, 
  "pulse-last-changed", "pulse-last-changed", 1035703380), new cljs.core.Keyword(null, "pulse", "pulse", -244494476), new cljs.core.Keyword(null, "useds", "useds", 621350967), new cljs.core.Keyword(null, "optimize", "optimize", -1912349448), new cljs.core.Keyword(null, "input?", "input?", -1792843173)], [cljs.core.PersistentHashSet.EMPTY, tiltontec.rube.cell_types.unbound, false, new cljs.core.Keyword(null, "nascent", "nascent", 443401807), 0, false, 0, 0, cljs.core.PersistentHashSet.EMPTY, true, 
  false]), options), new cljs.core.Keyword(null, "meta", "meta", 1499536964), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", -1677011786)], null));
};
tiltontec.rube.cells.make_c_formula.cljs$lang$maxFixedArity = 0;
tiltontec.rube.cells.make_c_formula.cljs$lang$applyTo = function(seq11440) {
  return tiltontec.rube.cells.make_c_formula.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq11440));
};
tiltontec.rube.cells.c_fn_var = function tiltontec$rube$cells$c_fn_var() {
  var args__8833__auto__ = [];
  var len__8826__auto___11450 = arguments.length;
  var i__8827__auto___11451 = 0;
  while (true) {
    if (i__8827__auto___11451 < len__8826__auto___11450) {
      args__8833__auto__.push(arguments[i__8827__auto___11451]);
      var G__11452 = i__8827__auto___11451 + 1;
      i__8827__auto___11451 = G__11452;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 3 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(3), 0) : null;
  return tiltontec.rube.cells.c_fn_var.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__8834__auto__);
};
tiltontec.rube.cells.c_fn_var.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__11448, body) {
  var vec__11449 = p__11448;
  var c = cljs.core.nth.call(null, vec__11449, 0, null);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, c)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "let", "cljs.core/let", -308701135, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "me", "me", 1501524834, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, 
  cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cell-types", "c-model", "tiltontec.rube.cell-types/c-model", 1788691533, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, c))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "cache", "cache", 403508473, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cell-types", "c-value", "tiltontec.rube.cell-types/c-value", 76613046, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, c)))))))))), body)))))));
};
tiltontec.rube.cells.c_fn_var.cljs$lang$maxFixedArity = 3;
tiltontec.rube.cells.c_fn_var.cljs$lang$applyTo = function(seq11444) {
  var G__11445 = cljs.core.first.call(null, seq11444);
  var seq11444__$1 = cljs.core.next.call(null, seq11444);
  var G__11446 = cljs.core.first.call(null, seq11444__$1);
  var seq11444__$2 = cljs.core.next.call(null, seq11444__$1);
  var G__11447 = cljs.core.first.call(null, seq11444__$2);
  var seq11444__$3 = cljs.core.next.call(null, seq11444__$2);
  return tiltontec.rube.cells.c_fn_var.cljs$core$IFn$_invoke$arity$variadic(G__11445, G__11446, G__11447, seq11444__$3);
};
tiltontec.rube.cells.c_fn_var.cljs$lang$macro = true;
tiltontec.rube.cells.c_fn = function tiltontec$rube$cells$c_fn() {
  var args__8833__auto__ = [];
  var len__8826__auto___11456 = arguments.length;
  var i__8827__auto___11457 = 0;
  while (true) {
    if (i__8827__auto___11457 < len__8826__auto___11456) {
      args__8833__auto__.push(arguments[i__8827__auto___11457]);
      var G__11458 = i__8827__auto___11457 + 1;
      i__8827__auto___11457 = G__11458;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 2 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(2), 0) : null;
  return tiltontec.rube.cells.c_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__8834__auto__);
};
tiltontec.rube.cells.c_fn.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "c-fn-var", "tiltontec.rube.cells/c-fn-var", -1433502342, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "slot-c#", "slot-c#", 1084398166, null)))))), 
  body)));
};
tiltontec.rube.cells.c_fn.cljs$lang$maxFixedArity = 2;
tiltontec.rube.cells.c_fn.cljs$lang$applyTo = function(seq11453) {
  var G__11454 = cljs.core.first.call(null, seq11453);
  var seq11453__$1 = cljs.core.next.call(null, seq11453);
  var G__11455 = cljs.core.first.call(null, seq11453__$1);
  var seq11453__$2 = cljs.core.next.call(null, seq11453__$1);
  return tiltontec.rube.cells.c_fn.cljs$core$IFn$_invoke$arity$variadic(G__11454, G__11455, seq11453__$2);
};
tiltontec.rube.cells.c_fn.cljs$lang$macro = true;
tiltontec.rube.cells.c_QMARK_ = function tiltontec$rube$cells$c_QMARK_() {
  var args__8833__auto__ = [];
  var len__8826__auto___11462 = arguments.length;
  var i__8827__auto___11463 = 0;
  while (true) {
    if (i__8827__auto___11463 < len__8826__auto___11462) {
      args__8833__auto__.push(arguments[i__8827__auto___11463]);
      var G__11464 = i__8827__auto___11463 + 1;
      i__8827__auto___11463 = G__11464;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 2 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(2), 0) : null;
  return tiltontec.rube.cells.c_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__8834__auto__);
};
tiltontec.rube.cells.c_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "make-c-formula", "tiltontec.rube.cells/make-c-formula", -737109672, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cell-types", "unbound", "tiltontec.rube.cell-types/unbound", 1349607311, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "c-fn", "tiltontec.rube.cells/c-fn", 637935428, null)), body)))))));
};
tiltontec.rube.cells.c_QMARK_.cljs$lang$maxFixedArity = 2;
tiltontec.rube.cells.c_QMARK_.cljs$lang$applyTo = function(seq11459) {
  var G__11460 = cljs.core.first.call(null, seq11459);
  var seq11459__$1 = cljs.core.next.call(null, seq11459);
  var G__11461 = cljs.core.first.call(null, seq11459__$1);
  var seq11459__$2 = cljs.core.next.call(null, seq11459__$1);
  return tiltontec.rube.cells.c_QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__11460, G__11461, seq11459__$2);
};
tiltontec.rube.cells.c_QMARK_.cljs$lang$macro = true;
tiltontec.rube.cells.c_QMARK__PLUS_ = function tiltontec$rube$cells$c_QMARK__PLUS_() {
  var args__8833__auto__ = [];
  var len__8826__auto___11471 = arguments.length;
  var i__8827__auto___11472 = 0;
  while (true) {
    if (i__8827__auto___11472 < len__8826__auto___11471) {
      args__8833__auto__.push(arguments[i__8827__auto___11472]);
      var G__11473 = i__8827__auto___11472 + 1;
      i__8827__auto___11472 = G__11473;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 3 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(3), 0) : null;
  return tiltontec.rube.cells.c_QMARK__PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__8834__auto__);
};
tiltontec.rube.cells.c_QMARK__PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__11469, body) {
  var vec__11470 = p__11469;
  var options = cljs.core.nthnext.call(null, vec__11470, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "make-c-formula", "tiltontec.rube.cells/make-c-formula", -737109672, null)), options, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cell-types", "unbound", "tiltontec.rube.cell-types/unbound", 1349607311, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "c-fn", "tiltontec.rube.cells/c-fn", 637935428, null)), body)))))));
};
tiltontec.rube.cells.c_QMARK__PLUS_.cljs$lang$maxFixedArity = 3;
tiltontec.rube.cells.c_QMARK__PLUS_.cljs$lang$applyTo = function(seq11465) {
  var G__11466 = cljs.core.first.call(null, seq11465);
  var seq11465__$1 = cljs.core.next.call(null, seq11465);
  var G__11467 = cljs.core.first.call(null, seq11465__$1);
  var seq11465__$2 = cljs.core.next.call(null, seq11465__$1);
  var G__11468 = cljs.core.first.call(null, seq11465__$2);
  var seq11465__$3 = cljs.core.next.call(null, seq11465__$2);
  return tiltontec.rube.cells.c_QMARK__PLUS_.cljs$core$IFn$_invoke$arity$variadic(G__11466, G__11467, G__11468, seq11465__$3);
};
tiltontec.rube.cells.c_QMARK__PLUS_.cljs$lang$macro = true;
tiltontec.rube.cells.c_QMARK__PLUS_n = function tiltontec$rube$cells$c_QMARK__PLUS_n() {
  var args__8833__auto__ = [];
  var len__8826__auto___11477 = arguments.length;
  var i__8827__auto___11478 = 0;
  while (true) {
    if (i__8827__auto___11478 < len__8826__auto___11477) {
      args__8833__auto__.push(arguments[i__8827__auto___11478]);
      var G__11479 = i__8827__auto___11478 + 1;
      i__8827__auto___11478 = G__11479;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 2 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(2), 0) : null;
  return tiltontec.rube.cells.c_QMARK__PLUS_n.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__8834__auto__);
};
tiltontec.rube.cells.c_QMARK__PLUS_n.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "make-c-formula", "tiltontec.rube.cells/make-c-formula", -737109672, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cell-types", 
  "unbound", "tiltontec.rube.cell-types/unbound", 1349607311, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "c-fn", "tiltontec.rube.cells/c-fn", 637935428, null)), body)))))));
};
tiltontec.rube.cells.c_QMARK__PLUS_n.cljs$lang$maxFixedArity = 2;
tiltontec.rube.cells.c_QMARK__PLUS_n.cljs$lang$applyTo = function(seq11474) {
  var G__11475 = cljs.core.first.call(null, seq11474);
  var seq11474__$1 = cljs.core.next.call(null, seq11474);
  var G__11476 = cljs.core.first.call(null, seq11474__$1);
  var seq11474__$2 = cljs.core.next.call(null, seq11474__$1);
  return tiltontec.rube.cells.c_QMARK__PLUS_n.cljs$core$IFn$_invoke$arity$variadic(G__11475, G__11476, seq11474__$2);
};
tiltontec.rube.cells.c_QMARK__PLUS_n.cljs$lang$macro = true;
tiltontec.rube.cells.c_QMARK_n = function tiltontec$rube$cells$c_QMARK_n() {
  var args__8833__auto__ = [];
  var len__8826__auto___11483 = arguments.length;
  var i__8827__auto___11484 = 0;
  while (true) {
    if (i__8827__auto___11484 < len__8826__auto___11483) {
      args__8833__auto__.push(arguments[i__8827__auto___11484]);
      var G__11485 = i__8827__auto___11484 + 1;
      i__8827__auto___11484 = G__11485;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 2 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(2), 0) : null;
  return tiltontec.rube.cells.c_QMARK_n.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__8834__auto__);
};
tiltontec.rube.cells.c_QMARK_n.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "make-c-formula", "tiltontec.rube.cells/make-c-formula", -737109672, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "without-c-dependency", "tiltontec.rube.cells/without-c-dependency", 1372242481, null)), body)))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "input?", "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cell-types", "unbound", "tiltontec.rube.cell-types/unbound", 1349607311, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "c-fn", "tiltontec.rube.cells/c-fn", 637935428, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "without-c-dependency", 
  "tiltontec.rube.cells/without-c-dependency", 1372242481, null)), body)))))))))));
};
tiltontec.rube.cells.c_QMARK_n.cljs$lang$maxFixedArity = 2;
tiltontec.rube.cells.c_QMARK_n.cljs$lang$applyTo = function(seq11480) {
  var G__11481 = cljs.core.first.call(null, seq11480);
  var seq11480__$1 = cljs.core.next.call(null, seq11480);
  var G__11482 = cljs.core.first.call(null, seq11480__$1);
  var seq11480__$2 = cljs.core.next.call(null, seq11480__$1);
  return tiltontec.rube.cells.c_QMARK_n.cljs$core$IFn$_invoke$arity$variadic(G__11481, G__11482, seq11480__$2);
};
tiltontec.rube.cells.c_QMARK_n.cljs$lang$macro = true;
tiltontec.rube.cells.c__QMARK_n = function tiltontec$rube$cells$c__QMARK_n() {
  var args__8833__auto__ = [];
  var len__8826__auto___11489 = arguments.length;
  var i__8827__auto___11490 = 0;
  while (true) {
    if (i__8827__auto___11490 < len__8826__auto___11489) {
      args__8833__auto__.push(arguments[i__8827__auto___11490]);
      var G__11491 = i__8827__auto___11490 + 1;
      i__8827__auto___11490 = G__11491;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 2 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(2), 0) : null;
  return tiltontec.rube.cells.c__QMARK_n.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__8834__auto__);
};
tiltontec.rube.cells.c__QMARK_n.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "make-c-formula", "tiltontec.rube.cells/make-c-formula", -737109672, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "without-c-dependency", "tiltontec.rube.cells/without-c-dependency", 1372242481, null)), body)))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "input?", "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "lazy", "lazy", -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "until-asked", "until-asked", -1449069768)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cell-types", 
  "unbound", "tiltontec.rube.cell-types/unbound", 1349607311, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "c-fn", "tiltontec.rube.cells/c-fn", 637935428, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 
  cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "without-c-dependency", "tiltontec.rube.cells/without-c-dependency", 1372242481, null)), body)))))))))));
};
tiltontec.rube.cells.c__QMARK_n.cljs$lang$maxFixedArity = 2;
tiltontec.rube.cells.c__QMARK_n.cljs$lang$applyTo = function(seq11486) {
  var G__11487 = cljs.core.first.call(null, seq11486);
  var seq11486__$1 = cljs.core.next.call(null, seq11486);
  var G__11488 = cljs.core.first.call(null, seq11486__$1);
  var seq11486__$2 = cljs.core.next.call(null, seq11486__$1);
  return tiltontec.rube.cells.c__QMARK_n.cljs$core$IFn$_invoke$arity$variadic(G__11487, G__11488, seq11486__$2);
};
tiltontec.rube.cells.c__QMARK_n.cljs$lang$macro = true;
tiltontec.rube.cells.c_QMARK_n_dbg = function tiltontec$rube$cells$c_QMARK_n_dbg() {
  var args__8833__auto__ = [];
  var len__8826__auto___11495 = arguments.length;
  var i__8827__auto___11496 = 0;
  while (true) {
    if (i__8827__auto___11496 < len__8826__auto___11495) {
      args__8833__auto__.push(arguments[i__8827__auto___11496]);
      var G__11497 = i__8827__auto___11496 + 1;
      i__8827__auto___11496 = G__11497;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 2 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(2), 0) : null;
  return tiltontec.rube.cells.c_QMARK_n_dbg.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__8834__auto__);
};
tiltontec.rube.cells.c_QMARK_n_dbg.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "make-c-formula", "tiltontec.rube.cells/make-c-formula", -737109672, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "without-c-dependency", "tiltontec.rube.cells/without-c-dependency", 1372242481, null)), body)))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "input?", "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "debug", "debug", -1608172596)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cell-types", "unbound", "tiltontec.rube.cell-types/unbound", 
  1349607311, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "c-fn", "tiltontec.rube.cells/c-fn", 637935428, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "without-c-dependency", "tiltontec.rube.cells/without-c-dependency", 1372242481, null)), body)))))))))));
};
tiltontec.rube.cells.c_QMARK_n_dbg.cljs$lang$maxFixedArity = 2;
tiltontec.rube.cells.c_QMARK_n_dbg.cljs$lang$applyTo = function(seq11492) {
  var G__11493 = cljs.core.first.call(null, seq11492);
  var seq11492__$1 = cljs.core.next.call(null, seq11492);
  var G__11494 = cljs.core.first.call(null, seq11492__$1);
  var seq11492__$2 = cljs.core.next.call(null, seq11492__$1);
  return tiltontec.rube.cells.c_QMARK_n_dbg.cljs$core$IFn$_invoke$arity$variadic(G__11493, G__11494, seq11492__$2);
};
tiltontec.rube.cells.c_QMARK_n_dbg.cljs$lang$macro = true;
tiltontec.rube.cells.c_QMARK_n_until = function tiltontec$rube$cells$c_QMARK_n_until() {
  var args__8833__auto__ = [];
  var len__8826__auto___11502 = arguments.length;
  var i__8827__auto___11503 = 0;
  while (true) {
    if (i__8827__auto___11503 < len__8826__auto___11502) {
      args__8833__auto__.push(arguments[i__8827__auto___11503]);
      var G__11504 = i__8827__auto___11503 + 1;
      i__8827__auto___11503 = G__11504;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 3 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(3), 0) : null;
  return tiltontec.rube.cells.c_QMARK_n_until.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__8834__auto__);
};
tiltontec.rube.cells.c_QMARK_n_until.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, args, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "make-c-formula", "tiltontec.rube.cells/make-c-formula", -737109672, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "optimize", "optimize", -1912349448)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336)), 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "input?", 
  "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cell-types", "unbound", "tiltontec.rube.cell-types/unbound", 1349607311, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, 
  cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "c-fn", "tiltontec.rube.cells/c-fn", 637935428, null)), body)))), args)));
};
tiltontec.rube.cells.c_QMARK_n_until.cljs$lang$maxFixedArity = 3;
tiltontec.rube.cells.c_QMARK_n_until.cljs$lang$applyTo = function(seq11498) {
  var G__11499 = cljs.core.first.call(null, seq11498);
  var seq11498__$1 = cljs.core.next.call(null, seq11498);
  var G__11500 = cljs.core.first.call(null, seq11498__$1);
  var seq11498__$2 = cljs.core.next.call(null, seq11498__$1);
  var G__11501 = cljs.core.first.call(null, seq11498__$2);
  var seq11498__$3 = cljs.core.next.call(null, seq11498__$2);
  return tiltontec.rube.cells.c_QMARK_n_until.cljs$core$IFn$_invoke$arity$variadic(G__11499, G__11500, G__11501, seq11498__$3);
};
tiltontec.rube.cells.c_QMARK_n_until.cljs$lang$macro = true;
tiltontec.rube.cells.c_QMARK_once = function tiltontec$rube$cells$c_QMARK_once() {
  var args__8833__auto__ = [];
  var len__8826__auto___11508 = arguments.length;
  var i__8827__auto___11509 = 0;
  while (true) {
    if (i__8827__auto___11509 < len__8826__auto___11508) {
      args__8833__auto__.push(arguments[i__8827__auto___11509]);
      var G__11510 = i__8827__auto___11509 + 1;
      i__8827__auto___11509 = G__11510;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 2 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(2), 0) : null;
  return tiltontec.rube.cells.c_QMARK_once.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__8834__auto__);
};
tiltontec.rube.cells.c_QMARK_once.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "make-c-formula", "tiltontec.rube.cells/make-c-formula", -737109672, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "without-c-dependency", "tiltontec.rube.cells/without-c-dependency", 1372242481, null)), body)))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "input?", "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, null), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cell-types", "unbound", "tiltontec.rube.cell-types/unbound", 1349607311, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "c-fn", "tiltontec.rube.cells/c-fn", 637935428, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "without-c-dependency", 
  "tiltontec.rube.cells/without-c-dependency", 1372242481, null)), body)))))))))));
};
tiltontec.rube.cells.c_QMARK_once.cljs$lang$maxFixedArity = 2;
tiltontec.rube.cells.c_QMARK_once.cljs$lang$applyTo = function(seq11505) {
  var G__11506 = cljs.core.first.call(null, seq11505);
  var seq11505__$1 = cljs.core.next.call(null, seq11505);
  var G__11507 = cljs.core.first.call(null, seq11505__$1);
  var seq11505__$2 = cljs.core.next.call(null, seq11505__$1);
  return tiltontec.rube.cells.c_QMARK_once.cljs$core$IFn$_invoke$arity$variadic(G__11506, G__11507, seq11505__$2);
};
tiltontec.rube.cells.c_QMARK_once.cljs$lang$macro = true;
tiltontec.rube.cells.c_1 = function tiltontec$rube$cells$c_1() {
  var args__8833__auto__ = [];
  var len__8826__auto___11514 = arguments.length;
  var i__8827__auto___11515 = 0;
  while (true) {
    if (i__8827__auto___11515 < len__8826__auto___11514) {
      args__8833__auto__.push(arguments[i__8827__auto___11515]);
      var G__11516 = i__8827__auto___11515 + 1;
      i__8827__auto___11515 = G__11516;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 2 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(2), 0) : null;
  return tiltontec.rube.cells.c_1.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__8834__auto__);
};
tiltontec.rube.cells.c_1.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "make-c-formula", "tiltontec.rube.cells/make-c-formula", -737109672, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "without-c-dependency", "tiltontec.rube.cells/without-c-dependency", 1372242481, null)), body)))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "input?", "input?", -1792843173)), cljs.core._conj.call(null, cljs.core.List.EMPTY, null), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "lazy", "lazy", -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cell-types", "unbound", "tiltontec.rube.cell-types/unbound", 
  1349607311, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "c-fn", "tiltontec.rube.cells/c-fn", 637935428, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "without-c-dependency", "tiltontec.rube.cells/without-c-dependency", 1372242481, null)), body)))))))))));
};
tiltontec.rube.cells.c_1.cljs$lang$maxFixedArity = 2;
tiltontec.rube.cells.c_1.cljs$lang$applyTo = function(seq11511) {
  var G__11512 = cljs.core.first.call(null, seq11511);
  var seq11511__$1 = cljs.core.next.call(null, seq11511);
  var G__11513 = cljs.core.first.call(null, seq11511__$1);
  var seq11511__$2 = cljs.core.next.call(null, seq11511__$1);
  return tiltontec.rube.cells.c_1.cljs$core$IFn$_invoke$arity$variadic(G__11512, G__11513, seq11511__$2);
};
tiltontec.rube.cells.c_1.cljs$lang$macro = true;
tiltontec.rube.cells.c_QMARK_1 = function tiltontec$rube$cells$c_QMARK_1() {
  var args__8833__auto__ = [];
  var len__8826__auto___11520 = arguments.length;
  var i__8827__auto___11521 = 0;
  while (true) {
    if (i__8827__auto___11521 < len__8826__auto___11520) {
      args__8833__auto__.push(arguments[i__8827__auto___11521]);
      var G__11522 = i__8827__auto___11521 + 1;
      i__8827__auto___11521 = G__11522;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 2 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(2), 0) : null;
  return tiltontec.rube.cells.c_QMARK_1.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__8834__auto__);
};
tiltontec.rube.cells.c_QMARK_1.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "c?once", "tiltontec.rube.cells/c?once", 602378837, null)), body)));
};
tiltontec.rube.cells.c_QMARK_1.cljs$lang$maxFixedArity = 2;
tiltontec.rube.cells.c_QMARK_1.cljs$lang$applyTo = function(seq11517) {
  var G__11518 = cljs.core.first.call(null, seq11517);
  var seq11517__$1 = cljs.core.next.call(null, seq11517);
  var G__11519 = cljs.core.first.call(null, seq11517__$1);
  var seq11517__$2 = cljs.core.next.call(null, seq11517__$1);
  return tiltontec.rube.cells.c_QMARK_1.cljs$core$IFn$_invoke$arity$variadic(G__11518, G__11519, seq11517__$2);
};
tiltontec.rube.cells.c_QMARK_1.cljs$lang$macro = true;
tiltontec.rube.cells.c_QMARK_dbg = function tiltontec$rube$cells$c_QMARK_dbg() {
  var args__8833__auto__ = [];
  var len__8826__auto___11526 = arguments.length;
  var i__8827__auto___11527 = 0;
  while (true) {
    if (i__8827__auto___11527 < len__8826__auto___11526) {
      args__8833__auto__.push(arguments[i__8827__auto___11527]);
      var G__11528 = i__8827__auto___11527 + 1;
      i__8827__auto___11527 = G__11528;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 2 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(2), 0) : null;
  return tiltontec.rube.cells.c_QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__8834__auto__);
};
tiltontec.rube.cells.c_QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "make-c-formula", "tiltontec.rube.cells/make-c-formula", -737109672, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cell-types", "unbound", "tiltontec.rube.cell-types/unbound", 1349607311, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "debug", "debug", -1608172596)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "c-fn", "tiltontec.rube.cells/c-fn", 637935428, null)), body)))))));
};
tiltontec.rube.cells.c_QMARK_dbg.cljs$lang$maxFixedArity = 2;
tiltontec.rube.cells.c_QMARK_dbg.cljs$lang$applyTo = function(seq11523) {
  var G__11524 = cljs.core.first.call(null, seq11523);
  var seq11523__$1 = cljs.core.next.call(null, seq11523);
  var G__11525 = cljs.core.first.call(null, seq11523__$1);
  var seq11523__$2 = cljs.core.next.call(null, seq11523__$1);
  return tiltontec.rube.cells.c_QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic(G__11524, G__11525, seq11523__$2);
};
tiltontec.rube.cells.c_QMARK_dbg.cljs$lang$macro = true;
tiltontec.rube.cells.c_QMARK__ = function tiltontec$rube$cells$c_QMARK__() {
  var args__8833__auto__ = [];
  var len__8826__auto___11535 = arguments.length;
  var i__8827__auto___11536 = 0;
  while (true) {
    if (i__8827__auto___11536 < len__8826__auto___11535) {
      args__8833__auto__.push(arguments[i__8827__auto___11536]);
      var G__11537 = i__8827__auto___11536 + 1;
      i__8827__auto___11536 = G__11537;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 3 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(3), 0) : null;
  return tiltontec.rube.cells.c_QMARK__.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__8834__auto__);
};
tiltontec.rube.cells.c_QMARK__.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__11533, body) {
  var vec__11534 = p__11533;
  var options = cljs.core.nthnext.call(null, vec__11534, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "make-c-formula", "tiltontec.rube.cells/make-c-formula", -737109672, null)), options, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cell-types", "unbound", "tiltontec.rube.cell-types/unbound", 1349607311, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "lazy", "lazy", -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "c-fn", "tiltontec.rube.cells/c-fn", 637935428, null)), body)))))));
};
tiltontec.rube.cells.c_QMARK__.cljs$lang$maxFixedArity = 3;
tiltontec.rube.cells.c_QMARK__.cljs$lang$applyTo = function(seq11529) {
  var G__11530 = cljs.core.first.call(null, seq11529);
  var seq11529__$1 = cljs.core.next.call(null, seq11529);
  var G__11531 = cljs.core.first.call(null, seq11529__$1);
  var seq11529__$2 = cljs.core.next.call(null, seq11529__$1);
  var G__11532 = cljs.core.first.call(null, seq11529__$2);
  var seq11529__$3 = cljs.core.next.call(null, seq11529__$2);
  return tiltontec.rube.cells.c_QMARK__.cljs$core$IFn$_invoke$arity$variadic(G__11530, G__11531, G__11532, seq11529__$3);
};
tiltontec.rube.cells.c_QMARK__.cljs$lang$macro = true;
tiltontec.rube.cells.c__QMARK_ = function tiltontec$rube$cells$c__QMARK_() {
  var args__8833__auto__ = [];
  var len__8826__auto___11544 = arguments.length;
  var i__8827__auto___11545 = 0;
  while (true) {
    if (i__8827__auto___11545 < len__8826__auto___11544) {
      args__8833__auto__.push(arguments[i__8827__auto___11545]);
      var G__11546 = i__8827__auto___11545 + 1;
      i__8827__auto___11545 = G__11546;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 3 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(3), 0) : null;
  return tiltontec.rube.cells.c__QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__8834__auto__);
};
tiltontec.rube.cells.c__QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__11542, body) {
  var vec__11543 = p__11542;
  var options = cljs.core.nthnext.call(null, vec__11543, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "make-c-formula", "tiltontec.rube.cells/make-c-formula", -737109672, null)), options, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cell-types", "unbound", "tiltontec.rube.cell-types/unbound", 1349607311, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "lazy", "lazy", -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "until-asked", "until-asked", -1449069768)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "c-fn", "tiltontec.rube.cells/c-fn", 
  637935428, null)), body)))))));
};
tiltontec.rube.cells.c__QMARK_.cljs$lang$maxFixedArity = 3;
tiltontec.rube.cells.c__QMARK_.cljs$lang$applyTo = function(seq11538) {
  var G__11539 = cljs.core.first.call(null, seq11538);
  var seq11538__$1 = cljs.core.next.call(null, seq11538);
  var G__11540 = cljs.core.first.call(null, seq11538__$1);
  var seq11538__$2 = cljs.core.next.call(null, seq11538__$1);
  var G__11541 = cljs.core.first.call(null, seq11538__$2);
  var seq11538__$3 = cljs.core.next.call(null, seq11538__$2);
  return tiltontec.rube.cells.c__QMARK_.cljs$core$IFn$_invoke$arity$variadic(G__11539, G__11540, G__11541, seq11538__$3);
};
tiltontec.rube.cells.c__QMARK_.cljs$lang$macro = true;
tiltontec.rube.cells.c__QMARK_dbg = function tiltontec$rube$cells$c__QMARK_dbg() {
  var args__8833__auto__ = [];
  var len__8826__auto___11550 = arguments.length;
  var i__8827__auto___11551 = 0;
  while (true) {
    if (i__8827__auto___11551 < len__8826__auto___11550) {
      args__8833__auto__.push(arguments[i__8827__auto___11551]);
      var G__11552 = i__8827__auto___11551 + 1;
      i__8827__auto___11551 = G__11552;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 2 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(2), 0) : null;
  return tiltontec.rube.cells.c__QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__8834__auto__);
};
tiltontec.rube.cells.c__QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, body) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "make-c-formula", "tiltontec.rube.cells/make-c-formula", -737109672, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cell-types", "unbound", "tiltontec.rube.cell-types/unbound", 1349607311, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "lazy", "lazy", -424547181)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "until-asked", "until-asked", -1449069768)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "c-fn", "tiltontec.rube.cells/c-fn", 
  637935428, null)), body)))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "debug", "debug", -1608172596)), cljs.core._conj.call(null, cljs.core.List.EMPTY, true))));
};
tiltontec.rube.cells.c__QMARK_dbg.cljs$lang$maxFixedArity = 2;
tiltontec.rube.cells.c__QMARK_dbg.cljs$lang$applyTo = function(seq11547) {
  var G__11548 = cljs.core.first.call(null, seq11547);
  var seq11547__$1 = cljs.core.next.call(null, seq11547);
  var G__11549 = cljs.core.first.call(null, seq11547__$1);
  var seq11547__$2 = cljs.core.next.call(null, seq11547__$1);
  return tiltontec.rube.cells.c__QMARK_dbg.cljs$core$IFn$_invoke$arity$variadic(G__11548, G__11549, seq11547__$2);
};
tiltontec.rube.cells.c__QMARK_dbg.cljs$lang$macro = true;
tiltontec.rube.cells.c_formula = function tiltontec$rube$cells$c_formula() {
  var args__8833__auto__ = [];
  var len__8826__auto___11559 = arguments.length;
  var i__8827__auto___11560 = 0;
  while (true) {
    if (i__8827__auto___11560 < len__8826__auto___11559) {
      args__8833__auto__.push(arguments[i__8827__auto___11560]);
      var G__11561 = i__8827__auto___11560 + 1;
      i__8827__auto___11560 = G__11561;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 3 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(3), 0) : null;
  return tiltontec.rube.cells.c_formula.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__8834__auto__);
};
tiltontec.rube.cells.c_formula.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, p__11557, body) {
  var vec__11558 = p__11557;
  var kvs = cljs.core.nthnext.call(null, vec__11558, 0);
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "make-c-formula", "tiltontec.rube.cells/make-c-formula", -737109672, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "code", "code", 1586293142)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, 
  cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, body))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "value", "value", 305978217)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cell-types", "unbound", "tiltontec.rube.cell-types/unbound", 1349607311, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, 
  "rule", "rule", 729973257)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "c-fn", "tiltontec.rube.cells/c-fn", 637935428, null)), body)))), cljs.core.keys)));
};
tiltontec.rube.cells.c_formula.cljs$lang$maxFixedArity = 3;
tiltontec.rube.cells.c_formula.cljs$lang$applyTo = function(seq11553) {
  var G__11554 = cljs.core.first.call(null, seq11553);
  var seq11553__$1 = cljs.core.next.call(null, seq11553);
  var G__11555 = cljs.core.first.call(null, seq11553__$1);
  var seq11553__$2 = cljs.core.next.call(null, seq11553__$1);
  var G__11556 = cljs.core.first.call(null, seq11553__$2);
  var seq11553__$3 = cljs.core.next.call(null, seq11553__$2);
  return tiltontec.rube.cells.c_formula.cljs$core$IFn$_invoke$arity$variadic(G__11554, G__11555, G__11556, seq11553__$3);
};
tiltontec.rube.cells.c_formula.cljs$lang$macro = true;
tiltontec.rube.cells.c_in = function tiltontec$rube$cells$c_in() {
  var args__8833__auto__ = [];
  var len__8826__auto___11564 = arguments.length;
  var i__8827__auto___11565 = 0;
  while (true) {
    if (i__8827__auto___11565 < len__8826__auto___11564) {
      args__8833__auto__.push(arguments[i__8827__auto___11565]);
      var G__11566 = i__8827__auto___11565 + 1;
      i__8827__auto___11565 = G__11566;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 1 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(1), 0) : null;
  return tiltontec.rube.cells.c_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__8834__auto__);
};
tiltontec.rube.cells.c_in.cljs$core$IFn$_invoke$arity$variadic = function(value, option_kvs) {
  return cljs.core.apply.call(null, tiltontec.rube.cells.make_cell, cljs.core.list_STAR_.call(null, new cljs.core.Keyword(null, "value", "value", 305978217), value, new cljs.core.Keyword(null, "input?", "input?", -1792843173), true, option_kvs));
};
tiltontec.rube.cells.c_in.cljs$lang$maxFixedArity = 1;
tiltontec.rube.cells.c_in.cljs$lang$applyTo = function(seq11562) {
  var G__11563 = cljs.core.first.call(null, seq11562);
  var seq11562__$1 = cljs.core.next.call(null, seq11562);
  return tiltontec.rube.cells.c_in.cljs$core$IFn$_invoke$arity$variadic(G__11563, seq11562__$1);
};
tiltontec.rube.cells.c_reset_BANG_ = function tiltontec$rube$cells$c_reset_BANG_(c, new_value) {
  if (cljs.core.truth_(c)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "c", "c", -122660552, null)))].join(""));
  }
  if (cljs.core.truth_(tiltontec.rube.cell_types._STAR_defer_changes_STAR_)) {
    throw new Error("c-reset!\x3e change to %s must be deferred by wrapping it in WITH-INTEGRITY", tiltontec.rube.cell_types.c_slot.call(null, c));
  } else {
    if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.rube.cell_types.c_lazy.call(null, c)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854), new cljs.core.Keyword(null, "always", "always", -1772028770), true], null)))) {
      return tiltontec.rube.evaluate.c_value_assume.call(null, c, new_value, null);
    } else {
      return tiltontec.rube.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502), tiltontec.rube.cell_types.c_slot.call(null, c), function(opcode, defer_info) {
        return tiltontec.rube.evaluate.c_value_assume.call(null, c, new_value, null);
      });
    }
  }
};
tiltontec.rube.cells.c_reset_next_BANG_ = function tiltontec$rube$cells$c_reset_next_BANG_(_AMPERSAND_form, _AMPERSAND_env, f_c, f_new_value) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "cond", "cljs.core/cond", 2005388338, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "not", "cljs.core/not", 100665144, null)), cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "*within-integrity*", "tiltontec.rube.cells/*within-integrity*", 2051748403, null)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "throw", "throw", 595905694, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("js", "Error.", "js/Error.", 750655924, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, "c-reset-next!\x3e deferred change to %s not under WITH-INTEGRITY supervision."), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cell-types", 
  "c-slot", "tiltontec.rube.cell-types/c-slot", -1715906024, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, f_c))))))))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "else", "else", -1508377146)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "ufb-add", "tiltontec.rube.cells/ufb-add", 
  1964838004, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "change", "change", -1163046502)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "c-reset-next!", "c-reset-next!", -1735615308)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, 
  cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "fn", "cljs.core/fn", -1065745098, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "opcode", "opcode", 311089360, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, 
  "defer-info", "defer-info", -446799704, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "let", "cljs.core/let", -308701135, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 
  new cljs.core.Symbol(null, "c__11567__auto__", "c__11567__auto__", 63947578, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, f_c), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "new-value__11568__auto__", "new-value__11568__auto__", -122224967, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, f_new_value)))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, 
  cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.cells", "call-c-reset-next!", "tiltontec.rube.cells/call-c-reset-next!", 411397622, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "c__11567__auto__", "c__11567__auto__", 63947578, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "new-value__11568__auto__", "new-value__11568__auto__", -122224967, null))))))))))))))))))))))))));
};
tiltontec.rube.cells.c_reset_next_BANG_.cljs$lang$macro = true;
tiltontec.rube.cells.call_c_reset_next_BANG_ = function tiltontec$rube$cells$call_c_reset_next_BANG_(c, new_value) {
  if (cljs.core.truth_(cljs.core.some.call(null, cljs.core.PersistentHashSet.fromArray([tiltontec.rube.cell_types.c_lazy.call(null, c)], true), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-asked", "once-asked", -1758934854), new cljs.core.Keyword(null, "always", "always", -1772028770), true], null)))) {
    return tiltontec.rube.evaluate.c_value_assume.call(null, c, new_value, null);
  } else {
    return tiltontec.rube.evaluate.c_value_assume.call(null, c, new_value, null);
  }
};
goog.provide("tiltontec.rube.model_base");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.rube.ut_macros");
goog.require("tiltontec.rube.utility");
goog.require("tiltontec.rube.cell_types");
goog.require("tiltontec.rube.integrity");
goog.require("tiltontec.rube.observer");
goog.require("tiltontec.rube.cells");
goog.require("tiltontec.rube.evaluate");
tiltontec.rube.model_base.md_name = function tiltontec$rube$model_base$md_name(ref) {
  return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.rube.model_base.md_state = function tiltontec$rube$model_base$md_state(ref) {
  return (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, ref));
};
tiltontec.rube.model_base.md_cz = function tiltontec$rube$model_base$md_cz(ref) {
  return (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, ref));
};
tiltontec.rube.model_base.md_cell = function tiltontec$rube$model_base$md_cell(me, slot) {
  return slot.call(null, (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, me)));
};
tiltontec.rube.model_base.md_install_cell = function tiltontec$rube$model_base$md_install_cell(me, slot, c) {
  if (cljs.core.truth_(tiltontec.rube.cell_types.c_ref_QMARK_.call(null, c))) {
    cljs.core.swap_BANG_.call(null, c, cljs.core.assoc, new cljs.core.Keyword(null, "slot", "slot", 240229571), slot, new cljs.core.Keyword(null, "me", "me", -139006693), me);
    tiltontec.rube.utility.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me], null), cljs.core.truth_(tiltontec.rube.cell_types.c_input_QMARK_.call(null, c)) ? tiltontec.rube.cell_types.c_value.call(null, c) : null);
    return true;
  } else {
    tiltontec.rube.utility.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me], null), c);
    return false;
  }
};
tiltontec.rube.model_base.md_awaken = function tiltontec$rube$model_base$md_awaken(me) {
  tiltontec.rube.cell_types.c_assert.call(null, cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "nascent", "nascent", 443401807), tiltontec.rube.model_base.md_state.call(null, me)));
  tiltontec.rube.utility.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), me], null), new cljs.core.Keyword(null, "awakening", "awakening", 838364227));
  cljs.core.doall.call(null, function() {
    var iter__8540__auto__ = function tiltontec$rube$model_base$md_awaken_$_iter__11575(s__11576) {
      return new cljs.core.LazySeq(null, function() {
        var s__11576__$1 = s__11576;
        while (true) {
          var temp__4425__auto__ = cljs.core.seq.call(null, s__11576__$1);
          if (temp__4425__auto__) {
            var s__11576__$2 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__11576__$2)) {
              var c__8538__auto__ = cljs.core.chunk_first.call(null, s__11576__$2);
              var size__8539__auto__ = cljs.core.count.call(null, c__8538__auto__);
              var b__11578 = cljs.core.chunk_buffer.call(null, size__8539__auto__);
              if (function() {
                var i__11577 = 0;
                while (true) {
                  if (i__11577 < size__8539__auto__) {
                    var slot = cljs.core._nth.call(null, c__8538__auto__, i__11577);
                    cljs.core.chunk_append.call(null, b__11578, function() {
                      var c = slot.call(null, tiltontec.rube.model_base.md_cz.call(null, me));
                      if (cljs.core.truth_(c)) {
                        return tiltontec.rube.evaluate.c_awaken.call(null, c);
                      } else {
                        return tiltontec.rube.observer.observe.call(null, slot, me, slot.call(null, cljs.core.deref.call(null, me)), tiltontec.rube.cell_types.unbound, null);
                      }
                    }());
                    var G__11579 = i__11577 + 1;
                    i__11577 = G__11579;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11578), tiltontec$rube$model_base$md_awaken_$_iter__11575.call(null, cljs.core.chunk_rest.call(null, s__11576__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__11578), null);
              }
            } else {
              var slot = cljs.core.first.call(null, s__11576__$2);
              return cljs.core.cons.call(null, function() {
                var c = slot.call(null, tiltontec.rube.model_base.md_cz.call(null, me));
                if (cljs.core.truth_(c)) {
                  return tiltontec.rube.evaluate.c_awaken.call(null, c);
                } else {
                  return tiltontec.rube.observer.observe.call(null, slot, me, slot.call(null, cljs.core.deref.call(null, me)), tiltontec.rube.cell_types.unbound, null);
                }
              }(), tiltontec$rube$model_base$md_awaken_$_iter__11575.call(null, cljs.core.rest.call(null, s__11576__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__8540__auto__.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, me)));
  }());
  tiltontec.rube.utility.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "state", "state", -1988618099), me], null), new cljs.core.Keyword(null, "awake", "awake", 1922840899));
  return me;
};
tiltontec.rube.model_base.md_get = function tiltontec$rube$model_base$md_get(me, slot) {
  var temp__4423__auto__ = tiltontec.rube.model_base.md_cell.call(null, me, slot);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var c = temp__4423__auto__;
    return tiltontec.rube.evaluate.c_get.call(null, c);
  } else {
    return slot.call(null, cljs.core.deref.call(null, me));
  }
};
goog.provide("tiltontec.rube.family");
goog.require("cljs.core");
goog.require("tiltontec.rube.cell_types");
goog.require("tiltontec.rube.integrity");
goog.require("tiltontec.rube.cells");
goog.require("tiltontec.rube.model_base");
goog.require("clojure.set");
goog.require("tiltontec.rube.evaluate");
goog.require("tiltontec.rube.utility");
goog.require("tiltontec.rube.observer");
goog.require("tiltontec.rube.ut_macros");
cljs.core.derive.call(null, tiltontec.rube.cell_types.ia_types, new cljs.core.Keyword("tiltontec.rube.family", "family", "tiltontec.rube.family/family", -303685384), new cljs.core.Keyword("tiltontec.rube.cell-types", "model", "tiltontec.rube.cell-types/model", 1406839549));
tiltontec.rube.family._STAR_par_STAR_ = null;
tiltontec.rube.family.fget_EQ_ = function tiltontec$rube$family$fget_EQ_(seek, poss) {
  if (cljs.core.truth_(tiltontec.rube.utility.any_ref_QMARK_.call(null, poss))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), new cljs.core.Symbol(null, "poss", "poss", -265534520, null))))].join(""));
  }
  if (cljs.core.fn_QMARK_.call(null, seek)) {
    return seek.call(null, poss);
  } else {
    if (seek instanceof cljs.core.Keyword) {
      return cljs.core._EQ_.call(null, seek, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, poss)));
    } else {
      return cljs.core._EQ_.call(null, seek, poss);
    }
  }
};
tiltontec.rube.family.fget = function tiltontec$rube$family$fget() {
  var args__8833__auto__ = [];
  var len__8826__auto___11587 = arguments.length;
  var i__8827__auto___11588 = 0;
  while (true) {
    if (i__8827__auto___11588 < len__8826__auto___11587) {
      args__8833__auto__.push(arguments[i__8827__auto___11588]);
      var G__11589 = i__8827__auto___11588 + 1;
      i__8827__auto___11588 = G__11589;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 2 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(2), 0) : null;
  return tiltontec.rube.family.fget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__8834__auto__);
};
tiltontec.rube.family.fget.cljs$core$IFn$_invoke$arity$variadic = function(what, where, options) {
  if (cljs.core.truth_(function() {
    var and__7775__auto__ = where;
    if (cljs.core.truth_(and__7775__auto__)) {
      return what;
    } else {
      return and__7775__auto__;
    }
  }())) {
    var options__$1 = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "me?", "me?", -625404259), false, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true, new cljs.core.Keyword(null, "wocd?", "wocd?", -195637516), true], null), cljs.core.apply.call(null, cljs.core.hash_map, options));
    var _STAR_depender_STAR_11586 = tiltontec.rube.cell_types._STAR_depender_STAR_;
    tiltontec.rube.cell_types._STAR_depender_STAR_ = cljs.core.truth_((new cljs.core.Keyword(null, "wocd?", "wocd?", -195637516)).cljs$core$IFn$_invoke$arity$1(options__$1)) ? null : tiltontec.rube.cell_types._STAR_depender_STAR_;
    try {
      var or__7787__auto__ = function() {
        var and__7775__auto__ = (new cljs.core.Keyword(null, "me?", "me?", -625404259)).cljs$core$IFn$_invoke$arity$1(options__$1);
        if (cljs.core.truth_(and__7775__auto__)) {
          var and__7775__auto____$1 = tiltontec.rube.family.fget_EQ_.call(null, what, where);
          if (cljs.core.truth_(and__7775__auto____$1)) {
            return where;
          } else {
            return and__7775__auto____$1;
          }
        } else {
          return and__7775__auto__;
        }
      }();
      if (cljs.core.truth_(or__7787__auto__)) {
        return or__7787__auto__;
      } else {
        var or__7787__auto____$1 = function() {
          var and__7775__auto__ = (new cljs.core.Keyword(null, "inside?", "inside?", 639243696)).cljs$core$IFn$_invoke$arity$1(options__$1);
          if (cljs.core.truth_(and__7775__auto__)) {
            var temp__4423__auto__ = tiltontec.rube.model_base.md_get.call(null, where, new cljs.core.Keyword(null, "kids", "kids", 1156670771));
            if (cljs.core.truth_(temp__4423__auto__)) {
              var kids = temp__4423__auto__;
              var temp__4423__auto____$1 = cljs.core.remove.call(null, cljs.core.PersistentHashSet.fromArray([(new cljs.core.Keyword(null, "skip", "skip", 602715391)).cljs$core$IFn$_invoke$arity$1(options__$1)], true), kids);
              if (cljs.core.truth_(temp__4423__auto____$1)) {
                var netkids = temp__4423__auto____$1;
                return cljs.core.some.call(null, function(netkids, temp__4423__auto____$1, kids, temp__4423__auto__, and__7775__auto__, or__7787__auto__, _STAR_depender_STAR_11586, options__$1) {
                  return function(p1__11582_SHARP_) {
                    return tiltontec.rube.family.fget.call(null, what, p1__11582_SHARP_, new cljs.core.Keyword(null, "me?", "me?", -625404259), true, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), false);
                  };
                }(netkids, temp__4423__auto____$1, kids, temp__4423__auto__, and__7775__auto__, or__7787__auto__, _STAR_depender_STAR_11586, options__$1), netkids);
              } else {
                return tiltontec.rube.ut_macros.call_trc.call(null, ":no-net-kids");
              }
            } else {
              return tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "inside-no-kids", "inside-no-kids", -1437068961), cljs.core.deref.call(null, where));
            }
          } else {
            return and__7775__auto__;
          }
        }();
        if (cljs.core.truth_(or__7787__auto____$1)) {
          return or__7787__auto____$1;
        } else {
          var or__7787__auto____$2 = function() {
            var and__7775__auto__ = (new cljs.core.Keyword(null, "up?", "up?", 77854972)).cljs$core$IFn$_invoke$arity$1(options__$1);
            if (cljs.core.truth_(and__7775__auto__)) {
              var temp__4425__auto__ = (new cljs.core.Keyword(null, "par", "par", -61778778)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, where));
              if (cljs.core.truth_(temp__4425__auto__)) {
                var par = temp__4425__auto__;
                return tiltontec.rube.family.fget.call(null, what, par, new cljs.core.Keyword(null, "up?", "up?", 77854972), true, new cljs.core.Keyword(null, "me?", "me?", -625404259), true, new cljs.core.Keyword(null, "skip", "skip", 602715391), where, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true);
              } else {
                return null;
              }
            } else {
              return and__7775__auto__;
            }
          }();
          if (cljs.core.truth_(or__7787__auto____$2)) {
            return or__7787__auto____$2;
          } else {
            if (cljs.core.truth_((new cljs.core.Keyword(null, "must?", "must?", 1639898554)).cljs$core$IFn$_invoke$arity$1(options__$1))) {
              return tiltontec.rube.utility.err.call(null, new cljs.core.Keyword(null, "fget-must-failed", "fget-must-failed", 237242954), what, where, options__$1);
            } else {
              return null;
            }
          }
        }
      }
    } finally {
      tiltontec.rube.cell_types._STAR_depender_STAR_ = _STAR_depender_STAR_11586;
    }
  } else {
    return null;
  }
};
tiltontec.rube.family.fget.cljs$lang$maxFixedArity = 2;
tiltontec.rube.family.fget.cljs$lang$applyTo = function(seq11583) {
  var G__11584 = cljs.core.first.call(null, seq11583);
  var seq11583__$1 = cljs.core.next.call(null, seq11583);
  var G__11585 = cljs.core.first.call(null, seq11583__$1);
  var seq11583__$2 = cljs.core.next.call(null, seq11583__$1);
  return tiltontec.rube.family.fget.cljs$core$IFn$_invoke$arity$variadic(G__11584, G__11585, seq11583__$2);
};
tiltontec.rube.family.fm_BANG_ = function tiltontec$rube$family$fm_BANG_(what, where) {
  return tiltontec.rube.family.fget.call(null, what, where, new cljs.core.Keyword(null, "me?", "me?", -625404259), false, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true, new cljs.core.Keyword(null, "must?", "must?", 1639898554), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true);
};
tiltontec.rube.family.mdv_BANG_ = function tiltontec$rube$family$mdv_BANG_() {
  var args__8833__auto__ = [];
  var len__8826__auto___11597 = arguments.length;
  var i__8827__auto___11598 = 0;
  while (true) {
    if (i__8827__auto___11598 < len__8826__auto___11597) {
      args__8833__auto__.push(arguments[i__8827__auto___11598]);
      var G__11599 = i__8827__auto___11598 + 1;
      i__8827__auto___11598 = G__11599;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 4 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(4), 0) : null;
  return tiltontec.rube.family.mdv_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__8834__auto__);
};
tiltontec.rube.family.mdv_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, what, slot, p__11595) {
  var vec__11596 = p__11595;
  var me = cljs.core.nth.call(null, vec__11596, 0, null);
  var me__$1 = function() {
    var or__7787__auto__ = me;
    if (cljs.core.truth_(or__7787__auto__)) {
      return or__7787__auto__;
    } else {
      return new cljs.core.Symbol(null, "me", "me", 1501524834, null);
    }
  }();
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.model-base", "md-get", "tiltontec.rube.model-base/md-get", 1180642359, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.family", "fm!", "tiltontec.rube.family/fm!", 
  -979178993, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, what), cljs.core._conj.call(null, cljs.core.List.EMPTY, me__$1))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, slot))));
};
tiltontec.rube.family.mdv_BANG_.cljs$lang$maxFixedArity = 4;
tiltontec.rube.family.mdv_BANG_.cljs$lang$applyTo = function(seq11590) {
  var G__11591 = cljs.core.first.call(null, seq11590);
  var seq11590__$1 = cljs.core.next.call(null, seq11590);
  var G__11592 = cljs.core.first.call(null, seq11590__$1);
  var seq11590__$2 = cljs.core.next.call(null, seq11590__$1);
  var G__11593 = cljs.core.first.call(null, seq11590__$2);
  var seq11590__$3 = cljs.core.next.call(null, seq11590__$2);
  var G__11594 = cljs.core.first.call(null, seq11590__$3);
  var seq11590__$4 = cljs.core.next.call(null, seq11590__$3);
  return tiltontec.rube.family.mdv_BANG_.cljs$core$IFn$_invoke$arity$variadic(G__11591, G__11592, G__11593, G__11594, seq11590__$4);
};
tiltontec.rube.family.mdv_BANG_.cljs$lang$macro = true;
cljs.core.println.call(null, tiltontec.rube.ut_macros.obj);
tiltontec.rube.family.the_kids = function tiltontec$rube$family$the_kids() {
  var args__8833__auto__ = [];
  var len__8826__auto___11603 = arguments.length;
  var i__8827__auto___11604 = 0;
  while (true) {
    if (i__8827__auto___11604 < len__8826__auto___11603) {
      args__8833__auto__.push(arguments[i__8827__auto___11604]);
      var G__11605 = i__8827__auto___11604 + 1;
      i__8827__auto___11604 = G__11605;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 2 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(2), 0) : null;
  return tiltontec.rube.family.the_kids.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__8834__auto__);
};
tiltontec.rube.family.the_kids.cljs$core$IFn$_invoke$arity$variadic = function(_AMPERSAND_form, _AMPERSAND_env, tree) {
  return cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "binding", "cljs.core/binding", 2050379843, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vec.call(null, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("tiltontec.rube.family", "*par*", "tiltontec.rube.family/*par*", 
  -1150296661, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol(null, "me", "me", 1501524834, null))))))), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "remove", "cljs.core/remove", 20102034, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "nil?", "cljs.core/nil?", 
  945071861, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", "flatten", "cljs.core/flatten", -237795822, null)), cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.sequence.call(null, cljs.core.seq.call(null, cljs.core.concat.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Symbol("cljs.core", 
  "list", "cljs.core/list", -1331406371, null)), tree)))))))))))))));
};
tiltontec.rube.family.the_kids.cljs$lang$maxFixedArity = 2;
tiltontec.rube.family.the_kids.cljs$lang$applyTo = function(seq11600) {
  var G__11601 = cljs.core.first.call(null, seq11600);
  var seq11600__$1 = cljs.core.next.call(null, seq11600);
  var G__11602 = cljs.core.first.call(null, seq11600__$1);
  var seq11600__$2 = cljs.core.next.call(null, seq11600__$1);
  return tiltontec.rube.family.the_kids.cljs$core$IFn$_invoke$arity$variadic(G__11601, G__11602, seq11600__$2);
};
tiltontec.rube.family.the_kids.cljs$lang$macro = true;
tiltontec.rube.family.mm_obj = Object;
cljs.core._add_method.call(null, tiltontec.rube.observer.observe, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "kids", "kids", 1156670771), new cljs.core.Keyword("tiltontec.rube.family", "family", "tiltontec.rube.family/family", -303685384)], null), function(_, ___$1, newk, oldk, ___$2) {
  if (cljs.core._EQ_.call(null, oldk, tiltontec.rube.cell_types.unbound)) {
    return null;
  } else {
    var lostks = clojure.set.difference.call(null, cljs.core.set.call(null, oldk), cljs.core.set.call(null, newk));
    if (cljs.core.empty_QMARK_.call(null, lostks)) {
      return null;
    } else {
      var seq__11606 = cljs.core.seq.call(null, lostks);
      var chunk__11607 = null;
      var count__11608 = 0;
      var i__11609 = 0;
      while (true) {
        if (i__11609 < count__11608) {
          var k = cljs.core._nth.call(null, chunk__11607, i__11609);
          tiltontec.rube.evaluate.not_to_be.call(null, k);
          var G__11610 = seq__11606;
          var G__11611 = chunk__11607;
          var G__11612 = count__11608;
          var G__11613 = i__11609 + 1;
          seq__11606 = G__11610;
          chunk__11607 = G__11611;
          count__11608 = G__11612;
          i__11609 = G__11613;
          continue;
        } else {
          var temp__4425__auto__ = cljs.core.seq.call(null, seq__11606);
          if (temp__4425__auto__) {
            var seq__11606__$1 = temp__4425__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, seq__11606__$1)) {
              var c__8571__auto__ = cljs.core.chunk_first.call(null, seq__11606__$1);
              var G__11614 = cljs.core.chunk_rest.call(null, seq__11606__$1);
              var G__11615 = c__8571__auto__;
              var G__11616 = cljs.core.count.call(null, c__8571__auto__);
              var G__11617 = 0;
              seq__11606 = G__11614;
              chunk__11607 = G__11615;
              count__11608 = G__11616;
              i__11609 = G__11617;
              continue;
            } else {
              var k = cljs.core.first.call(null, seq__11606__$1);
              tiltontec.rube.evaluate.not_to_be.call(null, k);
              var G__11618 = cljs.core.next.call(null, seq__11606__$1);
              var G__11619 = null;
              var G__11620 = 0;
              var G__11621 = 0;
              seq__11606 = G__11618;
              chunk__11607 = G__11619;
              count__11608 = G__11620;
              i__11609 = G__11621;
              continue;
            }
          } else {
            return null;
          }
        }
        break;
      }
    }
  }
});
goog.provide("tiltontec.rube.model");
goog.require("cljs.core");
goog.require("tiltontec.rube.cell_types");
goog.require("tiltontec.rube.integrity");
goog.require("tiltontec.rube.cells");
goog.require("tiltontec.rube.model_base");
goog.require("clojure.set");
goog.require("tiltontec.rube.evaluate");
goog.require("tiltontec.rube.utility");
goog.require("tiltontec.rube.observer");
goog.require("tiltontec.rube.ut_macros");
goog.require("tiltontec.rube.family");
tiltontec.rube.model.md_reset_BANG_ = function tiltontec$rube$model$md_reset_BANG_(me, slot, new_value) {
  var temp__4423__auto__ = tiltontec.rube.model_base.md_cell.call(null, me, slot);
  if (cljs.core.truth_(temp__4423__auto__)) {
    var c = temp__4423__auto__;
    return tiltontec.rube.cells.c_reset_BANG_.call(null, c, new_value);
  } else {
    tiltontec.rube.utility.err.call(null, cljs.core.str, "change to slot %s not mediated by cell", slot);
    return tiltontec.rube.utility.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me], null), new_value);
  }
};
tiltontec.rube.model.make = function tiltontec$rube$model$make() {
  var args__8833__auto__ = [];
  var len__8826__auto___11633 = arguments.length;
  var i__8827__auto___11634 = 0;
  while (true) {
    if (i__8827__auto___11634 < len__8826__auto___11633) {
      args__8833__auto__.push(arguments[i__8827__auto___11634]);
      var G__11635 = i__8827__auto___11634 + 1;
      i__8827__auto___11634 = G__11635;
      continue;
    } else {
    }
    break;
  }
  var argseq__8834__auto__ = 0 < args__8833__auto__.length ? new cljs.core.IndexedSeq(args__8833__auto__.slice(0), 0) : null;
  return tiltontec.rube.model.make.cljs$core$IFn$_invoke$arity$variadic(argseq__8834__auto__);
};
tiltontec.rube.model.make.cljs$core$IFn$_invoke$arity$variadic = function(iargs) {
  if (cljs.core.odd_QMARK_.call(null, cljs.core.count.call(null, iargs))) {
    return cljs.core.apply.call(null, tiltontec.rube.model.make, new cljs.core.Keyword(null, "type", "type", 1174270348), iargs);
  } else {
    var me = cljs.core.atom.call(null, cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "par", "par", -61778778), tiltontec.rube.family._STAR_par_STAR_], null), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__11625) {
      var vec__11626 = p__11625;
      var k = cljs.core.nth.call(null, vec__11626, 0, null);
      var v = cljs.core.nth.call(null, vec__11626, 1, null);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.truth_(tiltontec.rube.cell_types.c_ref_QMARK_.call(null, v)) ? tiltontec.rube.cell_types.unbound : v], null);
    }, cljs.core.filter.call(null, function(p__11627) {
      var vec__11628 = p__11627;
      var slot = cljs.core.nth.call(null, vec__11628, 0, null);
      var v = cljs.core.nth.call(null, vec__11628, 1, null);
      return !cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), slot);
    }, cljs.core.partition.call(null, 2, iargs))))), new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "state", "state", -1988618099), new cljs.core.Keyword(null, "nascent", "nascent", 443401807)], null), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, cljs.core.vec, cljs.core.filter.call(null, function(p__11629) {
      var vec__11630 = p__11629;
      var slot = cljs.core.nth.call(null, vec__11630, 0, null);
      var v = cljs.core.nth.call(null, vec__11630, 1, null);
      return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), slot);
    }, cljs.core.partition.call(null, 2, iargs))))));
    if (cljs.core.truth_(cljs.core.meta.call(null, me))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null))))].join(""));
    }
    tiltontec.rube.utility.rmap_meta_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "cz", "cz", 1670864932), me], null), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, cljs.core.vec, cljs.core.filter.call(null, function(me) {
      return function(p__11631) {
        var vec__11632 = p__11631;
        var slot = cljs.core.nth.call(null, vec__11632, 0, null);
        var v = cljs.core.nth.call(null, vec__11632, 1, null);
        return tiltontec.rube.model_base.md_install_cell.call(null, me, slot, v);
      };
    }(me), cljs.core.partition.call(null, 2, iargs)))));
    tiltontec.rube.integrity.call_with_integrity.call(null, new cljs.core.Keyword(null, "awaken", "awaken", -1899628152), me, function(me) {
      return function(opcode, defer_info) {
        return tiltontec.rube.model_base.md_awaken.call(null, me);
      };
    }(me));
    return me;
  }
};
tiltontec.rube.model.make.cljs$lang$maxFixedArity = 0;
tiltontec.rube.model.make.cljs$lang$applyTo = function(seq11624) {
  return tiltontec.rube.model.make.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq11624));
};
tiltontec.rube.model.kwt = "kenneth.tilton@ktilt.com";
cljs.core.apply.call(null, cljs.core.str, cljs.core.reduce.call(null, function(p__11636, p__11637) {
  var vec__11638 = p__11636;
  var as = cljs.core.nthnext.call(null, vec__11638, 0);
  var vec__11639 = p__11637;
  var xs = cljs.core.nthnext.call(null, vec__11639, 0);
  return cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, as, xs));
}, cljs.core.partition.call(null, 3, tiltontec.rube.model.kwt)));
goog.provide("tiltontec.rube.family_test");
goog.require("cljs.core");
goog.require("tiltontec.rube.model");
goog.require("tiltontec.rube.family");
goog.require("tiltontec.rube.cell_types");
goog.require("tiltontec.rube.integrity");
goog.require("tiltontec.rube.cells");
goog.require("cljs.test");
goog.require("tiltontec.rube.model_base");
goog.require("tiltontec.rube.evaluate");
goog.require("tiltontec.rube.utility");
goog.require("tiltontec.rube.observer");
goog.require("tiltontec.rube.ut_macros");
tiltontec.rube.family_test.fm_0 = function tiltontec$rube$family_test$fm_0() {
  return cljs.test.test_var.call(null, tiltontec$rube$family_test$fm_0.cljs$lang$var);
};
tiltontec.rube.family_test.fm_0.cljs$lang$test = function() {
  tiltontec.rube.cell_types.cells_init.call(null);
  var u = tiltontec.rube.model.make.call(null, new cljs.core.Keyword(null, "kon", "kon", 437684854), tiltontec.rube.cells.c_in.call(null, false, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, 
  null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
  "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), 3))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
    if (cljs.core.truth_(tiltontec.rube.model_base.md_get.call(null, me, new cljs.core.Keyword(null, "kon", "kon", 437684854)))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.rube.model.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), tiltontec.rube.cells.c_in.call(null, 3))], null);
    } else {
      return null;
    }
  }));
  try {
    var values__10877__auto___11655 = cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "kids", "kids", 1156670771)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u)));
    var result__10878__auto___11656 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10877__auto___11655);
    if (cljs.core.truth_(result__10878__auto___11656)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "u", "u", 483896742, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10877__auto___11655), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "u", "u", 483896742, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10877__auto___11655)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11652) {
    var t__10915__auto___11657 = e11652;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "u", "u", 483896742, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10915__auto___11657, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var kc = tiltontec.rube.model_base.md_cell.call(null, u, new cljs.core.Keyword(null, "kids", "kids", 1156670771));
  var kon = tiltontec.rube.model_base.md_cell.call(null, u, new cljs.core.Keyword(null, "kon", "kon", 437684854));
  tiltontec.rube.cells.c_reset_BANG_.call(null, kon, true);
  try {
    var values__10877__auto___11658 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, (new cljs.core.Keyword(null, "kids", "kids", 1156670771)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u)))), 1);
    var result__10878__auto___11659 = cljs.core.apply.call(null, cljs.core._EQ_, values__10877__auto___11658);
    if (cljs.core.truth_(result__10878__auto___11659)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10877__auto___11658), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10877__auto___11658)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], 
      null));
    }
  } catch (e11653) {
    var t__10915__auto___11660 = e11653;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10915__auto___11660, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10877__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), u), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423));
    var result__10878__auto__ = cljs.core.apply.call(null, tiltontec.rube.family.fget, values__10877__auto__);
    if (cljs.core.truth_(result__10878__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.family.fget, values__10877__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__10877__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10878__auto__;
  } catch (e11654) {
    var t__10915__auto__ = e11654;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10915__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.family_test.fm_0.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.family_test.fm_0;
}, new cljs.core.Symbol("tiltontec.rube.family-test", "fm-0", "tiltontec.rube.family-test/fm-0", 1046013041, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.family-test", "tiltontec.rube.family-test", 1315254813, null), new cljs.core.Symbol(null, "fm-0", "fm-0", -1904222876, null), "test/tiltontec/rube/family_test.cljc", 14, 1, 49, 49, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.family_test.fm_0) ? 
tiltontec.rube.family_test.fm_0.cljs$lang$test : null]));
tiltontec.rube.family_test.fm_1 = function tiltontec$rube$family_test$fm_1() {
  return cljs.test.test_var.call(null, tiltontec$rube$family_test$fm_1.cljs$lang$var);
};
tiltontec.rube.family_test.fm_1.cljs$lang$test = function() {
  try {
    var values__10877__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2 + 2), 4);
    var result__10878__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10877__auto__);
    if (cljs.core.truth_(result__10878__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 2, 2)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core._EQ_, values__10877__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 2, 2)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10877__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10878__auto__;
  } catch (e11661) {
    var t__10915__auto__ = e11661;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 2, 2)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10915__auto__, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.family_test.fm_1.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.family_test.fm_1;
}, new cljs.core.Symbol("tiltontec.rube.family-test", "fm-1", "tiltontec.rube.family-test/fm-1", 474667105, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.family-test", "tiltontec.rube.family-test", 1315254813, null), new cljs.core.Symbol(null, "fm-1", "fm-1", -329834626, null), "test/tiltontec/rube/family_test.cljc", 14, 1, 69, 69, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.family_test.fm_1) ? 
tiltontec.rube.family_test.fm_1.cljs$lang$test : null]));
tiltontec.rube.family_test.fm_2 = function tiltontec$rube$family_test$fm_2() {
  return cljs.test.test_var.call(null, tiltontec$rube$family_test$fm_2.cljs$lang$var);
};
tiltontec.rube.family_test.fm_2.cljs$lang$test = function() {
  var u = tiltontec.rube.model.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "uni", "uni", -1194876440), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, 
  "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aa", "aa", 1986357152)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, 
  "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bba", "bba", -1624545451)), cljs.core.list(new cljs.core.Symbol("md", 
  "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.rube.model.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aa", "aa", 1986357152)), tiltontec.rube.model.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), 
    new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), 
    new cljs.core.Keyword(null, "bba", "bba", -1624545451)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 
    729973257), function(me, cache) {
      return function(slot_c_SHARP___$1) {
        var me__$1 = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP___$1);
        var cache__$1 = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP___$1);
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.rube.model.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me__$1, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bba", "bba", -1624545451)), tiltontec.rube.model.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me__$1, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bbb", 
        "bbb", -1323051640))], null);
      };
    }(me, cache)))], null);
  }));
  var bba = tiltontec.rube.family.fget.call(null, new cljs.core.Keyword(null, "bba", "bba", -1624545451), u, new cljs.core.Keyword(null, "inside?", "inside?", 639243696), true, new cljs.core.Keyword(null, "must?", "must?", 1639898554), true);
  try {
    var value__10880__auto___11667 = bba;
    if (cljs.core.truth_(value__10880__auto___11667)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10880__auto___11667, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__10880__auto___11667, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11662) {
    var t__10915__auto___11668 = e11662;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10915__auto___11668, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10877__auto___11669 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "up?", "up?", 77854972)), true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), bba), new cljs.core.Keyword(null, "uni", "uni", -1194876440));
    var result__10878__auto___11670 = cljs.core.apply.call(null, tiltontec.rube.family.fget, values__10877__auto___11669);
    if (cljs.core.truth_(result__10878__auto___11670)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("fm", "fget", "fm/fget", 1054681297, null), new cljs.core.Keyword(null, "uni", "uni", -1194876440), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.family.fget, values__10877__auto___11669), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("fm", "fget", "fm/fget", 1054681297, null), new cljs.core.Keyword(null, "uni", "uni", -1194876440), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol("fm", "fget", "fm/fget", 1054681297, null), values__10877__auto___11669)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11663) {
    var t__10915__auto___11671 = e11663;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("fm", "fget", "fm/fget", 1054681297, null), new cljs.core.Keyword(null, "uni", "uni", -1194876440), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10915__auto___11671, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10877__auto___11672 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "up?", "up?", 77854972)), false), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), bba), new cljs.core.Keyword(null, "aa", "aa", 1986357152));
    var result__10878__auto___11673 = cljs.core.apply.call(null, tiltontec.rube.family.fget, values__10877__auto___11672);
    if (cljs.core.truth_(result__10878__auto___11673)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.family.fget, values__10877__auto___11672), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__10877__auto___11672)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11664) {
    var t__10915__auto___11674 = e11664;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
    false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10915__auto___11674, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10877__auto___11675 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "up?", "up?", 77854972)), true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), bba), new cljs.core.Keyword(null, "bb", "bb", 75940837));
    var result__10878__auto___11676 = cljs.core.apply.call(null, tiltontec.rube.family.fget, values__10877__auto___11675);
    if (cljs.core.truth_(result__10878__auto___11676)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.family.fget, values__10877__auto___11675), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__10877__auto___11675)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11665) {
    var t__10915__auto___11677 = e11665;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
    true, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10915__auto___11677, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10877__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "up?", "up?", 77854972)), false), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), bba), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640));
    var result__10878__auto__ = cljs.core.apply.call(null, tiltontec.rube.family.fget, values__10877__auto__);
    if (cljs.core.truth_(result__10878__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.family.fget, values__10877__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 639243696), 
      false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__10877__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10878__auto__;
  } catch (e11666) {
    var t__10915__auto__ = e11666;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "bbb", "bbb", -1323051640), new cljs.core.Symbol(null, "bba", "bba", 15986076, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), false, new cljs.core.Keyword(null, "up?", "up?", 77854972), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10915__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.family_test.fm_2.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.family_test.fm_2;
}, new cljs.core.Symbol("tiltontec.rube.family-test", "fm-2", "tiltontec.rube.family-test/fm-2", 1290956942, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.family-test", "tiltontec.rube.family-test", 1315254813, null), new cljs.core.Symbol(null, "fm-2", "fm-2", -589475911, null), "test/tiltontec/rube/family_test.cljc", 14, 1, 74, 74, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.family_test.fm_2) ? 
tiltontec.rube.family_test.fm_2.cljs$lang$test : null]));
tiltontec.rube.family_test.fm_3 = function tiltontec$rube$family_test$fm_3() {
  return cljs.test.test_var.call(null, tiltontec$rube$family_test$fm_3.cljs$lang$var);
};
tiltontec.rube.family_test.fm_3.cljs$lang$test = function() {
  var u = tiltontec.rube.model.make.call(null, new cljs.core.Keyword(null, "u63", "u63", 1660619135), tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130)), cljs.core.list(new cljs.core.Symbol(null, 
  "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
    return tiltontec.rube.model_base.md_get.call(null, tiltontec.rube.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), me), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130)) + tiltontec.rube.model_base.md_get.call(null, tiltontec.rube.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), me), new cljs.core.Keyword(null, "bb21", "bb21", 848021780));
  }), new cljs.core.Keyword(null, "kon", "kon", 437684854), tiltontec.rube.cells.c_in.call(null, false), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "remove", "remove", 1509103113, null), new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "vector", "vector", -751469611, null), 
  cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 
  2, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), 3)), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
  "me", "me", 1501524834, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 
  517820292, null), 3))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "par", "par", -61778778), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "*", 
  "*", 345799209, null), 7, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912)))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
    return cljs.core.remove.call(null, cljs.core.nil_QMARK_, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tiltontec.rube.model.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130), tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), 
    cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 2, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(me, cache) {
      return function(slot_c_SHARP___$1) {
        var me__$1 = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP___$1);
        var cache__$1 = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP___$1);
        return 2 * tiltontec.rube.model_base.md_get.call(null, tiltontec.rube.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), me__$1), new cljs.core.Keyword(null, "bb21", "bb21", 848021780));
      };
    }(me, cache)), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912), tiltontec.rube.cells.c_in.call(null, 3)), cljs.core.truth_(tiltontec.rube.model_base.md_get.call(null, me, new cljs.core.Keyword(null, "kon", "kon", 437684854))) ? tiltontec.rube.model.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), 
    tiltontec.rube.cells.c_in.call(null, 3)) : null, tiltontec.rube.model.make.call(null, new cljs.core.Keyword(null, "par", "par", -61778778), me, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780), tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 
    7, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(me, cache) {
      return function(slot_c_SHARP___$1) {
        var me__$1 = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP___$1);
        var cache__$1 = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP___$1);
        return 7 * tiltontec.rube.model_base.md_get.call(null, tiltontec.rube.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), me__$1), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912));
      };
    }(me, cache)))], null));
  }));
  try {
    var values__10877__auto___11686 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.model_base.md_get.call(null, u, new cljs.core.Keyword(null, "u63", "u63", 1660619135))), 63);
    var result__10878__auto___11687 = cljs.core.apply.call(null, cljs.core._EQ_, values__10877__auto___11686);
    if (cljs.core.truth_(result__10878__auto___11687)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
      "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10877__auto___11686), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
      "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10877__auto___11686)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11678) {
    var t__10915__auto___11688 = e11678;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
    "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10915__auto___11688, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10877__auto___11689 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.model_base.md_get.call(null, tiltontec.rube.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), u), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130))), 42);
    var result__10878__auto___11690 = cljs.core.apply.call(null, cljs.core._EQ_, values__10877__auto___11689);
    if (cljs.core.truth_(result__10878__auto___11690)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
      "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10877__auto___11689), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
      "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10877__auto___11689)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11679) {
    var t__10915__auto___11691 = e11679;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
    "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10915__auto___11691, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10877__auto___11692 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.model_base.md_get.call(null, tiltontec.rube.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), u), new cljs.core.Keyword(null, "bb21", "bb21", 848021780))), 21);
    var result__10878__auto___11693 = cljs.core.apply.call(null, cljs.core._EQ_, values__10877__auto___11692);
    if (cljs.core.truth_(result__10878__auto___11693)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
      "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10877__auto___11692), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
      "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10877__auto___11692)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11680) {
    var t__10915__auto___11694 = e11680;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
    "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10915__auto___11694, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10877__auto___11695 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.family.fget.call(null, new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), u, new cljs.core.Keyword(null, "must?", "must?", 1639898554), false));
    var result__10878__auto___11696 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10877__auto___11695);
    if (cljs.core.truth_(result__10878__auto___11696)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
      "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10877__auto___11695), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
      "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10877__auto___11695)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11681) {
    var t__10915__auto___11697 = e11681;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
    "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10915__auto___11697, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.cells.c_reset_BANG_.call(null, tiltontec.rube.model_base.md_cell.call(null, u, new cljs.core.Keyword(null, "kon", "kon", 437684854)), true);
  try {
    var value__10880__auto___11698 = (new cljs.core.Keyword(null, "kon", "kon", 437684854)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u));
    if (cljs.core.truth_(value__10880__auto___11698)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__10880__auto___11698, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__10880__auto___11698, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11682) {
    var t__10915__auto___11699 = e11682;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10915__auto___11699, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10877__auto___11700 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kon", "kon", 437684854)), u);
    var result__10878__auto___11701 = cljs.core.apply.call(null, tiltontec.rube.model_base.md_cell, values__10877__auto___11700);
    if (cljs.core.truth_(result__10878__auto___11701)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core.cons.call(null, tiltontec.rube.model_base.md_cell, values__10877__auto___11700), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), values__10877__auto___11700)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11683) {
    var t__10915__auto___11702 = e11683;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
    t__10915__auto___11702, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10877__auto___11703 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, (new cljs.core.Keyword(null, "kids", "kids", 1156670771)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u)))), 3);
    var result__10878__auto___11704 = cljs.core.apply.call(null, cljs.core._EQ_, values__10877__auto___11703);
    if (cljs.core.truth_(result__10878__auto___11704)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10877__auto___11703), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10877__auto___11703)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], 
      null));
    }
  } catch (e11684) {
    var t__10915__auto___11705 = e11684;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10915__auto___11705, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10877__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), u), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423));
    var result__10878__auto__ = cljs.core.apply.call(null, tiltontec.rube.family.fget, values__10877__auto__);
    if (cljs.core.truth_(result__10878__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.family.fget, values__10877__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__10877__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10878__auto__;
  } catch (e11685) {
    var t__10915__auto__ = e11685;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10915__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.family_test.fm_3.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.family_test.fm_3;
}, new cljs.core.Symbol("tiltontec.rube.family-test", "fm-3", "tiltontec.rube.family-test/fm-3", -797302532, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.family-test", "tiltontec.rube.family-test", 1315254813, null), new cljs.core.Symbol(null, "fm-3", "fm-3", -1601771135, null), "test/tiltontec/rube/family_test.cljc", 14, 1, 106, 106, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.family_test.fm_3) ? 
tiltontec.rube.family_test.fm_3.cljs$lang$test : null]));
tiltontec.rube.family_test.fm_3x = function tiltontec$rube$family_test$fm_3x() {
  return cljs.test.test_var.call(null, tiltontec$rube$family_test$fm_3x.cljs$lang$var);
};
tiltontec.rube.family_test.fm_3x.cljs$lang$test = function() {
  var u = tiltontec.rube.model.make.call(null, new cljs.core.Keyword(null, "u63", "u63", 1660619135), tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130)), cljs.core.list(new cljs.core.Symbol(null, 
  "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
    return tiltontec.rube.model_base.md_get.call(null, tiltontec.rube.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), me), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130)) + tiltontec.rube.model_base.md_get.call(null, tiltontec.rube.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), me), new cljs.core.Keyword(null, "bb21", "bb21", 848021780));
  }), new cljs.core.Keyword(null, "kon", "kon", 437684854), tiltontec.rube.cells.c_in.call(null, false), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "the-kids", "the-kids", 1487890778, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), 
  new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 2, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912), cljs.core.list(new cljs.core.Symbol(null, 
  "c-in", "c-in", 517820292, null), 3)), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), 
  new cljs.core.Keyword(null, "kzo", "kzo", 29004960), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), 3))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 
  345799209, null), 7, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_11706 = tiltontec.rube.family._STAR_par_STAR_;
    tiltontec.rube.family._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.model.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780), tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, 
      "*", "*", 345799209, null), 7, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_11706, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP___$1);
          return 7 * tiltontec.rube.model_base.md_get.call(null, tiltontec.rube.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), me__$1), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912));
        };
      }(_STAR_par_STAR_11706, me, cache)))), cljs.core.truth_(tiltontec.rube.model_base.md_get.call(null, me, new cljs.core.Keyword(null, "kon", "kon", 437684854))) ? tiltontec.rube.model.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Keyword(null, "kzo", "kzo", 29004960), tiltontec.rube.cells.c_in.call(null, 3)) : null), tiltontec.rube.model.make.call(null, new cljs.core.Keyword(null, "name", "name", 
      1843675177), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130), tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 2, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", "bb21", 848021780)))), 
      new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_11706, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP___$1);
          return 2 * tiltontec.rube.model_base.md_get.call(null, tiltontec.rube.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), me__$1), new cljs.core.Keyword(null, "bb21", "bb21", 848021780));
        };
      }(_STAR_par_STAR_11706, me, cache)), new cljs.core.Keyword(null, "aa3", "aa3", 1601313912), tiltontec.rube.cells.c_in.call(null, 3)))));
    } finally {
      tiltontec.rube.family._STAR_par_STAR_ = _STAR_par_STAR_11706;
    }
  }));
  try {
    var values__10877__auto___11715 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.model_base.md_get.call(null, u, new cljs.core.Keyword(null, "u63", "u63", 1660619135))), 63);
    var result__10878__auto___11716 = cljs.core.apply.call(null, cljs.core._EQ_, values__10877__auto___11715);
    if (cljs.core.truth_(result__10878__auto___11716)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
      "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10877__auto___11715), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
      "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10877__auto___11715)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11707) {
    var t__10915__auto___11717 = e11707;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 63, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, 
    "u63", "u63", 1660619135))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10915__auto___11717, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10877__auto___11718 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.model_base.md_get.call(null, tiltontec.rube.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), u), new cljs.core.Keyword(null, "aa42", "aa42", 2141103130))), 42);
    var result__10878__auto___11719 = cljs.core.apply.call(null, cljs.core._EQ_, values__10877__auto___11718);
    if (cljs.core.truth_(result__10878__auto___11719)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
      "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10877__auto___11718), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
      "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10877__auto___11718)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11708) {
    var t__10915__auto___11720 = e11708;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "aa42", 
    "aa42", 2141103130), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10915__auto___11720, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10877__auto___11721 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.model_base.md_get.call(null, tiltontec.rube.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837), u), new cljs.core.Keyword(null, "bb21", "bb21", 848021780))), 21);
    var result__10878__auto___11722 = cljs.core.apply.call(null, cljs.core._EQ_, values__10877__auto___11721);
    if (cljs.core.truth_(result__10878__auto___11722)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
      "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10877__auto___11721), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
      "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10877__auto___11721)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11709) {
    var t__10915__auto___11723 = e11709;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "bb21", 
    "bb21", 848021780), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10915__auto___11723, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10877__auto___11724 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.family.fget.call(null, new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), u, new cljs.core.Keyword(null, "must?", "must?", 1639898554), false));
    var result__10878__auto___11725 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10877__auto___11724);
    if (cljs.core.truth_(result__10878__auto___11725)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
      "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10877__auto___11724), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
      "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10877__auto___11724)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11710) {
    var t__10915__auto___11726 = e11710;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", 
    "u", 483896742, null), new cljs.core.Keyword(null, "must?", "must?", 1639898554), false)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10915__auto___11726, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.cells.c_reset_BANG_.call(null, tiltontec.rube.model_base.md_cell.call(null, u, new cljs.core.Keyword(null, "kon", "kon", 437684854)), true);
  try {
    var value__10880__auto___11727 = (new cljs.core.Keyword(null, "kon", "kon", 437684854)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u));
    if (cljs.core.truth_(value__10880__auto___11727)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__10880__auto___11727, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__10880__auto___11727, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11711) {
    var t__10915__auto___11728 = e11711;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Keyword(null, "kon", "kon", 437684854), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10915__auto___11728, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10877__auto___11729 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "kon", "kon", 437684854)), u);
    var result__10878__auto___11730 = cljs.core.apply.call(null, tiltontec.rube.model_base.md_cell, values__10877__auto___11729);
    if (cljs.core.truth_(result__10878__auto___11730)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core.cons.call(null, tiltontec.rube.model_base.md_cell, values__10877__auto___11729), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
      cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), values__10877__auto___11729)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11712) {
    var t__10915__auto___11731 = e11712;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "kon", "kon", 437684854)), new cljs.core.Keyword(null, "actual", "actual", 107306363), 
    t__10915__auto___11731, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10877__auto___11732 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, (new cljs.core.Keyword(null, "kids", "kids", 1156670771)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, u)))), 3);
    var result__10878__auto___11733 = cljs.core.apply.call(null, cljs.core._EQ_, values__10877__auto___11732);
    if (cljs.core.truth_(result__10878__auto___11733)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10877__auto___11732), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10877__auto___11732)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], 
      null));
    }
  } catch (e11713) {
    var t__10915__auto___11734 = e11713;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Keyword(null, "kids", "kids", 1156670771), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "u", "u", 483896742, null))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10915__auto___11734, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10877__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, true), new cljs.core.Keyword(null, "inside?", "inside?", 639243696)), u), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423));
    var result__10878__auto__ = cljs.core.apply.call(null, tiltontec.rube.family.fget, values__10877__auto__);
    if (cljs.core.truth_(result__10878__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.family.fget, values__10877__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
      639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), values__10877__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10878__auto__;
  } catch (e11714) {
    var t__10915__auto__ = e11714;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fget", "fget", 1054684438, null), new cljs.core.Keyword(null, "konzo", "konzo", -2093297423), new cljs.core.Symbol(null, "u", "u", 483896742, null), new cljs.core.Keyword(null, "inside?", "inside?", 
    639243696), true), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10915__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.family_test.fm_3x.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.family_test.fm_3x;
}, new cljs.core.Symbol("tiltontec.rube.family-test", "fm-3x", "tiltontec.rube.family-test/fm-3x", -1546691004, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.family-test", "tiltontec.rube.family-test", 1315254813, null), new cljs.core.Symbol(null, "fm-3x", "fm-3x", 875338153, null), "test/tiltontec/rube/family_test.cljc", 15, 1, 139, 139, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.family_test.fm_3x) ? 
tiltontec.rube.family_test.fm_3x.cljs$lang$test : null]));
goog.provide("tiltontec.rube.integrity_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.rube.ut_macros");
goog.require("tiltontec.rube.utility");
goog.require("tiltontec.rube.cell_types");
goog.require("tiltontec.rube.integrity");
goog.require("tiltontec.rube.evaluate");
goog.require("tiltontec.rube.observer");
goog.require("tiltontec.rube.cells");
tiltontec.rube.integrity_test.obsdbg = function tiltontec$rube$integrity_test$obsdbg() {
  return null;
};
tiltontec.rube.integrity_test.obs_setf = function tiltontec$rube$integrity_test$obs_setf() {
  return cljs.test.test_var.call(null, tiltontec$rube$integrity_test$obs_setf.cljs$lang$var);
};
tiltontec.rube.integrity_test.obs_setf.cljs$lang$test = function() {
  tiltontec.rube.cell_types.cells_init.call(null);
  try {
    var values__9846__auto___16133 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_pulse_PLUS_));
    var result__9847__auto___16134 = cljs.core.apply.call(null, cljs.core.zero_QMARK_, values__9846__auto___16133);
    if (cljs.core.truth_(result__9847__auto___16134)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.zero_QMARK_, values__9846__auto___16133), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), values__9846__auto___16133)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16122) {
    var t__9884__auto___16135 = e16122;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16135, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var alarm = tiltontec.rube.cells.c_in.call(null, new cljs.core.Keyword(null, "undefined", "undefined", -1970511116), new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.rube.integrity_test.obsdbg.call(null));
  var act = tiltontec.rube.cells.c_in.call(null, null, new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.rube.integrity_test.obsdbg.call(null));
  var loc = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(alarm, act) {
    return function(slot, me, new$, old, c) {
      if (cljs.core._EQ_.call(null, new$, new cljs.core.Keyword(null, "missing", "missing", 362507769))) {
        return null;
      } else {
        if (cljs.core._EQ_.call(null, cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_pulse_PLUS_), 2)) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null)), 2)))].join(""));
        }
        if (cljs.core.not.call(null, tiltontec.rube.cell_types._STAR_within_integrity_STAR_)) {
          throw new java.lang.Exception("c-reset-next!\x3e deferred change to %s not under WITH-INTEGRITY supervision.", tiltontec.rube.cell_types.c_slot.call(null, alarm));
        } else {
          return tiltontec.rube.integrity.ufb_add.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "c-reset-next!", "c-reset-next!", -1735615308), function(alarm, act) {
            return function(opcode, defer_info) {
              var c__11358__auto__ = alarm;
              var new_value__11359__auto__ = function() {
                var G__16123 = new$ instanceof cljs.core.Keyword ? new$.fqn : null;
                switch(G__16123) {
                  case "home":
                    return new cljs.core.Keyword(null, "off", "off", 606440789);
                    break;
                  case "away":
                    return new cljs.core.Keyword(null, "on", "on", 173873944);
                    break;
                  default:
                    return tiltontec.rube.utility.err.call(null, cljs.core.str, "unexpected loc %s", new$);
                }
              }();
              return tiltontec.rube.cells.call_c_reset_next_BANG_.call(null, c__11358__auto__, new_value__11359__auto__);
            };
          }(alarm, act)], null));
        }
      }
    };
  }(alarm, act), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, 
  "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(alarm, act) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      var G__16124 = tiltontec.rube.evaluate.c_get.call(null, act) instanceof cljs.core.Keyword ? tiltontec.rube.evaluate.c_get.call(null, act).fqn : null;
      switch(G__16124) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(alarm, act));
  var alarm_speak = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(alarm, act, loc) {
    return function(slot, me, new$, old, c) {
      try {
        var values__9846__auto___16138 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
          var G__16126 = tiltontec.rube.evaluate.c_get.call(null, act) instanceof cljs.core.Keyword ? tiltontec.rube.evaluate.c_get.call(null, act).fqn : null;
          switch(G__16126) {
            case "return":
              return new cljs.core.Keyword(null, "off", "off", 606440789);
              break;
            case "leave":
              return new cljs.core.Keyword(null, "on", "on", 173873944);
              break;
            default:
              return new cljs.core.Keyword(null, "undefined", "undefined", -1970511116);
          }
        }()), tiltontec.rube.evaluate.c_get.call(null, alarm));
        var result__9847__auto___16139 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16138);
        if (cljs.core.truth_(result__9847__auto___16139)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16138), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16138)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e16125) {
        var t__9884__auto___16141 = e16125;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
        "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__9884__auto___16141, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_pulse.call(null, c)), tiltontec.rube.cell_types.c_pulse.call(null, loc)), tiltontec.rube.cell_types.c_pulse.call(null, act)), tiltontec.rube.cell_types._PLUS_pulse_PLUS_);
        var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
        if (cljs.core.truth_(result__9847__auto__)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
          "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", 
          -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
          "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, 
          "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return result__9847__auto__;
      } catch (e16127) {
        var t__9884__auto__ = e16127;
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
        "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    };
  }(alarm, act, loc), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), "alarm-speak sees act ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(alarm, 
  act, loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      return [cljs.core.str("alarm-speak sees act "), cljs.core.str(tiltontec.rube.evaluate.c_get.call(null, act))].join("");
    };
  }(alarm, act, loc));
  try {
    var values__9846__auto___16142 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "undefined", "undefined", -1970511116)), tiltontec.rube.evaluate.c_get.call(null, alarm));
    var result__9847__auto___16143 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16142);
    if (cljs.core.truth_(result__9847__auto___16143)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
      "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16142), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
      "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16142)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16128) {
    var t__9884__auto___16144 = e16128;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
    "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16144, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16145 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_pulse_PLUS_)), 1);
    var result__9847__auto___16146 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16145);
    if (cljs.core.truth_(result__9847__auto___16146)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16145), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16145)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16129) {
    var t__9884__auto___16147 = e16129;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16147, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16148 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "missing", "missing", 362507769)), tiltontec.rube.evaluate.c_get.call(null, loc));
    var result__9847__auto___16149 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16148);
    if (cljs.core.truth_(result__9847__auto___16149)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
      "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16148), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
      "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16148)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16130) {
    var t__9884__auto___16150 = e16130;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
    "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16150, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16151 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_pulse_PLUS_)), 1);
    var result__9847__auto___16152 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16151);
    if (cljs.core.truth_(result__9847__auto___16152)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16151), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16151)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16131) {
    var t__9884__auto___16153 = e16131;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16153, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.cells.c_reset_BANG_.call(null, act, new cljs.core.Keyword(null, "leave", "leave", 1022579443));
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_pulse_PLUS_)), 3);
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16132) {
    var t__9884__auto__ = e16132;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.integrity_test.obs_setf.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.integrity_test.obs_setf;
}, new cljs.core.Symbol("tiltontec.rube.integrity-test", "obs-setf", "tiltontec.rube.integrity-test/obs-setf", -1860386627, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.integrity-test", "tiltontec.rube.integrity-test", 817836401, null), new cljs.core.Symbol(null, "obs-setf", "obs-setf", -941176517, null), "test/tiltontec/rube/integrity_test.cljc", 18, 1, 45, 45, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.integrity_test.obs_setf) ? tiltontec.rube.integrity_test.obs_setf.cljs$lang$test : null]));
tiltontec.rube.integrity_test.obs_setf_bad_caught = function tiltontec$rube$integrity_test$obs_setf_bad_caught() {
  return cljs.test.test_var.call(null, tiltontec$rube$integrity_test$obs_setf_bad_caught.cljs$lang$var);
};
tiltontec.rube.integrity_test.obs_setf_bad_caught.cljs$lang$test = function() {
  tiltontec.rube.cell_types.cells_init.call(null);
  var alarm = tiltontec.rube.cells.c_in.call(null, new cljs.core.Keyword(null, "undefined", "undefined", -1970511116), new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.rube.integrity_test.obsdbg.call(null));
  var act = tiltontec.rube.cells.c_in.call(null, null, new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.rube.integrity_test.obsdbg.call(null));
  var loc = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(alarm, act) {
    return function(slot, me, new$, old, c) {
      try {
        try {
          tiltontec.rube.cells.c_reset_BANG_.call(null, act, new cljs.core.Keyword(null, "leave", "leave", 1022579443));
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /c-reset!> change/, cljs.core.list(new cljs.core.Symbol(null, "c-reset!", 
          "c-reset!", 561145783, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "leave", "leave", 1022579443))), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } catch (e16155) {
          if (e16155 instanceof Error) {
            var e__9878__auto___16165 = e16155;
            var m__9879__auto___16166 = e__9878__auto___16165.message;
            if (cljs.core.truth_(cljs.core.re_find.call(null, /c-reset!> change/, m__9879__auto___16166))) {
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /c-reset!> change/, cljs.core.list(new cljs.core.Symbol(null, "c-reset!", 
              "c-reset!", 561145783, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "leave", "leave", 1022579443))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__9878__auto___16165, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            } else {
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /c-reset!> change/, cljs.core.list(new cljs.core.Symbol(null, "c-reset!", 
              "c-reset!", 561145783, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "leave", "leave", 1022579443))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__9878__auto___16165, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
          } else {
            throw e16155;
          }
        }
      } catch (e16154) {
        var t__9884__auto___16167 = e16154;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /c-reset!> change/, cljs.core.list(new cljs.core.Symbol(null, "c-reset!", 
        "c-reset!", 561145783, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "leave", "leave", 1022579443))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16167, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      if (cljs.core._EQ_.call(null, new$, new cljs.core.Keyword(null, "missing", "missing", 362507769))) {
        return null;
      } else {
        if (cljs.core.not.call(null, tiltontec.rube.cell_types._STAR_within_integrity_STAR_)) {
          throw new java.lang.Exception("c-reset-next!\x3e deferred change to %s not under WITH-INTEGRITY supervision.", tiltontec.rube.cell_types.c_slot.call(null, alarm));
        } else {
          return tiltontec.rube.integrity.ufb_add.call(null, new cljs.core.Keyword(null, "change", "change", -1163046502), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "c-reset-next!", "c-reset-next!", -1735615308), function(alarm, act) {
            return function(opcode, defer_info) {
              var c__11358__auto__ = alarm;
              var new_value__11359__auto__ = function() {
                var G__16156 = new$ instanceof cljs.core.Keyword ? new$.fqn : null;
                switch(G__16156) {
                  case "home":
                    return new cljs.core.Keyword(null, "off", "off", 606440789);
                    break;
                  case "away":
                    return new cljs.core.Keyword(null, "on", "on", 173873944);
                    break;
                  default:
                    return tiltontec.rube.utility.err.call(null, cljs.core.str, "unexpected loc %s", new$);
                }
              }();
              return tiltontec.rube.cells.call_c_reset_next_BANG_.call(null, c__11358__auto__, new_value__11359__auto__);
            };
          }(alarm, act)], null));
        }
      }
    };
  }(alarm, act), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, 
  "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(alarm, act) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      var G__16157 = tiltontec.rube.evaluate.c_get.call(null, act) instanceof cljs.core.Keyword ? tiltontec.rube.evaluate.c_get.call(null, act).fqn : null;
      switch(G__16157) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(alarm, act));
  var alarm_speak = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(alarm, act, loc) {
    return function(slot, me, new$, old, c) {
      tiltontec.rube.ut_macros.call_trc.call(null, ":alarm-speak", tiltontec.rube.evaluate.c_get.call(null, act), new cljs.core.Keyword(null, "sees", "sees", -135494032), tiltontec.rube.evaluate.c_get.call(null, alarm), tiltontec.rube.evaluate.c_get.call(null, loc));
      try {
        var values__9846__auto___16170 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
          var G__16159 = tiltontec.rube.evaluate.c_get.call(null, act) instanceof cljs.core.Keyword ? tiltontec.rube.evaluate.c_get.call(null, act).fqn : null;
          switch(G__16159) {
            case "return":
              return new cljs.core.Keyword(null, "off", "off", 606440789);
              break;
            case "leave":
              return new cljs.core.Keyword(null, "on", "on", 173873944);
              break;
            default:
              return new cljs.core.Keyword(null, "undefined", "undefined", -1970511116);
          }
        }()), tiltontec.rube.evaluate.c_get.call(null, alarm));
        var result__9847__auto___16171 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16170);
        if (cljs.core.truth_(result__9847__auto___16171)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16170), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16170)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e16158) {
        var t__9884__auto___16173 = e16158;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), cljs.core.list(new cljs.core.Symbol(null, 
        "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "on", "on", 173873944), new cljs.core.Keyword(null, "undefined", "undefined", -1970511116))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__9884__auto___16173, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_pulse.call(null, c)), tiltontec.rube.cell_types.c_pulse.call(null, loc)), tiltontec.rube.cell_types.c_pulse.call(null, act)), tiltontec.rube.cell_types._PLUS_pulse_PLUS_);
        var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
        if (cljs.core.truth_(result__9847__auto__)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
          "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", 
          -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
          "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, 
          "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return result__9847__auto__;
      } catch (e16160) {
        var t__9884__auto__ = e16160;
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, null), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, 
        "act", "act", 1830763413, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), cljs.core.list(new cljs.core.Symbol(null, "c-pulse", "c-pulse", 1411117420, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    };
  }(alarm, act, loc), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), "alarm-speak sees act ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(alarm, 
  act, loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      return [cljs.core.str("alarm-speak sees act "), cljs.core.str(tiltontec.rube.evaluate.c_get.call(null, act))].join("");
    };
  }(alarm, act, loc));
  try {
    var values__9846__auto___16174 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "undefined", "undefined", -1970511116)), tiltontec.rube.evaluate.c_get.call(null, alarm));
    var result__9847__auto___16175 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16174);
    if (cljs.core.truth_(result__9847__auto___16175)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
      "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16174), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
      "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16174)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16161) {
    var t__9884__auto___16176 = e16161;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null)), new cljs.core.Keyword(null, 
    "undefined", "undefined", -1970511116)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16176, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16177 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_pulse_PLUS_)), 1);
    var result__9847__auto___16178 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16177);
    if (cljs.core.truth_(result__9847__auto___16178)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16177), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16177)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16162) {
    var t__9884__auto___16179 = e16162;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16179, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16180 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "missing", "missing", 362507769)), tiltontec.rube.evaluate.c_get.call(null, loc));
    var result__9847__auto___16181 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16180);
    if (cljs.core.truth_(result__9847__auto___16181)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
      "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16180), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
      "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16180)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16163) {
    var t__9884__auto___16182 = e16163;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "loc", "loc", 1056246626, null)), new cljs.core.Keyword(null, 
    "missing", "missing", 362507769)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16182, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.rube.cell_types._PLUS_pulse_PLUS_)), 1);
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16164) {
    var t__9884__auto__ = e16164;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "+pulse+", "+pulse+", -1092313971, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.integrity_test.obs_setf_bad_caught.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.integrity_test.obs_setf_bad_caught;
}, new cljs.core.Symbol("tiltontec.rube.integrity-test", "obs-setf-bad-caught", "tiltontec.rube.integrity-test/obs-setf-bad-caught", -1143609197, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.integrity-test", "tiltontec.rube.integrity-test", 817836401, null), new cljs.core.Symbol(null, "obs-setf-bad-caught", "obs-setf-bad-caught", -936124387, null), "test/tiltontec/rube/integrity_test.cljc", 
29, 1, 85, 85, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.integrity_test.obs_setf_bad_caught) ? tiltontec.rube.integrity_test.obs_setf_bad_caught.cljs$lang$test : null]));
tiltontec.rube.integrity_test.see_into_fn = function tiltontec$rube$integrity_test$see_into_fn() {
  return cljs.test.test_var.call(null, tiltontec$rube$integrity_test$see_into_fn.cljs$lang$var);
};
tiltontec.rube.integrity_test.see_into_fn.cljs$lang$test = function() {
  var sia = tiltontec.rube.cells.c_in.call(null, 0);
  var rsic = cljs.core.atom.call(null, false);
  var sic = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "reset!", "reset!", 527275632, null), new cljs.core.Symbol(null, "rsic", "rsic", -1388734565, null), true), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sia", "sia", 737031502, null)))), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(sia, rsic) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      cljs.core.reset_BANG_.call(null, rsic, true);
      return 42 + tiltontec.rube.evaluate.c_get.call(null, sia);
    };
  }(sia, rsic));
  var fsia = function(sia, rsic, sic) {
    return function() {
      return tiltontec.rube.evaluate.c_get.call(null, sia);
    };
  }(sia, rsic, sic);
  var sib = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "or", "or", 1876275696, null), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fsia", "fsia", -1523177093, null))), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)))), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(sia, rsic, sic, fsia) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      var or__5898__auto__ = 1 + fsia.call(null);
      if (cljs.core.truth_(or__5898__auto__)) {
        return or__5898__auto__;
      } else {
        return tiltontec.rube.evaluate.c_get.call(null, sic);
      }
    };
  }(sia, rsic, sic, fsia));
  try {
    var values__9846__auto___16188 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 1), tiltontec.rube.evaluate.c_get.call(null, sib));
    var result__9847__auto___16189 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16188);
    if (cljs.core.truth_(result__9847__auto___16189)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 1), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16188), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 1), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16188)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16183) {
    var t__9884__auto___16190 = e16183;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 1), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16190, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16191 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.PersistentHashSet.fromArray([sia], true)), (new cljs.core.Keyword(null, "useds", "useds", 621350967)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, sib)));
    var result__9847__auto___16192 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16191);
    if (cljs.core.truth_(result__9847__auto___16192)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "sia", "sia", 737031502, null), null], null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16191), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "sia", "sia", 737031502, null), null], null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16191)), new cljs.core.Symbol(null, 
      "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16184) {
    var t__9884__auto___16193 = e16184;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "useds", "useds", 621350967), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "sia", "sia", 737031502, null), null], null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16193, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16194 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, rsic));
    var result__9847__auto___16195 = cljs.core.apply.call(null, cljs.core.not, values__9846__auto___16194);
    if (cljs.core.truth_(result__9847__auto___16195)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "rsic", "rsic", -1388734565, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__9846__auto___16194), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "rsic", "rsic", -1388734565, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__9846__auto___16194)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16185) {
    var t__9884__auto___16196 = e16185;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "rsic", "rsic", -1388734565, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16196, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.cells.c_reset_BANG_.call(null, sia, 1);
  try {
    var values__9846__auto___16197 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, sib))), 2);
    var result__9847__auto___16198 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16197);
    if (cljs.core.truth_(result__9847__auto___16198)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16197), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16197)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16186) {
    var t__9884__auto___16199 = e16186;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16199, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), tiltontec.rube.evaluate.c_get.call(null, sib));
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16187) {
    var t__9884__auto__ = e16187;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.integrity_test.see_into_fn.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.integrity_test.see_into_fn;
}, new cljs.core.Symbol("tiltontec.rube.integrity-test", "see-into-fn", "tiltontec.rube.integrity-test/see-into-fn", 602002752, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.integrity-test", "tiltontec.rube.integrity-test", 817836401, null), new cljs.core.Symbol(null, "see-into-fn", "see-into-fn", 1996218062, null), "test/tiltontec/rube/integrity_test.cljc", 21, 1, 125, 
125, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.integrity_test.see_into_fn) ? tiltontec.rube.integrity_test.see_into_fn.cljs$lang$test : null]));
tiltontec.rube.integrity_test.no_prop_no_obs = function tiltontec$rube$integrity_test$no_prop_no_obs() {
  return cljs.test.test_var.call(null, tiltontec$rube$integrity_test$no_prop_no_obs.cljs$lang$var);
};
tiltontec.rube.integrity_test.no_prop_no_obs.cljs$lang$test = function() {
  var sia = tiltontec.rube.cells.c_in.call(null, 0);
  var obs = cljs.core.atom.call(null, false);
  var sib = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(sia, obs) {
    return function(slot, me, new$, old, c) {
      return cljs.core.reset_BANG_.call(null, obs, true);
    };
  }(sia, obs), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sia", "sia", 737031502, null))), 42, 10)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, 
  "rule", "rule", 729973257), function(sia, obs) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      if (cljs.core.even_QMARK_.call(null, tiltontec.rube.evaluate.c_get.call(null, sia))) {
        return 42;
      } else {
        return 10;
      }
    };
  }(sia, obs));
  var run = cljs.core.atom.call(null, false);
  var sic = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "reset!", "reset!", 527275632, null), new cljs.core.Symbol(null, "run", "run", -180635126, null), true), cljs.core.list(new cljs.core.Symbol(null, "/", "/", -1371932971, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 2)), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(sia, obs, sib, run) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      cljs.core.reset_BANG_.call(null, run, true);
      return tiltontec.rube.evaluate.c_get.call(null, sib) / 2;
    };
  }(sia, obs, sib, run));
  try {
    var values__9846__auto___16208 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.rube.evaluate.c_get.call(null, sib));
    var result__9847__auto___16209 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16208);
    if (cljs.core.truth_(result__9847__auto___16209)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16208), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16208)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16200) {
    var t__9884__auto___16210 = e16200;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16210, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16211 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 21), tiltontec.rube.evaluate.c_get.call(null, sic));
    var result__9847__auto___16212 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16211);
    if (cljs.core.truth_(result__9847__auto___16212)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16211), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16211)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16201) {
    var t__9884__auto___16213 = e16201;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16213, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__9849__auto___16214 = cljs.core.deref.call(null, obs);
    if (cljs.core.truth_(value__9849__auto___16214)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__9849__auto___16214, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__9849__auto___16214, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16202) {
    var t__9884__auto___16215 = e16202;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16215, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__9849__auto___16216 = cljs.core.deref.call(null, run);
    if (cljs.core.truth_(value__9849__auto___16216)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__9849__auto___16216, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__9849__auto___16216, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16203) {
    var t__9884__auto___16217 = e16203;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16217, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.reset_BANG_.call(null, obs, false);
  cljs.core.reset_BANG_.call(null, run, false);
  tiltontec.rube.cells.c_reset_BANG_.call(null, sia, 2);
  try {
    var values__9846__auto___16218 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.rube.evaluate.c_get.call(null, sib));
    var result__9847__auto___16219 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16218);
    if (cljs.core.truth_(result__9847__auto___16219)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16218), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16218)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16204) {
    var t__9884__auto___16220 = e16204;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sib", "sib", 802497798, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16220, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16221 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 21), tiltontec.rube.evaluate.c_get.call(null, sic));
    var result__9847__auto___16222 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16221);
    if (cljs.core.truth_(result__9847__auto___16222)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16221), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16221)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16205) {
    var t__9884__auto___16223 = e16205;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "sic", "sic", -2064550943, null)), 21), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16223, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16224 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, obs));
    var result__9847__auto___16225 = cljs.core.apply.call(null, cljs.core.not, values__9846__auto___16224);
    if (cljs.core.truth_(result__9847__auto___16225)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__9846__auto___16224), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__9846__auto___16224)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16206) {
    var t__9884__auto___16226 = e16206;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs", "obs", 976520083, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16226, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, run));
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core.not, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16207) {
    var t__9884__auto__ = e16207;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "run", "run", -180635126, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.integrity_test.no_prop_no_obs.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.integrity_test.no_prop_no_obs;
}, new cljs.core.Symbol("tiltontec.rube.integrity-test", "no-prop-no-obs", "tiltontec.rube.integrity-test/no-prop-no-obs", 124578995, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.integrity-test", "tiltontec.rube.integrity-test", 817836401, null), new cljs.core.Symbol(null, "no-prop-no-obs", "no-prop-no-obs", -771561679, null), "test/tiltontec/rube/integrity_test.cljc", 
24, 1, 141, 141, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.integrity_test.no_prop_no_obs) ? tiltontec.rube.integrity_test.no_prop_no_obs.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env16227 = cljs.test.empty_env.call(null);
  var summary16228 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16227, summary16228) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env16227);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.integrity-test", "tiltontec.rube.integrity-test", 817836401, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__9951__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__9951__auto__, env16227, summary16228) {
          return function() {
            if (env__9951__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__9951__auto__, env16227, summary16228)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.rube.integrity_test.obs_setf;
        }, new cljs.core.Symbol("tiltontec.rube.integrity-test", "obs-setf", "tiltontec.rube.integrity-test/obs-setf", -1860386627, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.integrity-test", "tiltontec.rube.integrity-test", 817836401, null), new cljs.core.Symbol(null, "obs-setf", "obs-setf", -941176517, null), "test/tiltontec/rube/integrity_test.cljc", 
        18, 1, 45, 45, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.integrity_test.obs_setf) ? tiltontec.rube.integrity_test.obs_setf.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.integrity_test.obs_setf_bad_caught;
        }, new cljs.core.Symbol("tiltontec.rube.integrity-test", "obs-setf-bad-caught", "tiltontec.rube.integrity-test/obs-setf-bad-caught", -1143609197, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.integrity-test", "tiltontec.rube.integrity-test", 817836401, null), new cljs.core.Symbol(null, "obs-setf-bad-caught", "obs-setf-bad-caught", -936124387, null), "test/tiltontec/rube/integrity_test.cljc", 
        29, 1, 85, 85, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.integrity_test.obs_setf_bad_caught) ? tiltontec.rube.integrity_test.obs_setf_bad_caught.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.integrity_test.see_into_fn;
        }, new cljs.core.Symbol("tiltontec.rube.integrity-test", "see-into-fn", "tiltontec.rube.integrity-test/see-into-fn", 602002752, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.integrity-test", "tiltontec.rube.integrity-test", 817836401, null), new cljs.core.Symbol(null, "see-into-fn", "see-into-fn", 1996218062, null), "test/tiltontec/rube/integrity_test.cljc", 
        21, 1, 125, 125, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.integrity_test.see_into_fn) ? tiltontec.rube.integrity_test.see_into_fn.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.integrity_test.no_prop_no_obs;
        }, new cljs.core.Symbol("tiltontec.rube.integrity-test", "no-prop-no-obs", "tiltontec.rube.integrity-test/no-prop-no-obs", 124578995, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.integrity-test", "tiltontec.rube.integrity-test", 817836401, null), new cljs.core.Symbol(null, "no-prop-no-obs", "no-prop-no-obs", -771561679, null), "test/tiltontec/rube/integrity_test.cljc", 
        24, 1, 141, 141, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.integrity_test.no_prop_no_obs) ? tiltontec.rube.integrity_test.no_prop_no_obs.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__9951__auto__, env16227, summary16228) {
          return function() {
            if (env__9951__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__9951__auto__, env16227, summary16228)], null));
      }());
    };
  }(env16227, summary16228), function(env16227, summary16228) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.integrity-test", "tiltontec.rube.integrity-test", 817836401, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env16227, summary16228)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16227, summary16228) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary16228, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary16228), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env16227, summary16228)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16227, summary16228) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env16227);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary16228));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary16228), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env16227, summary16228)], null));
}());
goog.provide("tiltontec.rube.observer_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.rube.ut_macros");
goog.require("tiltontec.rube.cell_types");
goog.require("tiltontec.rube.integrity");
goog.require("tiltontec.rube.evaluate");
goog.require("tiltontec.rube.observer");
goog.require("tiltontec.rube.cells");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.rube.observer_test.t_formula = function tiltontec$rube$observer_test$t_formula() {
  return cljs.test.test_var.call(null, tiltontec$rube$observer_test$t_formula.cljs$lang$var);
};
tiltontec.rube.observer_test.t_formula.cljs$lang$test = function() {
  var bingo = cljs.core.atom.call(null, false);
  var c = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(bingo) {
    return function(slot, me, new$, old, c) {
      return cljs.core.reset_BANG_.call(null, bingo, true);
    };
  }(bingo), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 40, 2)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(bingo) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      return 40 + 2;
    };
  }(bingo));
  try {
    var values__9846__auto___15899 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), c);
    var result__9847__auto___15900 = cljs.core.apply.call(null, tiltontec.rube.cell_types.ia_type_QMARK_, values__9846__auto___15899);
    if (cljs.core.truth_(result__9847__auto___15900)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.cell_types.ia_type_QMARK_, values__9846__auto___15899), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__9846__auto___15899)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15888) {
    var t__9884__auto___15901 = e15888;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15901, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15902 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", -1677011786)), c);
    var result__9847__auto___15903 = cljs.core.apply.call(null, tiltontec.rube.cell_types.ia_type_QMARK_, values__9846__auto___15902);
    if (cljs.core.truth_(result__9847__auto___15903)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", 
      -1677011786)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.cell_types.ia_type_QMARK_, values__9846__auto___15902), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", 
      -1677011786)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__9846__auto___15902)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15889) {
    var t__9884__auto___15904 = e15889;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", 
    -1677011786)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15904, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15905 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654)), tiltontec.rube.cell_types.c_value_state.call(null, c));
    var result__9847__auto___15906 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15905);
    if (cljs.core.truth_(result__9847__auto___15906)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15905), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15905)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15890) {
    var t__9884__auto___15907 = e15890;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15907, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15908 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__9847__auto___15909 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15908);
    if (cljs.core.truth_(result__9847__auto___15909)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15908), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15908)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15891) {
    var t__9884__auto___15910 = e15891;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15910, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15911 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_useds.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__9847__auto___15912 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15911);
    if (cljs.core.truth_(result__9847__auto___15912)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15911), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15911)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15892) {
    var t__9884__auto___15913 = e15892;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15913, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15914 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_input_QMARK_.call(null, c));
    var result__9847__auto___15915 = cljs.core.apply.call(null, cljs.core.not, values__9846__auto___15914);
    if (cljs.core.truth_(result__9847__auto___15915)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__9846__auto___15914), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__9846__auto___15914)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15893) {
    var t__9884__auto___15916 = e15893;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___15916, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15917 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_valid_QMARK_.call(null, c));
    var result__9847__auto___15918 = cljs.core.apply.call(null, cljs.core.not, values__9846__auto___15917);
    if (cljs.core.truth_(result__9847__auto___15918)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__9846__auto___15917), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__9846__auto___15917)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15894) {
    var t__9884__auto___15919 = e15894;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___15919, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15920 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_model.call(null, c));
    var result__9847__auto___15921 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto___15920);
    if (cljs.core.truth_(result__9847__auto___15921)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto___15920), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto___15920)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15895) {
    var t__9884__auto___15922 = e15895;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___15922, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15923 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.rube.evaluate.c_get.call(null, c));
    var result__9847__auto___15924 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15923);
    if (cljs.core.truth_(result__9847__auto___15924)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15923), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15923)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15896) {
    var t__9884__auto___15925 = e15896;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___15925, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15926 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, c)), 42);
    var result__9847__auto___15927 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15926);
    if (cljs.core.truth_(result__9847__auto___15927)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15926), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15926)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15897) {
    var t__9884__auto___15928 = e15897;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___15928, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__9849__auto__ = cljs.core.deref.call(null, bingo);
    if (cljs.core.truth_(value__9849__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo", "bingo", -1934750747, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__9849__auto__, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo", "bingo", -1934750747, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__9849__auto__, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return value__9849__auto__;
  } catch (e15898) {
    var t__9884__auto__ = e15898;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo", "bingo", -1934750747, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.observer_test.t_formula.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.observer_test.t_formula;
}, new cljs.core.Symbol("tiltontec.rube.observer-test", "t-formula", "tiltontec.rube.observer-test/t-formula", -712819369, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.observer-test", "tiltontec.rube.observer-test", -1622464250, null), new cljs.core.Symbol(null, "t-formula", "t-formula", -178019426, null), "test/tiltontec/rube/observer_test.cljc", 19, 1, 42, 42, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.observer_test.t_formula) ? tiltontec.rube.observer_test.t_formula.cljs$lang$test : null]));
tiltontec.rube.observer_test.bingo2 = cljs.core.atom.call(null, false);
tiltontec.rube.observer_test.test_input = function tiltontec$rube$observer_test$test_input() {
  return cljs.test.test_var.call(null, tiltontec$rube$observer_test$test_input.cljs$lang$var);
};
tiltontec.rube.observer_test.test_input.cljs$lang$test = function() {
  var c = tiltontec.rube.cells.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(slot, me, new$, old, c) {
    return cljs.core.reset_BANG_.call(null, tiltontec.rube.observer_test.bingo2, true);
  });
  try {
    var values__9846__auto___15938 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), c);
    var result__9847__auto___15939 = cljs.core.apply.call(null, tiltontec.rube.cell_types.ia_type_QMARK_, values__9846__auto___15938);
    if (cljs.core.truth_(result__9847__auto___15939)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.cell_types.ia_type_QMARK_, values__9846__auto___15938), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__9846__auto___15938)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15929) {
    var t__9884__auto___15940 = e15929;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15940, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15941 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), tiltontec.rube.cell_types.c_value_state.call(null, c));
    var result__9847__auto___15942 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15941);
    if (cljs.core.truth_(result__9847__auto___15942)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15941), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15941)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15930) {
    var t__9884__auto___15943 = e15930;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15943, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15944 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__9847__auto___15945 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15944);
    if (cljs.core.truth_(result__9847__auto___15945)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15944), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15944)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15931) {
    var t__9884__auto___15946 = e15931;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15946, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15947 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__9847__auto___15948 = cljs.core.apply.call(null, tiltontec.rube.cell_types.c_input_QMARK_, values__9846__auto___15947);
    if (cljs.core.truth_(result__9847__auto___15948)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.cell_types.c_input_QMARK_, 
      values__9846__auto___15947), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__9846__auto___15947)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15932) {
    var t__9884__auto___15949 = e15932;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15949, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15950 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__9847__auto___15951 = cljs.core.apply.call(null, tiltontec.rube.cell_types.c_valid_QMARK_, values__9846__auto___15950);
    if (cljs.core.truth_(result__9847__auto___15951)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.cell_types.c_valid_QMARK_, 
      values__9846__auto___15950), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__9846__auto___15950)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15933) {
    var t__9884__auto___15952 = e15933;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15952, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15953 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_model.call(null, c));
    var result__9847__auto___15954 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto___15953);
    if (cljs.core.truth_(result__9847__auto___15954)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto___15953), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto___15953)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15934) {
    var t__9884__auto___15955 = e15934;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___15955, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15956 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_slot_name.call(null, c)), tiltontec.rube.cell_types.c_slot.call(null, c)), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551));
    var result__9847__auto___15957 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15956);
    if (cljs.core.truth_(result__9847__auto___15957)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15956), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15956)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15935) {
    var t__9884__auto___15958 = e15935;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo2", "bingo2", -177850551), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15958, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15959 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.rube.evaluate.c_get.call(null, c));
    var result__9847__auto___15960 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15959);
    if (cljs.core.truth_(result__9847__auto___15960)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15959), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15959)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15936) {
    var t__9884__auto___15961 = e15936;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___15961, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__9849__auto__ = cljs.core.deref.call(null, tiltontec.rube.observer_test.bingo2);
    if (cljs.core.truth_(value__9849__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo2", "bingo2", 1462680976, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__9849__auto__, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo2", "bingo2", 1462680976, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__9849__auto__, 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return value__9849__auto__;
  } catch (e15937) {
    var t__9884__auto__ = e15937;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bingo2", "bingo2", 1462680976, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.observer_test.test_input.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.observer_test.test_input;
}, new cljs.core.Symbol("tiltontec.rube.observer-test", "test-input", "tiltontec.rube.observer-test/test-input", 1884201810, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.observer-test", "tiltontec.rube.observer-test", -1622464250, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/rube/observer_test.cljc", 20, 1, 63, 63, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.observer_test.test_input) ? tiltontec.rube.observer_test.test_input.cljs$lang$test : null]));
tiltontec.rube.observer_test.t_custom_obs = function tiltontec$rube$observer_test$t_custom_obs() {
  return cljs.test.test_var.call(null, tiltontec$rube$observer_test$t_custom_obs.cljs$lang$var);
};
tiltontec.rube.observer_test.t_custom_obs.cljs$lang$test = function() {
  var bobs = cljs.core.atom.call(null, null);
  var b = tiltontec.rube.cells.c_in.call(null, 2, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(bobs) {
    return function(slot, me, new$, old, c) {
      tiltontec.rube.ut_macros.call_trc.call(null, null, slot, me, new$, old);
      return cljs.core.reset_BANG_.call(null, bobs, new$);
    };
  }(bobs));
  var cobs = cljs.core.atom.call(null, null);
  var c = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(bobs, b, cobs) {
    return function(slot, me, new$, old, c) {
      new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [slot, me, new$, old, c], null);
      tiltontec.rube.ut_macros.call_trc.call(null, "slot", me, new$, old);
      return cljs.core.reset_BANG_.call(null, cobs, new$);
    };
  }(bobs, b, cobs), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 10, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(bobs, b, cobs) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      return 10 * tiltontec.rube.evaluate.c_get.call(null, b);
    };
  }(bobs, b, cobs));
  try {
    var values__9846__auto___15965 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), tiltontec.rube.evaluate.c_get.call(null, b));
    var result__9847__auto___15966 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15965);
    if (cljs.core.truth_(result__9847__auto___15966)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15965), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15965)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15962) {
    var t__9884__auto___15967 = e15962;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___15967, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15968 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), cljs.core.deref.call(null, bobs));
    var result__9847__auto___15969 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15968);
    if (cljs.core.truth_(result__9847__auto___15969)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bobs", "bobs", 2084089253, null)), 
      2), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15968), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bobs", "bobs", 2084089253, null)), 
      2), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15968)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15963) {
    var t__9884__auto___15970 = e15963;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bobs", "bobs", 2084089253, null)), 
    2), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15970, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 20), tiltontec.rube.evaluate.c_get.call(null, c));
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 20), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 20), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e15964) {
    var t__9884__auto__ = e15964;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 20), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.observer_test.t_custom_obs.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.observer_test.t_custom_obs;
}, new cljs.core.Symbol("tiltontec.rube.observer-test", "t-custom-obs", "tiltontec.rube.observer-test/t-custom-obs", 2112961670, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.observer-test", "tiltontec.rube.observer-test", -1622464250, null), new cljs.core.Symbol(null, "t-custom-obs", "t-custom-obs", -1659782311, null), "test/tiltontec/rube/observer_test.cljc", 
22, 1, 78, 78, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.observer_test.t_custom_obs) ? tiltontec.rube.observer_test.t_custom_obs.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env15971 = cljs.test.empty_env.call(null);
  var summary15972 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env15971, summary15972) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env15971);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.observer-test", "tiltontec.rube.observer-test", -1622464250, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__9951__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__9951__auto__, env15971, summary15972) {
          return function() {
            if (env__9951__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__9951__auto__, env15971, summary15972)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.rube.observer_test.t_formula;
        }, new cljs.core.Symbol("tiltontec.rube.observer-test", "t-formula", "tiltontec.rube.observer-test/t-formula", -712819369, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.observer-test", "tiltontec.rube.observer-test", -1622464250, null), new cljs.core.Symbol(null, "t-formula", "t-formula", -178019426, null), "test/tiltontec/rube/observer_test.cljc", 
        19, 1, 42, 42, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.observer_test.t_formula) ? tiltontec.rube.observer_test.t_formula.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.observer_test.test_input;
        }, new cljs.core.Symbol("tiltontec.rube.observer-test", "test-input", "tiltontec.rube.observer-test/test-input", 1884201810, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.observer-test", "tiltontec.rube.observer-test", -1622464250, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/rube/observer_test.cljc", 
        20, 1, 63, 63, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.observer_test.test_input) ? tiltontec.rube.observer_test.test_input.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.observer_test.t_custom_obs;
        }, new cljs.core.Symbol("tiltontec.rube.observer-test", "t-custom-obs", "tiltontec.rube.observer-test/t-custom-obs", 2112961670, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.observer-test", "tiltontec.rube.observer-test", -1622464250, null), new cljs.core.Symbol(null, "t-custom-obs", "t-custom-obs", -1659782311, null), "test/tiltontec/rube/observer_test.cljc", 
        22, 1, 78, 78, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.observer_test.t_custom_obs) ? tiltontec.rube.observer_test.t_custom_obs.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__9951__auto__, env15971, summary15972) {
          return function() {
            if (env__9951__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__9951__auto__, env15971, summary15972)], null));
      }());
    };
  }(env15971, summary15972), function(env15971, summary15972) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.observer-test", "tiltontec.rube.observer-test", -1622464250, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env15971, summary15972)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env15971, summary15972) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary15972, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary15972), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env15971, summary15972)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env15971, summary15972) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env15971);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary15972));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary15972), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env15971, summary15972)], null));
}());
goog.provide("tiltontec.rube.utility_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("clojure.set");
goog.require("tiltontec.rube.ut_macros");
goog.require("tiltontec.rube.utility");
tiltontec.rube.utility_test.fake_cl = function tiltontec$rube$utility_test$fake_cl() {
  return cljs.test.test_var.call(null, tiltontec$rube$utility_test$fake_cl.cljs$lang$var);
};
tiltontec.rube.utility_test.fake_cl.cljs$lang$test = function() {
  try {
    var values__9846__auto___15875 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
      var result__11392__auto__ = 42;
      return result__11392__auto__;
    }()), 42);
    var result__9847__auto___15876 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15875);
    if (cljs.core.truth_(result__9847__auto___15876)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "prog1", "utm/prog1", -359814004, null), 42, 43, 44)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core._EQ_, values__9846__auto___15875), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "prog1", "utm/prog1", -359814004, null), 42, 43, 44)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15875)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15867) {
    var t__9884__auto___15877 = e15867;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "prog1", "utm/prog1", -359814004, null), 42, 43, 44)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15877, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15878 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
      var temp__4425__auto__ = 21 + 21;
      if (cljs.core.truth_(temp__4425__auto__)) {
        var x = temp__4425__auto__;
        return x;
      } else {
        return null;
      }
    }()), 42);
    var result__9847__auto___15879 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15878);
    if (cljs.core.truth_(result__9847__auto___15879)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), cljs.core.list(new cljs.core.Symbol(null, 
      "+", "+", -740910886, null), 21, 21), 42, new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15878), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), cljs.core.list(new cljs.core.Symbol(null, 
      "+", "+", -740910886, null), 21, 21), 42, new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15878)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15868) {
    var t__9884__auto___15880 = e15868;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), cljs.core.list(new cljs.core.Symbol(null, 
    "+", "+", -740910886, null), 21, 21), 42, new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15880, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15881 = cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
      var temp__4425__auto__ = false;
      if (temp__4425__auto__) {
        var x = temp__4425__auto__;
        return 42;
      } else {
        return null;
      }
    }());
    var result__9847__auto___15882 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto___15881);
    if (cljs.core.truth_(result__9847__auto___15882)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), false, 43, 42)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto___15881), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), false, 43, 42)), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto___15881)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15869) {
    var t__9884__auto___15883 = e15869;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "b-when", "utm/b-when", 505344765, null), new cljs.core.Symbol(null, "x", "x", -555367584, null), false, 43, 42)), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___15883, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15884 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.cl_find.call(null, 42, cljs.core.list(41, 42, 43))), 42);
    var result__9847__auto___15885 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15884);
    if (cljs.core.truth_(result__9847__auto___15885)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(41, 42, 43)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15884), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(41, 42, 43)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15884)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15870) {
    var t__9884__auto___15886 = e15870;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
    null), cljs.core.list(41, 42, 43)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15886, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15887 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.cl_find.call(null, 42, cljs.core.list(42, 43, 44))), 42);
    var result__9847__auto___15888 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15887);
    if (cljs.core.truth_(result__9847__auto___15888)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(42, 43, 44)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15887), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(42, 43, 44)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15887)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15871) {
    var t__9884__auto___15889 = e15871;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
    null), cljs.core.list(42, 43, 44)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15889, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15890 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.cl_find.call(null, 42, cljs.core.list(40, 41, 42))), 42);
    var result__9847__auto___15891 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15890);
    if (cljs.core.truth_(result__9847__auto___15891)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(40, 41, 42)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15890), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
      null), cljs.core.list(40, 41, 42)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15890)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15872) {
    var t__9884__auto___15892 = e15872;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("ut", "cl-find", "ut/cl-find", -402247804, null), 42, cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, 
    null), cljs.core.list(40, 41, 42)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15892, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15893 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._EQ_.call(null, 2, 3) ? null : function() {
      return 42;
    }()), 42);
    var result__9847__auto___15894 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15893);
    if (cljs.core.truth_(result__9847__auto___15894)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 
      2, 3), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15893), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 
      2, 3), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15893)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15873) {
    var t__9884__auto___15895 = e15873;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 
    2, 3), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15895, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core._EQ_.call(null, 2, 2) ? null : function() {
      return 42;
    }());
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, 
      2), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, 
      2), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e15874) {
    var t__9884__auto__ = e15874;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("utm", "unless", "utm/unless", 1774704739, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 
    2, 2), 3, 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.utility_test.fake_cl.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.utility_test.fake_cl;
}, new cljs.core.Symbol("tiltontec.rube.utility-test", "fake-cl", "tiltontec.rube.utility-test/fake-cl", -1897419596, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.utility-test", "tiltontec.rube.utility-test", 1712921856, null), new cljs.core.Symbol(null, "fake-cl", "fake-cl", -506046351, null), "test/tiltontec/rube/utility_test.cljc", 17, 1, 22, 22, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.rube.utility_test.fake_cl) ? tiltontec.rube.utility_test.fake_cl.cljs$lang$test : null]));
tiltontec.rube.utility_test.setify = function tiltontec$rube$utility_test$setify() {
  return cljs.test.test_var.call(null, tiltontec$rube$utility_test$setify.cljs$lang$var);
};
tiltontec.rube.utility_test.setify.cljs$lang$test = function() {
  try {
    var values__9846__auto___15903 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.set_ify.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 2, 2, 3, 3], null))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null));
    var result__9847__auto___15904 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15903);
    if (cljs.core.truth_(result__9847__auto___15904)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 2, 2, 3, 3], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15903), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 2, 2, 3, 3], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15903)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e15896) {
    var t__9884__auto___15905 = e15896;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 1, 2, 2, 3, 3], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15905, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15906 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.set_ify.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 3), 3), 2), 2), 1), 1))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null));
    var result__9847__auto___15907 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15906);
    if (cljs.core.truth_(result__9847__auto___15907)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 1, 2, 2, 3, 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15906), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 1, 2, 2, 3, 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15906)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", 
      -406056002), null], null));
    }
  } catch (e15897) {
    var t__9884__auto___15908 = e15897;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [1, null, 3, null, 2, null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 1, 2, 2, 3, 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15908, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15909 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.set_ify.call(null, null)), cljs.core.PersistentHashSet.EMPTY);
    var result__9847__auto___15910 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15909);
    if (cljs.core.truth_(result__9847__auto___15910)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), null)), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15909), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), null)), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15909)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15898) {
    var t__9884__auto___15911 = e15898;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), null)), new cljs.core.Keyword(null, "actual", "actual", 
    107306363), t__9884__auto___15911, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15912 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.set_ify.call(null, 42)), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null));
    var result__9847__auto___15913 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15912);
    if (cljs.core.truth_(result__9847__auto___15913)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
      174791520, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15912), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
      174791520, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15912)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15899) {
    var t__9884__auto___15914 = e15899;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
    174791520, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15914, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15915 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.set_ify.call(null, "bob")), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["bob", null], null), null));
    var result__9847__auto___15916 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15915);
    if (cljs.core.truth_(result__9847__auto___15916)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["bob", null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
      174791520, null), "bob")), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15915), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["bob", null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
      174791520, null), "bob")), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15915)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15900) {
    var t__9884__auto___15917 = e15900;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, ["bob", null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 
    174791520, null), "bob")), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15917, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15918 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.set_ify.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null))), cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null)], true));
    var result__9847__auto___15919 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15918);
    if (cljs.core.truth_(result__9847__auto___15919)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null)], true), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15918), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null)], true), cljs.core.list(new cljs.core.Symbol(null, 
      "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15918)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", 
      "message", -406056002), null], null));
    }
  } catch (e15901) {
    var t__9884__auto___15920 = e15901;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.fromArray([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null)], true), cljs.core.list(new cljs.core.Symbol(null, 
    "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "a", "a", -2123407586), 13], null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15920, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, clojure.set.difference.call(null, tiltontec.rube.utility.set_ify.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 42], null)), tiltontec.rube.utility.set_ify.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), 1)))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], 
    null), null));
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol("cset", "difference", 
      "cset/difference", -754182536, null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 42], null)), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 2)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol("cset", "difference", 
      "cset/difference", -754182536, null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 42], null)), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 2)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e15902) {
    var t__9884__auto__ = e15902;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [42, null], null), null), cljs.core.list(new cljs.core.Symbol("cset", "difference", 
    "cset/difference", -754182536, null), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, 2, 42], null)), cljs.core.list(new cljs.core.Symbol(null, "set-ify", "set-ify", 174791520, null), cljs.core.list(new cljs.core.Symbol(null, "list", "list", -1889078086, null), 1, 2)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.utility_test.setify.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.utility_test.setify;
}, new cljs.core.Symbol("tiltontec.rube.utility-test", "setify", "tiltontec.rube.utility-test/setify", 578101936, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.utility-test", "tiltontec.rube.utility-test", 1712921856, null), new cljs.core.Symbol(null, "setify", "setify", 86404727, null), "test/tiltontec/rube/utility_test.cljc", 16, 1, 36, 36, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.rube.utility_test.setify) ? tiltontec.rube.utility_test.setify.cljs$lang$test : null]));
tiltontec.rube.utility_test.jj_boom = function tiltontec$rube$utility_test$jj_boom(ref) {
  return (new cljs.core.Keyword(null, "boom", "boom", 984913816)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, ref));
};
tiltontec.rube.utility_test.test_rmap = function tiltontec$rube$utility_test$test_rmap() {
  return cljs.test.test_var.call(null, tiltontec$rube$utility_test$test_rmap.cljs$lang$var);
};
tiltontec.rube.utility_test.test_rmap.cljs$lang$test = function() {
  var x = tiltontec.rube.utility.ia_ref.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "value", "value", 305978217), 0, new cljs.core.Keyword(null, "boom", "boom", 984913816), 42], null));
  try {
    var values__9846__auto___15926 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility_test.jj_boom.call(null, x)), 42);
    var result__9847__auto___15927 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15926);
    if (cljs.core.truth_(result__9847__auto___15927)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "jj-boom", "jj-boom", -75708647, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15926), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "jj-boom", "jj-boom", -75708647, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15926)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15921) {
    var t__9884__auto___15928 = e15921;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "jj-boom", "jj-boom", -75708647, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___15928, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15929 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), 0);
    var result__9847__auto___15930 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15929);
    if (cljs.core.truth_(result__9847__auto___15930)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15929), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15929)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15922) {
    var t__9884__auto___15931 = e15922;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15931, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.utility.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), x], null), 42);
  tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "xxx", "xxx", -1019301908), x, cljs.core.deref.call(null, x), (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x)));
  try {
    var values__9846__auto___15932 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), 42);
    var result__9847__auto___15933 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15932);
    if (cljs.core.truth_(result__9847__auto___15933)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15932), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15932)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15923) {
    var t__9884__auto___15934 = e15923;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15934, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var value__9849__auto___15935 = function() {
      var j = tiltontec.rube.utility.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), x], null), 43);
      return cljs.core._EQ_.call(null, 43, j);
    }();
    if (value__9849__auto___15935) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "j", "j", 242556762, null), cljs.core.list(new cljs.core.Symbol(null, 
      "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 43))], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, new cljs.core.Symbol(null, "j", "j", 242556762, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__9849__auto___15935, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "j", "j", 242556762, null), cljs.core.list(new cljs.core.Symbol(null, 
      "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 43))], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, new cljs.core.Symbol(null, "j", "j", 242556762, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), value__9849__auto___15935, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15924) {
    var t__9884__auto___15936 = e15924;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "j", "j", 242556762, null), cljs.core.list(new cljs.core.Symbol(null, 
    "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 43))], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, new cljs.core.Symbol(null, "j", "j", 242556762, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___15936, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.rmap_setf.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), x], null), 44)), 44);
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 44, cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 44))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 44, cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), new cljs.core.PersistentVector(null, 
      2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 44))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e15925) {
    var t__9884__auto__ = e15925;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 44, cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "rmap-setf", "rmap-setf", 765322014, null), 
    new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "value", "value", 305978217), new cljs.core.Symbol(null, "x", "x", -555367584, null)], null), 44))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.utility_test.test_rmap.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.utility_test.test_rmap;
}, new cljs.core.Symbol("tiltontec.rube.utility-test", "test-rmap", "tiltontec.rube.utility-test/test-rmap", 218980905, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.utility-test", "tiltontec.rube.utility-test", 1712921856, null), new cljs.core.Symbol(null, "test-rmap", "test-rmap", 786413294, null), "test/tiltontec/rube/utility_test.cljc", 19, 1, 49, 49, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.rube.utility_test.test_rmap) ? tiltontec.rube.utility_test.test_rmap.cljs$lang$test : null]));
tiltontec.rube.utility_test.err_handling = function tiltontec$rube$utility_test$err_handling() {
  return cljs.test.test_var.call(null, tiltontec$rube$utility_test$err_handling.cljs$lang$var);
};
tiltontec.rube.utility_test.err_handling.cljs$lang$test = function() {
  try {
    try {
      tiltontec.rube.utility.err.call(null, "boom");
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, null), "boom")), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e15938) {
      if (e15938 instanceof Error) {
        var e__9873__auto___15954 = e15938;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, null), "boom")), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), e__9873__auto___15954, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        throw e15938;
      }
    }
  } catch (e15937) {
    var t__9884__auto___15955 = e15937;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, null), "boom")), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___15955, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    try {
      tiltontec.rube.utility.err.call(null, "boom");
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /oom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
      null), "boom")), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e15940) {
      if (e15940 instanceof Error) {
        var e__9878__auto___15956 = e15940;
        var m__9879__auto___15957 = e__9878__auto___15956.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /oom/, m__9879__auto___15957))) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /oom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
          null), "boom")), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__9878__auto___15956, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /oom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
          null), "boom")), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__9878__auto___15956, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } else {
        throw e15940;
      }
    }
  } catch (e15939) {
    var t__9884__auto___15958 = e15939;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /oom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
    null), "boom")), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15958, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    try {
      tiltontec.rube.utility.err.call(null, cljs.core.str, "Hi ", new cljs.core.Symbol(null, "mom", "mom", 320137679, null));
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Hi mom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
      null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "mom", "mom", 320137679, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } catch (e15942) {
      if (e15942 instanceof Error) {
        var e__9878__auto___15959 = e15942;
        var m__9879__auto___15960 = e__9878__auto___15959.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /Hi mom/, m__9879__auto___15960))) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Hi mom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
          null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "mom", "mom", 320137679, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__9878__auto___15959, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Hi mom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
          null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "mom", "mom", 320137679, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), e__9878__auto___15959, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } else {
        throw e15942;
      }
    }
  } catch (e15941) {
    var t__9884__auto___15961 = e15941;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol("js", "Error", "js/Error", -1692659266, null), /Hi mom/, cljs.core.list(new cljs.core.Symbol(null, "err", "err", -448925678, 
    null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), new cljs.core.Symbol(null, "mom", "mom", 320137679, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15961, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15962 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.any_ref_QMARK_.call(null, null));
    var result__9847__auto___15963 = cljs.core.apply.call(null, cljs.core.not, values__9846__auto___15962);
    if (cljs.core.truth_(result__9847__auto___15963)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core.not, values__9846__auto___15962), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__9846__auto___15962)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15943) {
    var t__9884__auto___15964 = e15943;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15964, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15965 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.any_ref_QMARK_.call(null, 42));
    var result__9847__auto___15966 = cljs.core.apply.call(null, cljs.core.not, values__9846__auto___15965);
    if (cljs.core.truth_(result__9847__auto___15966)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core.not, values__9846__auto___15965), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__9846__auto___15965)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15944) {
    var t__9884__auto___15967 = e15944;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), 42)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15967, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15968 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.any_ref_QMARK_.call(null, cljs.core.PersistentVector.EMPTY));
    var result__9847__auto___15969 = cljs.core.apply.call(null, cljs.core.not, values__9846__auto___15968);
    if (cljs.core.truth_(result__9847__auto___15969)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), cljs.core.PersistentVector.EMPTY)), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core.cons.call(null, cljs.core.not, values__9846__auto___15968), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), cljs.core.PersistentVector.EMPTY)), new cljs.core.Keyword(null, "actual", "actual", 
      107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__9846__auto___15968)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15945) {
    var t__9884__auto___15970 = e15945;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "any-ref?", "any-ref?", -153183574, null), cljs.core.PersistentVector.EMPTY)), new cljs.core.Keyword(null, "actual", "actual", 
    107306363), t__9884__auto___15970, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15971 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
      var sb__6853__auto__ = new goog.string.StringBuffer;
      var _STAR_print_newline_STAR_15947_15973 = cljs.core._STAR_print_newline_STAR_;
      var _STAR_print_fn_STAR_15948_15974 = cljs.core._STAR_print_fn_STAR_;
      cljs.core._STAR_print_newline_STAR_ = true;
      cljs.core._STAR_print_fn_STAR_ = function(_STAR_print_newline_STAR_15947_15973, _STAR_print_fn_STAR_15948_15974, sb__6853__auto__) {
        return function(x__6854__auto__) {
          return sb__6853__auto__.append(x__6854__auto__);
        };
      }(_STAR_print_newline_STAR_15947_15973, _STAR_print_fn_STAR_15948_15974, sb__6853__auto__);
      try {
        var _STAR_trxdepth_STAR_15949_15975 = tiltontec.rube.ut_macros._STAR_trxdepth_STAR_;
        tiltontec.rube.ut_macros._STAR_trxdepth_STAR_ = 5;
        try {
          var _STAR_trxdepth_STAR_15950_15976 = tiltontec.rube.ut_macros._STAR_trxdepth_STAR_;
          tiltontec.rube.ut_macros._STAR_trxdepth_STAR_ = tiltontec.rube.ut_macros._STAR_trxdepth_STAR_ + 1;
          try {
            if (0 <= tiltontec.rube.ut_macros._STAR_trxdepth_STAR_ && tiltontec.rube.ut_macros._STAR_trxdepth_STAR_ <= 100) {
              tiltontec.rube.ut_macros.call_trc.call(null, "cool", 1, 2, 3);
            } else {
              if (tiltontec.rube.ut_macros._STAR_trxdepth_STAR_ > 100) {
                throw new java.lang.Exception([cljs.core.str("wtrx exceeded max depth "), cljs.core.str(100), cljs.core.str(":"), cljs.core.str(tiltontec.rube.ut_macros.call_trc$.call(null, "cool", cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 3), 2), 1)))].join(""));
              } else {
              }
            }
            cljs.core.println.call(null, new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
          } finally {
            tiltontec.rube.ut_macros._STAR_trxdepth_STAR_ = _STAR_trxdepth_STAR_15950_15976;
          }
        } finally {
          tiltontec.rube.ut_macros._STAR_trxdepth_STAR_ = _STAR_trxdepth_STAR_15949_15975;
        }
      } finally {
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_15948_15974;
        cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_15947_15973;
      }
      return [cljs.core.str(sb__6853__auto__)].join("");
    }()), "...... cool: 1, 2, 3\n:bingo\n");
    var result__9847__auto___15972 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15971);
    if (cljs.core.truth_(result__9847__auto___15972)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "...... cool: 1, 2, 3\n:bingo\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
      "binding", "binding", -2114503176, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*trxdepth*", "*trxdepth*", -1772449719, null), 5], null), cljs.core.list(new cljs.core.Symbol(null, "wtrx", "wtrx", -1957918579, null), cljs.core.list(0, 100, "cool", 1, 2, 3), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -733595439, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022)))))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15971), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "...... cool: 1, 2, 3\n:bingo\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
      "binding", "binding", -2114503176, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*trxdepth*", "*trxdepth*", -1772449719, null), 5], null), cljs.core.list(new cljs.core.Symbol(null, "wtrx", "wtrx", -1957918579, null), cljs.core.list(0, 100, "cool", 1, 2, 3), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -733595439, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022)))))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15971)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15946) {
    var t__9884__auto___15977 = e15946;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "...... cool: 1, 2, 3\n:bingo\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
    "binding", "binding", -2114503176, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "*trxdepth*", "*trxdepth*", -1772449719, null), 5], null), cljs.core.list(new cljs.core.Symbol(null, "wtrx", "wtrx", -1957918579, null), cljs.core.list(0, 100, "cool", 1, 2, 3), cljs.core.list(new cljs.core.Symbol(null, "println", "println", -733595439, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022)))))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___15977, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, function() {
      var sb__6853__auto__ = new goog.string.StringBuffer;
      var _STAR_print_newline_STAR_15952_15978 = cljs.core._STAR_print_newline_STAR_;
      var _STAR_print_fn_STAR_15953_15979 = cljs.core._STAR_print_fn_STAR_;
      cljs.core._STAR_print_newline_STAR_ = true;
      cljs.core._STAR_print_fn_STAR_ = function(_STAR_print_newline_STAR_15952_15978, _STAR_print_fn_STAR_15953_15979, sb__6853__auto__) {
        return function(x__6854__auto__) {
          return sb__6853__auto__.append(x__6854__auto__);
        };
      }(_STAR_print_newline_STAR_15952_15978, _STAR_print_fn_STAR_15953_15979, sb__6853__auto__);
      try {
        tiltontec.rube.utility.wtrx_test.call(null, 3);
      } finally {
        cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR_15953_15979;
        cljs.core._STAR_print_newline_STAR_ = _STAR_print_newline_STAR_15952_15978;
      }
      return [cljs.core.str(sb__6853__auto__)].join("");
    }()), ". test: 3\n.. test: 2\n... test: 1\n.... test: 0\n");
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), ". test: 3\n.. test: 2\n... test: 1\n.... test: 0\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
      "wtrx-test", "wtrx-test", 1124366211, null), 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), ". test: 3\n.. test: 2\n... test: 1\n.... test: 0\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
      "wtrx-test", "wtrx-test", 1124366211, null), 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e15951) {
    var t__9884__auto__ = e15951;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), ". test: 3\n.. test: 2\n... test: 1\n.... test: 0\n", cljs.core.list(new cljs.core.Symbol(null, "with-out-str", "with-out-str", -140201577, null), cljs.core.list(new cljs.core.Symbol(null, 
    "wtrx-test", "wtrx-test", 1124366211, null), 3))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.utility_test.err_handling.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.utility_test.err_handling;
}, new cljs.core.Symbol("tiltontec.rube.utility-test", "err-handling", "tiltontec.rube.utility-test/err-handling", 866158152, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.utility-test", "tiltontec.rube.utility-test", 1712921856, null), new cljs.core.Symbol(null, "err-handling", "err-handling", 751948053, null), "test/tiltontec/rube/utility_test.cljc", 22, 1, 64, 64, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.utility_test.err_handling) ? tiltontec.rube.utility_test.err_handling.cljs$lang$test : null]));
tiltontec.rube.utility_test.fifo_build = function tiltontec$rube$utility_test$fifo_build() {
  return cljs.test.test_var.call(null, tiltontec$rube$utility_test$fifo_build.cljs$lang$var);
};
tiltontec.rube.utility_test.fifo_build.cljs$lang$test = function() {
  var q = tiltontec.rube.utility.make_fifo_queue.call(null);
  try {
    var values__9846__auto___15993 = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__9847__auto___15994 = cljs.core.apply.call(null, tiltontec.rube.utility.fifo_empty_QMARK_, values__9846__auto___15993);
    if (cljs.core.truth_(result__9847__auto___15994)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.utility.fifo_empty_QMARK_, 
      values__9846__auto___15993), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__9846__auto___15993)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15980) {
    var t__9884__auto___15995 = e15980;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15995, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15996 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.fifo_peek.call(null, q));
    var result__9847__auto___15997 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto___15996);
    if (cljs.core.truth_(result__9847__auto___15997)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto___15996), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto___15996)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15981) {
    var t__9884__auto___15998 = e15981;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___15998, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15999 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.fifo_pop.call(null, q));
    var result__9847__auto___16000 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto___15999);
    if (cljs.core.truth_(result__9847__auto___16000)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto___15999), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto___15999)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15982) {
    var t__9884__auto___16001 = e15982;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16001, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16002 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.fifo_data.call(null, q));
    var result__9847__auto___16003 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__9846__auto___16002);
    if (cljs.core.truth_(result__9847__auto___16003)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__9846__auto___16002), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__9846__auto___16002)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15983) {
    var t__9884__auto___16004 = e15983;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16004, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.utility.fifo_add.call(null, q, 1);
  try {
    var values__9846__auto___16005 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.fifo_empty_QMARK_.call(null, q));
    var result__9847__auto___16006 = cljs.core.apply.call(null, cljs.core.not, values__9846__auto___16005);
    if (cljs.core.truth_(result__9847__auto___16006)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__9846__auto___16005), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__9846__auto___16005)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15984) {
    var t__9884__auto___16007 = e15984;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16007, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16008 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.fifo_peek.call(null, q)), 1);
    var result__9847__auto___16009 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16008);
    if (cljs.core.truth_(result__9847__auto___16009)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16008), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16008)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15985) {
    var t__9884__auto___16010 = e15985;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16010, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16011 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.fifo_pop.call(null, q)), 1);
    var result__9847__auto___16012 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16011);
    if (cljs.core.truth_(result__9847__auto___16012)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16011), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16011)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15986) {
    var t__9884__auto___16013 = e15986;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16013, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16014 = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__9847__auto___16015 = cljs.core.apply.call(null, tiltontec.rube.utility.fifo_empty_QMARK_, values__9846__auto___16014);
    if (cljs.core.truth_(result__9847__auto___16015)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.utility.fifo_empty_QMARK_, 
      values__9846__auto___16014), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__9846__auto___16014)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15987) {
    var t__9884__auto___16016 = e15987;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16016, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  tiltontec.rube.utility.fifo_add.call(null, q, 1);
  tiltontec.rube.utility.fifo_add.call(null, q, 2);
  try {
    var values__9846__auto___16017 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.fifo_empty_QMARK_.call(null, q));
    var result__9847__auto___16018 = cljs.core.apply.call(null, cljs.core.not, values__9846__auto___16017);
    if (cljs.core.truth_(result__9847__auto___16018)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__9846__auto___16017), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__9846__auto___16017)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15988) {
    var t__9884__auto___16019 = e15988;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16019, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16020 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.fifo_peek.call(null, q)), 1);
    var result__9847__auto___16021 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16020);
    if (cljs.core.truth_(result__9847__auto___16021)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16020), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16020)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15989) {
    var t__9884__auto___16022 = e15989;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16022, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16023 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.fifo_pop.call(null, q)), 1);
    var result__9847__auto___16024 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16023);
    if (cljs.core.truth_(result__9847__auto___16024)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16023), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16023)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15990) {
    var t__9884__auto___16025 = e15990;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16025, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16026 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.fifo_pop.call(null, q)), 2);
    var result__9847__auto___16027 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16026);
    if (cljs.core.truth_(result__9847__auto___16027)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16026), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16026)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15991) {
    var t__9884__auto___16028 = e15991;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16028, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__9847__auto__ = cljs.core.apply.call(null, tiltontec.rube.utility.fifo_empty_QMARK_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.utility.fifo_empty_QMARK_, 
      values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e15992) {
    var t__9884__auto__ = e15992;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.utility_test.fifo_build.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.utility_test.fifo_build;
}, new cljs.core.Symbol("tiltontec.rube.utility-test", "fifo-build", "tiltontec.rube.utility-test/fifo-build", 2102704491, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.utility-test", "tiltontec.rube.utility-test", 1712921856, null), new cljs.core.Symbol(null, "fifo-build", "fifo-build", 1577255980, null), "test/tiltontec/rube/utility_test.cljc", 20, 1, 91, 91, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.utility_test.fifo_build) ? tiltontec.rube.utility_test.fifo_build.cljs$lang$test : null]));
tiltontec.rube.utility_test.fifo_build_test = function tiltontec$rube$utility_test$fifo_build_test() {
  return cljs.test.test_var.call(null, tiltontec$rube$utility_test$fifo_build_test.cljs$lang$var);
};
tiltontec.rube.utility_test.fifo_build_test.cljs$lang$test = function() {
  var q = tiltontec.rube.utility.make_fifo_queue.call(null);
  try {
    var values__9846__auto___16042 = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__9847__auto___16043 = cljs.core.apply.call(null, tiltontec.rube.utility.fifo_empty_QMARK_, values__9846__auto___16042);
    if (cljs.core.truth_(result__9847__auto___16043)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.utility.fifo_empty_QMARK_, 
      values__9846__auto___16042), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__9846__auto___16042)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16029) {
    var t__9884__auto___16044 = e16029;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16044, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16045 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.fifo_peek.call(null, q));
    var result__9847__auto___16046 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto___16045);
    if (cljs.core.truth_(result__9847__auto___16046)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto___16045), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto___16045)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16030) {
    var t__9884__auto___16047 = e16030;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16047, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16048 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.fifo_pop.call(null, q));
    var result__9847__auto___16049 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto___16048);
    if (cljs.core.truth_(result__9847__auto___16049)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto___16048), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto___16048)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16031) {
    var t__9884__auto___16050 = e16031;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16050, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16051 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.fifo_data.call(null, q));
    var result__9847__auto___16052 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__9846__auto___16051);
    if (cljs.core.truth_(result__9847__auto___16052)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__9846__auto___16051), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__9846__auto___16051)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16032) {
    var t__9884__auto___16053 = e16032;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-data", "fifo-data", -1340990153, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16053, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.utility.fifo_add.call(null, q, 1);
  try {
    var values__9846__auto___16054 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.fifo_empty_QMARK_.call(null, q));
    var result__9847__auto___16055 = cljs.core.apply.call(null, cljs.core.not, values__9846__auto___16054);
    if (cljs.core.truth_(result__9847__auto___16055)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__9846__auto___16054), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__9846__auto___16054)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16033) {
    var t__9884__auto___16056 = e16033;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16056, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16057 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.fifo_peek.call(null, q)), 1);
    var result__9847__auto___16058 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16057);
    if (cljs.core.truth_(result__9847__auto___16058)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16057), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16057)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16034) {
    var t__9884__auto___16059 = e16034;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16059, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16060 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.fifo_pop.call(null, q)), 1);
    var result__9847__auto___16061 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16060);
    if (cljs.core.truth_(result__9847__auto___16061)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16060), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16060)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16035) {
    var t__9884__auto___16062 = e16035;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16062, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16063 = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__9847__auto___16064 = cljs.core.apply.call(null, tiltontec.rube.utility.fifo_empty_QMARK_, values__9846__auto___16063);
    if (cljs.core.truth_(result__9847__auto___16064)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.utility.fifo_empty_QMARK_, 
      values__9846__auto___16063), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__9846__auto___16063)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16036) {
    var t__9884__auto___16065 = e16036;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16065, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  tiltontec.rube.utility.fifo_add.call(null, q, 1);
  tiltontec.rube.utility.fifo_add.call(null, q, 2);
  try {
    var values__9846__auto___16066 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.fifo_empty_QMARK_.call(null, q));
    var result__9847__auto___16067 = cljs.core.apply.call(null, cljs.core.not, values__9846__auto___16066);
    if (cljs.core.truth_(result__9847__auto___16067)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__9846__auto___16066), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__9846__auto___16066)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16037) {
    var t__9884__auto___16068 = e16037;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16068, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16069 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.fifo_peek.call(null, q)), 1);
    var result__9847__auto___16070 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16069);
    if (cljs.core.truth_(result__9847__auto___16070)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16069), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16069)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16038) {
    var t__9884__auto___16071 = e16038;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-peek", "fifo-peek", 1955818422, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16071, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16072 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.fifo_pop.call(null, q)), 1);
    var result__9847__auto___16073 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16072);
    if (cljs.core.truth_(result__9847__auto___16073)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16072), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16072)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16039) {
    var t__9884__auto___16074 = e16039;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16074, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16075 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.utility.fifo_pop.call(null, q)), 2);
    var result__9847__auto___16076 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16075);
    if (cljs.core.truth_(result__9847__auto___16076)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16075), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16075)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16040) {
    var t__9884__auto___16077 = e16040;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "fifo-pop", "fifo-pop", 215303248, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16077, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, q);
    var result__9847__auto__ = cljs.core.apply.call(null, tiltontec.rube.utility.fifo_empty_QMARK_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.utility.fifo_empty_QMARK_, 
      values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16041) {
    var t__9884__auto__ = e16041;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fifo-empty?", "fifo-empty?", -835410477, null), new cljs.core.Symbol(null, "q", "q", -1965434072, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.utility_test.fifo_build_test.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.utility_test.fifo_build_test;
}, new cljs.core.Symbol("tiltontec.rube.utility-test", "fifo-build-test", "tiltontec.rube.utility-test/fifo-build-test", 1595549936, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.utility-test", "tiltontec.rube.utility-test", 1712921856, null), new cljs.core.Symbol(null, "fifo-build-test", "fifo-build-test", 1616174349, null), "test/tiltontec/rube/utility_test.cljc", 
25, 1, 113, 113, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.utility_test.fifo_build_test) ? tiltontec.rube.utility_test.fifo_build_test.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env16078 = cljs.test.empty_env.call(null);
  var summary16079 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16078, summary16079) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env16078);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.utility-test", "tiltontec.rube.utility-test", 1712921856, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__9951__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__9951__auto__, env16078, summary16079) {
          return function() {
            if (env__9951__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__9951__auto__, env16078, summary16079)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.rube.utility_test.fake_cl;
        }, new cljs.core.Symbol("tiltontec.rube.utility-test", "fake-cl", "tiltontec.rube.utility-test/fake-cl", -1897419596, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.utility-test", "tiltontec.rube.utility-test", 1712921856, null), new cljs.core.Symbol(null, "fake-cl", "fake-cl", -506046351, null), "test/tiltontec/rube/utility_test.cljc", 17, 1, 22, 22, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.utility_test.fake_cl) ? tiltontec.rube.utility_test.fake_cl.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.utility_test.setify;
        }, new cljs.core.Symbol("tiltontec.rube.utility-test", "setify", "tiltontec.rube.utility-test/setify", 578101936, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.utility-test", "tiltontec.rube.utility-test", 1712921856, null), new cljs.core.Symbol(null, "setify", "setify", 86404727, null), "test/tiltontec/rube/utility_test.cljc", 16, 1, 36, 36, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.rube.utility_test.setify) ? tiltontec.rube.utility_test.setify.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.utility_test.test_rmap;
        }, new cljs.core.Symbol("tiltontec.rube.utility-test", "test-rmap", "tiltontec.rube.utility-test/test-rmap", 218980905, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.utility-test", "tiltontec.rube.utility-test", 1712921856, null), new cljs.core.Symbol(null, "test-rmap", "test-rmap", 786413294, null), "test/tiltontec/rube/utility_test.cljc", 19, 1, 49, 
        49, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.utility_test.test_rmap) ? tiltontec.rube.utility_test.test_rmap.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.utility_test.err_handling;
        }, new cljs.core.Symbol("tiltontec.rube.utility-test", "err-handling", "tiltontec.rube.utility-test/err-handling", 866158152, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.utility-test", "tiltontec.rube.utility-test", 1712921856, null), new cljs.core.Symbol(null, "err-handling", "err-handling", 751948053, null), "test/tiltontec/rube/utility_test.cljc", 
        22, 1, 64, 64, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.utility_test.err_handling) ? tiltontec.rube.utility_test.err_handling.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.utility_test.fifo_build;
        }, new cljs.core.Symbol("tiltontec.rube.utility-test", "fifo-build", "tiltontec.rube.utility-test/fifo-build", 2102704491, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.utility-test", "tiltontec.rube.utility-test", 1712921856, null), new cljs.core.Symbol(null, "fifo-build", "fifo-build", 1577255980, null), "test/tiltontec/rube/utility_test.cljc", 
        20, 1, 91, 91, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.utility_test.fifo_build) ? tiltontec.rube.utility_test.fifo_build.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.utility_test.fifo_build_test;
        }, new cljs.core.Symbol("tiltontec.rube.utility-test", "fifo-build-test", "tiltontec.rube.utility-test/fifo-build-test", 1595549936, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.utility-test", "tiltontec.rube.utility-test", 1712921856, null), new cljs.core.Symbol(null, "fifo-build-test", "fifo-build-test", 1616174349, null), "test/tiltontec/rube/utility_test.cljc", 
        25, 1, 113, 113, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.utility_test.fifo_build_test) ? tiltontec.rube.utility_test.fifo_build_test.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__9951__auto__, env16078, summary16079) {
          return function() {
            if (env__9951__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__9951__auto__, env16078, summary16079)], null));
      }());
    };
  }(env16078, summary16079), function(env16078, summary16079) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.utility-test", "tiltontec.rube.utility-test", 1712921856, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env16078, summary16079)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16078, summary16079) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary16079, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary16079), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env16078, summary16079)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16078, summary16079) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env16078);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary16079));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary16079), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env16078, summary16079)], null));
}());
goog.provide("tiltontec.rube.lazy_cells_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.rube.ut_macros");
goog.require("tiltontec.rube.cell_types");
goog.require("tiltontec.rube.integrity");
goog.require("tiltontec.rube.evaluate");
goog.require("tiltontec.rube.observer");
goog.require("tiltontec.rube.cells");
tiltontec.rube.lazy_cells_test.solid_lazy = function tiltontec$rube$lazy_cells_test$solid_lazy() {
  return cljs.test.test_var.call(null, tiltontec$rube$lazy_cells_test$solid_lazy.cljs$lang$var);
};
tiltontec.rube.lazy_cells_test.solid_lazy.cljs$lang$test = function() {
  tiltontec.rube.cell_types.cells_init.call(null);
  var xo = cljs.core.atom.call(null, 0);
  var a = tiltontec.rube.cells.c_in.call(null, 0);
  var x = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(xo, a) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, xo, cljs.core.inc);
    };
  }(xo, a), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null)), 40)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "lazy", "lazy", -424547181), true, new cljs.core.Keyword(null, "rule", "rule", 729973257), 
  function(xo, a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      return tiltontec.rube.evaluate.c_get.call(null, a) + 40;
    };
  }(xo, a));
  try {
    var values__10783__auto___11776 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), tiltontec.rube.cell_types.unbound);
    var result__10784__auto___11777 = cljs.core.apply.call(null, cljs.core._EQ_, values__10783__auto___11776);
    if (cljs.core.truth_(result__10784__auto___11777)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10783__auto___11776), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10783__auto___11776)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], 
      null));
    }
  } catch (e11768) {
    var t__10821__auto___11778 = e11768;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10821__auto___11778, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10783__auto___11779 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 0);
    var result__10784__auto___11780 = cljs.core.apply.call(null, cljs.core._EQ_, values__10783__auto___11779);
    if (cljs.core.truth_(result__10784__auto___11780)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10783__auto___11779), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10783__auto___11779)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11769) {
    var t__10821__auto___11781 = e11769;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10821__auto___11781, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10783__auto___11782 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, x)), 40);
    var result__10784__auto___11783 = cljs.core.apply.call(null, cljs.core._EQ_, values__10783__auto___11782);
    if (cljs.core.truth_(result__10784__auto___11783)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10783__auto___11782), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10783__auto___11782)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11770) {
    var t__10821__auto___11784 = e11770;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10821__auto___11784, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10783__auto___11785 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 1);
    var result__10784__auto___11786 = cljs.core.apply.call(null, cljs.core._EQ_, values__10783__auto___11785);
    if (cljs.core.truth_(result__10784__auto___11786)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10783__auto___11785), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10783__auto___11785)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11771) {
    var t__10821__auto___11787 = e11771;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10821__auto___11787, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.cells.c_reset_BANG_.call(null, a, 100);
  try {
    var values__10783__auto___11788 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 1);
    var result__10784__auto___11789 = cljs.core.apply.call(null, cljs.core._EQ_, values__10783__auto___11788);
    if (cljs.core.truth_(result__10784__auto___11789)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10783__auto___11788), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10783__auto___11788)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11772) {
    var t__10821__auto___11790 = e11772;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10821__auto___11790, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10783__auto___11791 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), 40);
    var result__10784__auto___11792 = cljs.core.apply.call(null, cljs.core._EQ_, values__10783__auto___11791);
    if (cljs.core.truth_(result__10784__auto___11792)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10783__auto___11791), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10783__auto___11791)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11773) {
    var t__10821__auto___11793 = e11773;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10821__auto___11793, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10783__auto___11794 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, x)), 140);
    var result__10784__auto___11795 = cljs.core.apply.call(null, cljs.core._EQ_, values__10783__auto___11794);
    if (cljs.core.truth_(result__10784__auto___11795)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10783__auto___11794), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10783__auto___11794)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11774) {
    var t__10821__auto___11796 = e11774;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10821__auto___11796, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10783__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 2);
    var result__10784__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10783__auto__);
    if (cljs.core.truth_(result__10784__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10783__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10783__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10784__auto__;
  } catch (e11775) {
    var t__10821__auto__ = e11775;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10821__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.lazy_cells_test.solid_lazy.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.lazy_cells_test.solid_lazy;
}, new cljs.core.Symbol("tiltontec.rube.lazy-cells-test", "solid-lazy", "tiltontec.rube.lazy-cells-test/solid-lazy", -1607754131, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.lazy-cells-test", "tiltontec.rube.lazy-cells-test", 533268098, null), new cljs.core.Symbol(null, "solid-lazy", "solid-lazy", -1673817790, null), "test/tiltontec/rube/lazy_cells_test.cljc", 
20, 1, 40, 40, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.lazy_cells_test.solid_lazy) ? tiltontec.rube.lazy_cells_test.solid_lazy.cljs$lang$test : null]));
tiltontec.rube.lazy_cells_test.lazy_until_asked = function tiltontec$rube$lazy_cells_test$lazy_until_asked() {
  return cljs.test.test_var.call(null, tiltontec$rube$lazy_cells_test$lazy_until_asked.cljs$lang$var);
};
tiltontec.rube.lazy_cells_test.lazy_until_asked.cljs$lang$test = function() {
  tiltontec.rube.cell_types.cells_init.call(null);
  var xo = cljs.core.atom.call(null, 0);
  var xr = cljs.core.atom.call(null, 0);
  var a = tiltontec.rube.cells.c_in.call(null, 0);
  var x = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(xo, xr, a) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, xo, cljs.core.inc);
    };
  }(xo, xr, a), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null)), 40)), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "lazy", "lazy", -424547181), new cljs.core.Keyword(null, "until-asked", "until-asked", -1449069768), new cljs.core.Keyword(null, "rule", "rule", 729973257), function(xo, xr, a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, xr, cljs.core.inc);
      return tiltontec.rube.evaluate.c_get.call(null, a) + 40;
    };
  }(xo, xr, a));
  try {
    var values__10783__auto___11809 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), tiltontec.rube.cell_types.unbound);
    var result__10784__auto___11810 = cljs.core.apply.call(null, cljs.core._EQ_, values__10783__auto___11809);
    if (cljs.core.truth_(result__10784__auto___11810)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10783__auto___11809), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10783__auto___11809)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], 
      null));
    }
  } catch (e11797) {
    var t__10821__auto___11811 = e11797;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "unbound", "unbound", 274204873, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10821__auto___11811, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10783__auto___11812 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 0);
    var result__10784__auto___11813 = cljs.core.apply.call(null, cljs.core._EQ_, values__10783__auto___11812);
    if (cljs.core.truth_(result__10784__auto___11813)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10783__auto___11812), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10783__auto___11812)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11798) {
    var t__10821__auto___11814 = e11798;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10821__auto___11814, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10783__auto___11815 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xr)), 0);
    var result__10784__auto___11816 = cljs.core.apply.call(null, cljs.core._EQ_, values__10783__auto___11815);
    if (cljs.core.truth_(result__10784__auto___11816)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10783__auto___11815), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10783__auto___11815)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11799) {
    var t__10821__auto___11817 = e11799;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10821__auto___11817, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10783__auto___11818 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, x)), 40);
    var result__10784__auto___11819 = cljs.core.apply.call(null, cljs.core._EQ_, values__10783__auto___11818);
    if (cljs.core.truth_(result__10784__auto___11819)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10783__auto___11818), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10783__auto___11818)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11800) {
    var t__10821__auto___11820 = e11800;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10821__auto___11820, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10783__auto___11821 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 1);
    var result__10784__auto___11822 = cljs.core.apply.call(null, cljs.core._EQ_, values__10783__auto___11821);
    if (cljs.core.truth_(result__10784__auto___11822)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10783__auto___11821), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10783__auto___11821)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11801) {
    var t__10821__auto___11823 = e11801;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10821__auto___11823, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10783__auto___11824 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xr)), 1);
    var result__10784__auto___11825 = cljs.core.apply.call(null, cljs.core._EQ_, values__10783__auto___11824);
    if (cljs.core.truth_(result__10784__auto___11825)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10783__auto___11824), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10783__auto___11824)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11802) {
    var t__10821__auto___11826 = e11802;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10821__auto___11826, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.cells.c_reset_BANG_.call(null, a, 100);
  try {
    var values__10783__auto___11827 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 2);
    var result__10784__auto___11828 = cljs.core.apply.call(null, cljs.core._EQ_, values__10783__auto___11827);
    if (cljs.core.truth_(result__10784__auto___11828)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10783__auto___11827), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10783__auto___11827)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11803) {
    var t__10821__auto___11829 = e11803;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10821__auto___11829, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10783__auto___11830 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xr)), 2);
    var result__10784__auto___11831 = cljs.core.apply.call(null, cljs.core._EQ_, values__10783__auto___11830);
    if (cljs.core.truth_(result__10784__auto___11831)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10783__auto___11830), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10783__auto___11830)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11804) {
    var t__10821__auto___11832 = e11804;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10821__auto___11832, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10783__auto___11833 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, x))), 140);
    var result__10784__auto___11834 = cljs.core.apply.call(null, cljs.core._EQ_, values__10783__auto___11833);
    if (cljs.core.truth_(result__10784__auto___11834)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10783__auto___11833), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10783__auto___11833)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11805) {
    var t__10821__auto___11835 = e11805;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "x", "x", -555367584, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10821__auto___11835, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10783__auto___11836 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, x)), 140);
    var result__10784__auto___11837 = cljs.core.apply.call(null, cljs.core._EQ_, values__10783__auto___11836);
    if (cljs.core.truth_(result__10784__auto___11837)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10783__auto___11836), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10783__auto___11836)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11806) {
    var t__10821__auto___11838 = e11806;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 140, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10821__auto___11838, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10783__auto___11839 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xo)), 2);
    var result__10784__auto___11840 = cljs.core.apply.call(null, cljs.core._EQ_, values__10783__auto___11839);
    if (cljs.core.truth_(result__10784__auto___11840)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10783__auto___11839), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10783__auto___11839)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11807) {
    var t__10821__auto___11841 = e11807;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xo", "xo", -2046843089, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10821__auto___11841, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10783__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, xr)), 2);
    var result__10784__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__10783__auto__);
    if (cljs.core.truth_(result__10784__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10783__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10783__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10784__auto__;
  } catch (e11808) {
    var t__10821__auto__ = e11808;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10821__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.lazy_cells_test.lazy_until_asked.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.lazy_cells_test.lazy_until_asked;
}, new cljs.core.Symbol("tiltontec.rube.lazy-cells-test", "lazy-until-asked", "tiltontec.rube.lazy-cells-test/lazy-until-asked", -1071309444, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.lazy-cells-test", "tiltontec.rube.lazy-cells-test", 533268098, null), new cljs.core.Symbol(null, "lazy-until-asked", "lazy-until-asked", -63631277, null), "test/tiltontec/rube/lazy_cells_test.cljc", 
26, 1, 57, 57, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.lazy_cells_test.lazy_until_asked) ? tiltontec.rube.lazy_cells_test.lazy_until_asked.cljs$lang$test : null]));
tiltontec.rube.lazy_cells_test.optimize_when_value_t = function tiltontec$rube$lazy_cells_test$optimize_when_value_t() {
  return cljs.test.test_var.call(null, tiltontec$rube$lazy_cells_test$optimize_when_value_t.cljs$lang$var);
};
tiltontec.rube.lazy_cells_test.optimize_when_value_t.cljs$lang$test = function() {
  tiltontec.rube.cell_types.cells_init.call(null);
  var xo = cljs.core.atom.call(null, 0);
  var xr = cljs.core.atom.call(null, 0);
  var a = tiltontec.rube.cells.c_in.call(null, 0, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "aaa", "aaa", 392664825));
  var x = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "xxx", "xxx", -1019301908), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(xo, xr, a) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, xo, cljs.core.inc);
    };
  }(xo, xr, a), new cljs.core.Keyword(null, "optimize", "optimize", -1912349448), new cljs.core.Keyword(null, "when-value-t", "when-value-t", 1756613336), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "xr", "xr", -1763966676, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), null, 
  new cljs.core.Keyword(null, "reading-a!!!", "reading-a!!!", -391404819)), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "av", "av", 1883447185, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null))], null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 
  1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "av", "av", 1883447185, null), 1), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), new cljs.core.Symbol(null, "av", "av", 1883447185, null), 40)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(xo, xr, a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, xr, cljs.core.inc);
      tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "reading-a!!!", "reading-a!!!", -391404819));
      var temp__4425__auto__ = tiltontec.rube.evaluate.c_get.call(null, a);
      if (cljs.core.truth_(temp__4425__auto__)) {
        var av = temp__4425__auto__;
        if (av > 1) {
          return av + 40;
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(xo, xr, a));
  try {
    var values__10783__auto___11849 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, x));
    var result__10784__auto___11850 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10783__auto___11849);
    if (cljs.core.truth_(result__10784__auto___11850)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10783__auto___11849), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10783__auto___11849)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11842) {
    var t__10821__auto___11851 = e11842;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__10821__auto___11851, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10783__auto___11852 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_useds.call(null, x)), cljs.core.PersistentHashSet.fromArray([a], true));
    var result__10784__auto___11853 = cljs.core.apply.call(null, cljs.core._EQ_, values__10783__auto___11852);
    if (cljs.core.truth_(result__10784__auto___11853)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10783__auto___11852), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10783__auto___11852)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11843) {
    var t__10821__auto___11854 = e11843;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10821__auto___11854, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.cells.c_reset_BANG_.call(null, a, 1);
  tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "reset-finished!!!!!!!!!!", "reset-finished!!!!!!!!!!", -898693691));
  try {
    var values__10783__auto___11855 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, x));
    var result__10784__auto___11856 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__10783__auto___11855);
    if (cljs.core.truth_(result__10784__auto___11856)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__10783__auto___11855), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__10783__auto___11855)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11844) {
    var t__10821__auto___11857 = e11844;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__10821__auto___11857, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10783__auto___11858 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_useds.call(null, x)), cljs.core.PersistentHashSet.fromArray([a], true));
    var result__10784__auto___11859 = cljs.core.apply.call(null, cljs.core._EQ_, values__10783__auto___11858);
    if (cljs.core.truth_(result__10784__auto___11859)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10783__auto___11858), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10783__auto___11858)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11845) {
    var t__10821__auto___11860 = e11845;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null, "a", "a", -482876059, null), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__10821__auto___11860, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "reset-2-beginning!!!!!!!!!!!!", "reset-2-beginning!!!!!!!!!!!!", 206221749));
  tiltontec.rube.cells.c_reset_BANG_.call(null, a, 2);
  tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "reset-2-finished!!!!!!!!!!", "reset-2-finished!!!!!!!!!!", -1742930051));
  try {
    var values__10783__auto___11861 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, x)), 42);
    var result__10784__auto___11862 = cljs.core.apply.call(null, cljs.core._EQ_, values__10783__auto___11861);
    if (cljs.core.truth_(result__10784__auto___11862)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__10783__auto___11861), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__10783__auto___11861)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11846) {
    var t__10821__auto___11863 = e11846;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10821__auto___11863, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__10783__auto___11864 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_useds.call(null, x));
    var result__10784__auto___11865 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__10783__auto___11864);
    if (cljs.core.truth_(result__10784__auto___11865)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__10783__auto___11864), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__10783__auto___11864)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e11847) {
    var t__10821__auto___11866 = e11847;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10821__auto___11866, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "useds", "useds", 621350967), tiltontec.rube.cell_types.c_useds.call(null, x));
  try {
    var values__10783__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_callers.call(null, x));
    var result__10784__auto__ = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__10783__auto__);
    if (cljs.core.truth_(result__10784__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__10783__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__10783__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__10784__auto__;
  } catch (e11848) {
    var t__10821__auto__ = e11848;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "x", "x", -555367584, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__10821__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.lazy_cells_test.optimize_when_value_t.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.lazy_cells_test.optimize_when_value_t;
}, new cljs.core.Symbol("tiltontec.rube.lazy-cells-test", "optimize-when-value-t", "tiltontec.rube.lazy-cells-test/optimize-when-value-t", -1558246733, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.lazy-cells-test", "tiltontec.rube.lazy-cells-test", 533268098, null), new cljs.core.Symbol(null, "optimize-when-value-t", "optimize-when-value-t", 2131697560, null), "test/tiltontec/rube/lazy_cells_test.cljc", 
31, 1, 80, 80, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.lazy_cells_test.optimize_when_value_t) ? tiltontec.rube.lazy_cells_test.optimize_when_value_t.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env11867 = cljs.test.empty_env.call(null);
  var summary11868 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env11867, summary11868) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env11867);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.lazy-cells-test", "tiltontec.rube.lazy-cells-test", 533268098, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__10888__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10888__auto__, env11867, summary11868) {
          return function() {
            if (env__10888__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__10888__auto__, env11867, summary11868)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.rube.lazy_cells_test.solid_lazy;
        }, new cljs.core.Symbol("tiltontec.rube.lazy-cells-test", "solid-lazy", "tiltontec.rube.lazy-cells-test/solid-lazy", -1607754131, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.lazy-cells-test", "tiltontec.rube.lazy-cells-test", 533268098, null), new cljs.core.Symbol(null, "solid-lazy", "solid-lazy", -1673817790, null), "test/tiltontec/rube/lazy_cells_test.cljc", 
        20, 1, 40, 40, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.lazy_cells_test.solid_lazy) ? tiltontec.rube.lazy_cells_test.solid_lazy.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.lazy_cells_test.lazy_until_asked;
        }, new cljs.core.Symbol("tiltontec.rube.lazy-cells-test", "lazy-until-asked", "tiltontec.rube.lazy-cells-test/lazy-until-asked", -1071309444, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.lazy-cells-test", "tiltontec.rube.lazy-cells-test", 533268098, null), new cljs.core.Symbol(null, "lazy-until-asked", "lazy-until-asked", -63631277, null), "test/tiltontec/rube/lazy_cells_test.cljc", 
        26, 1, 57, 57, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.lazy_cells_test.lazy_until_asked) ? tiltontec.rube.lazy_cells_test.lazy_until_asked.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.lazy_cells_test.optimize_when_value_t;
        }, new cljs.core.Symbol("tiltontec.rube.lazy-cells-test", "optimize-when-value-t", "tiltontec.rube.lazy-cells-test/optimize-when-value-t", -1558246733, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
        new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.lazy-cells-test", "tiltontec.rube.lazy-cells-test", 533268098, null), new cljs.core.Symbol(null, "optimize-when-value-t", "optimize-when-value-t", 2131697560, 
        null), "test/tiltontec/rube/lazy_cells_test.cljc", 31, 1, 80, 80, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.lazy_cells_test.optimize_when_value_t) ? tiltontec.rube.lazy_cells_test.optimize_when_value_t.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10888__auto__, env11867, summary11868) {
          return function() {
            if (env__10888__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__10888__auto__, env11867, summary11868)], null));
      }());
    };
  }(env11867, summary11868), function(env11867, summary11868) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.lazy-cells-test", "tiltontec.rube.lazy-cells-test", 533268098, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env11867, summary11868)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env11867, summary11868) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary11868, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary11868), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env11867, summary11868)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env11867, summary11868) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env11867);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary11868));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary11868), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env11867, summary11868)], null));
}());
goog.provide("tiltontec.rube.test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.rube.model");
cljs.core.enable_console_print_BANG_.call(null);
tiltontec.rube.test.run = function tiltontec$rube$test$run() {
  cljs.test.run_block.call(null, function() {
    var env11646 = cljs.test.empty_env.call(null);
    var summary11647 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
    return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env11646, summary11647) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env11646);
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.model", "tiltontec.rube.model", 42482659, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
        return cljs.test.block.call(null, function() {
          var env__10982__auto__ = cljs.test.get_current_env.call(null);
          return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10982__auto__, env11646, summary11647) {
            return function() {
              if (env__10982__auto__ == null) {
                cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
              } else {
              }
              return null;
            };
          }(env__10982__auto__, env11646, summary11647)], null), cljs.test.test_vars_block.call(null, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10982__auto__, env11646, summary11647) {
            return function() {
              if (env__10982__auto__ == null) {
                return cljs.test.clear_env_BANG_.call(null);
              } else {
                return null;
              }
            };
          }(env__10982__auto__, env11646, summary11647)], null));
        }());
      };
    }(env11646, summary11647), function(env11646, summary11647) {
      return function() {
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.model", "tiltontec.rube.model", 42482659, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
      };
    }(env11646, summary11647)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env11646, summary11647) {
      return function() {
        return cljs.core._vreset_BANG_.call(null, summary11647, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary11647), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
      };
    }(env11646, summary11647)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env11646, summary11647) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env11646);
        cljs.test.do_report.call(null, cljs.core.deref.call(null, summary11647));
        cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary11647), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
        return cljs.test.clear_env_BANG_.call(null);
      };
    }(env11646, summary11647)], null));
  }());
  return cljs.test.run_block.call(null, function() {
    var env11648 = /tiltontec.rube.*-test/;
    var summary11649 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
    return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env11648, summary11649) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env11648);
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.test", "tiltontec.rube.test", -462790368, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
        return cljs.test.block.call(null, function() {
          var env__10982__auto__ = cljs.test.get_current_env.call(null);
          return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10982__auto__, env11648, summary11649) {
            return function() {
              if (env__10982__auto__ == null) {
                cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
              } else {
              }
              return null;
            };
          }(env__10982__auto__, env11648, summary11649)], null), cljs.test.test_vars_block.call(null, cljs.core.PersistentVector.EMPTY), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__10982__auto__, env11648, summary11649) {
            return function() {
              if (env__10982__auto__ == null) {
                return cljs.test.clear_env_BANG_.call(null);
              } else {
                return null;
              }
            };
          }(env__10982__auto__, env11648, summary11649)], null));
        }());
      };
    }(env11648, summary11649), function(env11648, summary11649) {
      return function() {
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.test", "tiltontec.rube.test", -462790368, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
      };
    }(env11648, summary11649)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env11648, summary11649) {
      return function() {
        return cljs.core._vreset_BANG_.call(null, summary11649, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary11649), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
      };
    }(env11648, summary11649)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env11648, summary11649) {
      return function() {
        cljs.test.set_env_BANG_.call(null, env11648);
        cljs.test.do_report.call(null, cljs.core.deref.call(null, summary11649));
        cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary11649), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
        return cljs.test.clear_env_BANG_.call(null);
      };
    }(env11648, summary11649)], null));
  }());
};
goog.exportSymbol("tiltontec.rube.test.run", tiltontec.rube.test.run);
goog.provide("tiltontec.rube.model_test");
goog.require("cljs.core");
goog.require("tiltontec.rube.model");
goog.require("tiltontec.rube.family");
goog.require("tiltontec.rube.cell_types");
goog.require("tiltontec.rube.integrity");
goog.require("tiltontec.rube.cells");
goog.require("cljs.test");
goog.require("tiltontec.rube.model_base");
goog.require("tiltontec.rube.evaluate");
goog.require("tiltontec.rube.utility");
goog.require("tiltontec.rube.observer");
goog.require("tiltontec.rube.ut_macros");
cljs.core.derive.call(null, tiltontec.rube.cell_types.ia_types, new cljs.core.Keyword("tiltontec.rube.model-test", "typetest", "tiltontec.rube.model-test/typetest", 224353253), new cljs.core.Keyword("tiltontec.rube.cell-types", "model", "tiltontec.rube.cell-types/model", 1406839549));
tiltontec.rube.model_test.mm_typed = function tiltontec$rube$model_test$mm_typed() {
  return cljs.test.test_var.call(null, tiltontec$rube$model_test$mm_typed.cljs$lang$var);
};
tiltontec.rube.model_test.mm_typed.cljs$lang$test = function() {
  var me = tiltontec.rube.model.make.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword("tiltontec.rube.model-test", "typetest", "tiltontec.rube.model-test/typetest", 224353253), new cljs.core.Keyword(null, "x2", "x2", -1362513475), tiltontec.rube.cells.c_in.call(null, 2), new cljs.core.Keyword(null, "age", "age", -604307804), tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, 
  "*", "*", 345799209, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "x2", "x2", -1362513475)), 21)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
    return tiltontec.rube.model_base.md_get.call(null, me, new cljs.core.Keyword(null, "x2", "x2", -1362513475)) * 21;
  }));
  try {
    var values__9846__auto___16162 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.model_base.md_get.call(null, me, new cljs.core.Keyword(null, "age", "age", -604307804))), 42);
    var result__9847__auto___16163 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16162);
    if (cljs.core.truth_(result__9847__auto___16163)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16162), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16162)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16160) {
    var t__9884__auto___16164 = e16160;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
    "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16164, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.rube.model-test", "typetest", "tiltontec.rube.model-test/typetest", 224353253)), me);
    var result__9847__auto__ = cljs.core.apply.call(null, tiltontec.rube.cell_types.ia_type_QMARK_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword("tiltontec.rube.model-test", "typetest", "tiltontec.rube.model-test/typetest", 
      224353253)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.cell_types.ia_type_QMARK_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword("tiltontec.rube.model-test", "typetest", "tiltontec.rube.model-test/typetest", 
      224353253)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16161) {
    var t__9884__auto__ = e16161;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword("tiltontec.rube.model-test", "typetest", "tiltontec.rube.model-test/typetest", 
    224353253)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.model_test.mm_typed.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.model_test.mm_typed;
}, new cljs.core.Symbol("tiltontec.rube.model-test", "mm-typed", "tiltontec.rube.model-test/mm-typed", 2124565881, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.model-test", "tiltontec.rube.model-test", 1830097362, null), new cljs.core.Symbol(null, "mm-typed", "mm-typed", 1121916947, null), "test/tiltontec/rube/model_test.cljc", 18, 1, 50, 50, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.rube.model_test.mm_typed) ? tiltontec.rube.model_test.mm_typed.cljs$lang$test : null]));
tiltontec.rube.model_test.mm_opti_1 = function tiltontec$rube$model_test$mm_opti_1() {
  return cljs.test.test_var.call(null, tiltontec$rube$model_test$mm_opti_1.cljs$lang$var);
};
tiltontec.rube.model_test.mm_opti_1.cljs$lang$test = function() {
  var me = tiltontec.rube.model.make.call(null, new cljs.core.Keyword(null, "x2", "x2", -1362513475), 2, new cljs.core.Keyword(null, "age", "age", -604307804), tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 21, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
  "x2", "x2", -1362513475)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
    return 21 * tiltontec.rube.model_base.md_get.call(null, me, new cljs.core.Keyword(null, "x2", "x2", -1362513475));
  }));
  cljs.core.println.call(null, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core.meta.call(null, me));
  try {
    var values__9846__auto___16168 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.model_base.md_get.call(null, me, new cljs.core.Keyword(null, "x2", "x2", -1362513475))), 2);
    var result__9847__auto___16169 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16168);
    if (cljs.core.truth_(result__9847__auto___16169)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "x2", "x2", -1362513475))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16168), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "x2", "x2", -1362513475))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16168)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16165) {
    var t__9884__auto___16170 = e16165;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
    "x2", "x2", -1362513475))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16170, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16171 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.model_base.md_get.call(null, me, new cljs.core.Keyword(null, "age", "age", -604307804))), 42);
    var result__9847__auto___16172 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16171);
    if (cljs.core.truth_(result__9847__auto___16172)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16171), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16171)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16166) {
    var t__9884__auto___16173 = e16166;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
    "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16173, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.model_base.md_cell.call(null, me, new cljs.core.Keyword(null, "age", "age", -604307804)));
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
      "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16167) {
    var t__9884__auto__ = e16167;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, 
    "age", "age", -604307804))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.model_test.mm_opti_1.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.model_test.mm_opti_1;
}, new cljs.core.Symbol("tiltontec.rube.model-test", "mm-opti-1", "tiltontec.rube.model-test/mm-opti-1", -1962627333, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.model-test", "tiltontec.rube.model-test", 1830097362, null), new cljs.core.Symbol(null, "mm-opti-1", "mm-opti-1", -1060539455, null), "test/tiltontec/rube/model_test.cljc", 19, 1, 59, 59, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.rube.model_test.mm_opti_1) ? tiltontec.rube.model_test.mm_opti_1.cljs$lang$test : null]));
tiltontec.rube.model_test.mm_install_alive = function tiltontec$rube$model_test$mm_install_alive() {
  return cljs.test.test_var.call(null, tiltontec$rube$model_test$mm_install_alive.cljs$lang$var);
};
tiltontec.rube.model_test.mm_install_alive.cljs$lang$test = function() {
  var bct = cljs.core.atom.call(null, 0);
  var res = tiltontec.rube.model.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), "Bob", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.rube.cells.c_in.call(null, null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true), new cljs.core.Keyword(null, "bogus", "bogus", 637345996), tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, 
  "if-let", "if-let", 1803593690, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "be", "be", -1545923187, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242))], null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, 
  "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "bingo-e!!!!!!!!", "bingo-e!!!!!!!!", -1781230244), new cljs.core.Symbol(null, "be", "be", -1545923187, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null), new cljs.core.Symbol(null, 
  "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 2, new cljs.core.Symbol(null, "be", "be", -1545923187, null))), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "bogus-no-e", "bogus-no-e", 2095562930), cljs.core.list(new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, 
  "me", "me", 1501524834, null)))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(bct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      var temp__4423__auto__ = tiltontec.rube.model_base.md_get.call(null, me, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242));
      if (cljs.core.truth_(temp__4423__auto__)) {
        var be = temp__4423__auto__;
        tiltontec.rube.ut_macros.call_trc.call(null, ":bingo-e!!!!!!!!", be, cljs.core.deref.call(null, bct));
        cljs.core.swap_BANG_.call(null, bct, cljs.core.inc);
        return 2 * be;
      } else {
        return tiltontec.rube.ut_macros.call_trc.call(null, ":bogus-no-e", (new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me)));
      }
    };
  }(bct)), new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), tiltontec.rube.cells.c_in.call(null, 21, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true), new cljs.core.Keyword(null, "loc", "loc", -584284901), tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", 
  -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "action", "action", -811238024)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, 
  new cljs.core.Keyword(null, "rule", "rule", 729973257), function(bct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      var G__16176 = tiltontec.rube.model_base.md_get.call(null, me, new cljs.core.Keyword(null, "action", "action", -811238024)) instanceof cljs.core.Keyword ? tiltontec.rube.model_base.md_get.call(null, me, new cljs.core.Keyword(null, "action", "action", -811238024)).fqn : null;
      switch(G__16176) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(bct)));
  cljs.core.println.call(null, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core.meta.call(null, res));
  try {
    var values__9846__auto___16193 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.model_base.md_cz.call(null, res)), (new cljs.core.Keyword(null, "cz", "cz", 1670864932)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, res)));
    var result__9847__auto___16194 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16193);
    if (cljs.core.truth_(result__9847__auto___16194)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "cz", "cz", 1670864932), cljs.core.list(new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, 
      "res", "res", 245523648, null))), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16193), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "cz", "cz", 1670864932), cljs.core.list(new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, 
      "res", "res", 245523648, null))), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16193)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e16177) {
    var t__9884__auto___16195 = e16177;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Keyword(null, "cz", "cz", 1670864932), cljs.core.list(new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, 
    "res", "res", 245523648, null))), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16195, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16196 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.rube.model_base.md_cz.call(null, res))), 4);
    var result__9847__auto___16197 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16196);
    if (cljs.core.truth_(result__9847__auto___16197)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, 
      "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16196), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, 
      "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16196)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16178) {
    var t__9884__auto___16198 = e16178;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, 
    "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16198, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16199 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vals.call(null, tiltontec.rube.model_base.md_cz.call(null, res))), tiltontec.rube.cell_types.c_ref_QMARK_);
    var result__9847__auto___16200 = cljs.core.apply.call(null, cljs.core.every_QMARK_, values__9846__auto___16199);
    if (cljs.core.truth_(result__9847__auto___16200)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, 
      "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.every_QMARK_, values__9846__auto___16199), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, 
      "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), values__9846__auto___16199)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16179) {
    var t__9884__auto___16201 = e16179;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, 
    "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16201, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16202 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.set.call(null, cljs.core.keys.call(null, tiltontec.rube.model_base.md_cz.call(null, res)))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, 
    "bogus-e", "bogus-e", -1082314242), null], null), null));
    var result__9847__auto___16203 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16202);
    if (cljs.core.truth_(result__9847__auto___16203)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
      "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16202), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
      "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16202)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16180) {
    var t__9884__auto___16204 = e16180;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
    "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16204, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16205 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.vals.call(null, tiltontec.rube.model_base.md_cz.call(null, res))), function(bct, res) {
      return function(p1__16174_SHARP_) {
        return cljs.core._EQ_.call(null, res, tiltontec.rube.cell_types.c_me.call(null, p1__16174_SHARP_));
      };
    }(bct, res));
    var result__9847__auto___16206 = cljs.core.apply.call(null, cljs.core.every_QMARK_, values__9846__auto___16205);
    if (cljs.core.truth_(result__9847__auto___16206)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p1__16174#", "p1__16174#", 99272705, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "res", "res", 245523648, null), cljs.core.list(new cljs.core.Symbol(null, "c-me", "c-me", 1049565946, null), new cljs.core.Symbol(null, "p1__16174#", "p1__16174#", 99272705, null)))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), 
      new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.every_QMARK_, values__9846__auto___16205), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p1__16174#", "p1__16174#", 99272705, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "res", "res", 245523648, null), cljs.core.list(new cljs.core.Symbol(null, "c-me", "c-me", 1049565946, null), new cljs.core.Symbol(null, "p1__16174#", "p1__16174#", 99272705, null)))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), 
      new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), values__9846__auto___16205)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16181) {
    var t__9884__auto___16207 = e16181;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "every?", "every?", 2083724064, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
    "p1__16174#", "p1__16174#", 99272705, null)], null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Symbol(null, "res", "res", 245523648, null), cljs.core.list(new cljs.core.Symbol(null, "c-me", "c-me", 1049565946, null), new cljs.core.Symbol(null, "p1__16174#", "p1__16174#", 99272705, null)))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), 
    new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16207, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16208 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.set.call(null, cljs.core.map.call(null, function(bct, res) {
      return function(p1__16175_SHARP_) {
        return tiltontec.rube.cell_types.c_slot.call(null, p1__16175_SHARP_);
      };
    }(bct, res), cljs.core.vals.call(null, tiltontec.rube.model_base.md_cz.call(null, res))))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null));
    var result__9847__auto___16209 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16208);
    if (cljs.core.truth_(result__9847__auto___16209)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
      "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p1__16175#", "p1__16175#", 1821808314, null)], null), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, "p1__16175#", "p1__16175#", 1821808314, null))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      cljs.core._EQ_, values__9846__auto___16208), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
      "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
      "p1__16175#", "p1__16175#", 1821808314, null)], null), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, "p1__16175#", "p1__16175#", 1821808314, null))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16208)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16182) {
    var t__9884__auto___16210 = e16182;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "bogus", "bogus", 637345996), null, new cljs.core.Keyword(null, 
    "action", "action", -811238024), null, new cljs.core.Keyword(null, "loc", "loc", -584284901), null, new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "set", "set", 1945134081, null), cljs.core.list(new cljs.core.Symbol(null, "map", "map", -1282745308, null), cljs.core.list(new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, 
    "p1__16175#", "p1__16175#", 1821808314, null)], null), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, "p1__16175#", "p1__16175#", 1821808314, null))), cljs.core.list(new cljs.core.Symbol(null, "vals", "vals", -1886377036, null), cljs.core.list(new cljs.core.Symbol(null, "md-cz", "md-cz", 1385375176, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16210, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16211 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), "Bob");
    var result__9847__auto___16212 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16211);
    if (cljs.core.truth_(result__9847__auto___16212)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16211), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16211)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16183) {
    var t__9884__auto___16213 = e16183;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16213, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16214 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.model_base.md_name.call(null, res)), "Bob");
    var result__9847__auto___16215 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16214);
    if (cljs.core.truth_(result__9847__auto___16215)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Symbol(null, "md-name", "md-name", -1172444206, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16214), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Symbol(null, "md-name", "md-name", -1172444206, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16214)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16184) {
    var t__9884__auto___16216 = e16184;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Bob", cljs.core.list(new cljs.core.Symbol(null, "md-name", "md-name", -1172444206, null), new cljs.core.Symbol(null, "res", "res", 245523648, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16216, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.println.call(null, new cljs.core.Keyword(null, "res", "res", -1395007879), cljs.core.deref.call(null, res));
  try {
    var values__9846__auto___16217 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "bogus", "bogus", 637345996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), 42);
    var result__9847__auto___16218 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16217);
    if (cljs.core.truth_(result__9847__auto___16218)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "bogus", "bogus", 637345996), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16217), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "bogus", "bogus", 637345996), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16217)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16185) {
    var t__9884__auto___16219 = e16185;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Keyword(null, "bogus", "bogus", 637345996), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16219, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16220 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), null);
    var result__9847__auto___16221 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16220);
    if (cljs.core.truth_(result__9847__auto___16221)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16220), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16220)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16186) {
    var t__9884__auto___16222 = e16186;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "bogus-e", "bogus-e", -1082314242), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
    188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16222, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16223 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), null);
    var result__9847__auto___16224 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16223);
    if (cljs.core.truth_(result__9847__auto___16224)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16223), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16223)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16187) {
    var t__9884__auto___16225 = e16187;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
    188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16225, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.println.call(null, new cljs.core.Keyword(null, "loc", "loc", -584284901), (new cljs.core.Keyword(null, "loc", "loc", -584284901)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res)));
  try {
    var values__9846__auto___16226 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "loc", "loc", -584284901)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), new cljs.core.Keyword(null, "missing", "missing", 362507769));
    var result__9847__auto___16227 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16226);
    if (cljs.core.truth_(result__9847__auto___16227)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16226), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16226)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], 
      null));
    }
  } catch (e16188) {
    var t__9884__auto___16228 = e16188;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16228, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16229 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, bct)), 1);
    var result__9847__auto___16230 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16229);
    if (cljs.core.truth_(result__9847__auto___16230)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16229), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16229)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16189) {
    var t__9884__auto___16231 = e16189;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16231, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.reset_BANG_.call(null, bct, 0);
  tiltontec.rube.model.md_reset_BANG_.call(null, res, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__9846__auto___16232 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "loc", "loc", -584284901)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, res))), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__9847__auto___16233 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16232);
    if (cljs.core.truth_(result__9847__auto___16233)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16232), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16232)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], 
      null));
    }
  } catch (e16190) {
    var t__9884__auto___16234 = e16190;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Keyword(null, "loc", "loc", -584284901), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "res", "res", 245523648, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16234, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, bct));
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core.zero_QMARK_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.zero_QMARK_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16191) {
    var t__9884__auto__ = e16191;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "bct", "bct", 1012463539, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.model_test.mm_install_alive.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.model_test.mm_install_alive;
}, new cljs.core.Symbol("tiltontec.rube.model-test", "mm-install-alive", "tiltontec.rube.model-test/mm-install-alive", 444710762, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.model-test", "tiltontec.rube.model-test", 1830097362, null), new cljs.core.Symbol(null, "mm-install-alive", "mm-install-alive", 1190325296, null), "test/tiltontec/rube/model_test.cljc", 26, 
1, 70, 70, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.model_test.mm_install_alive) ? tiltontec.rube.model_test.mm_install_alive.cljs$lang$test : null]));
tiltontec.rube.model_test.hello_model = function tiltontec$rube$model_test$hello_model() {
  return cljs.test.test_var.call(null, tiltontec$rube$model_test$hello_model.cljs$lang$var);
};
tiltontec.rube.model_test.hello_model.cljs$lang$test = function() {
  var uni = tiltontec.rube.model.make.call(null, new cljs.core.Keyword("tiltontec.rube.family", "family", "tiltontec.rube.family/family", -303685384), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "the-kids", "the-kids", 1487890778, null), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, 
  "name", "name", 1843675177), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "moniker", "moniker", -1330203766), "World", new cljs.core.Keyword(null, "action", "action", -811238024), cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn", "fn", 465265323, 
  null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "slot", "slot", 1880761098, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Symbol(null, "new", "new", -444906321, null), new cljs.core.Symbol(null, "old", "old", -184691163, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)], null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "new", 
  "new", -444906321, null), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Symbol(null, "visitor-did", "visitor-did", 1352408685, null), new cljs.core.Symbol(null, "new", "new", -444906321, null)))))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "resident", "resident", 1053225840), new cljs.core.Keyword(null, "action", "action", -811238024), 
  cljs.core.list(new cljs.core.Symbol(null, "c-in", "c-in", 517820292, null), null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true), new cljs.core.Keyword(null, "location", "location", 1815599388), cljs.core.list(new cljs.core.Symbol(null, "c?+", "c?+", -133955249, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn-obs", "fn-obs", 305587329, 
  null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "new", "new", -444906321, null), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "honey-im", "honey-im", 546332184), new cljs.core.Symbol(null, "new", "new", -444906321, null))))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, 
  null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "action", "action", -811238024)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "response", "response", -1068424192), cljs.core.list(new cljs.core.Symbol(null, 
  "c?+", "c?+", -133955249, null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn-obs", "fn-obs", 305587329, null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "new", "new", -444906321, null), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "r-response", 
  "r-response", 1211417459), new cljs.core.Symbol(null, "new", "new", -444906321, null)))), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true], null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", 
  "me", 1501524834, null), new cljs.core.Keyword(null, "location", "location", 1815599388))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "action", 
  "action", -811238024))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world"))))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "alarm", "alarm", 2066206946), new cljs.core.Keyword(null, "on-off", "on-off", 
  420433376), cljs.core.list(new cljs.core.Symbol(null, "c?+", "c?+", -133955249, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn-obs", "fn-obs", 305587329, null), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "telling-alarm-api", "telling-alarm-api", -905807036), new cljs.core.Symbol(null, "new", "new", 
  -444906321, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388))), new cljs.core.Keyword(null, "off", "off", 606440789), 
  new cljs.core.Keyword(null, "on", "on", 173873944))), new cljs.core.Keyword(null, "activity", "activity", -1179221455), cljs.core.list(new cljs.core.Symbol(null, "c?+", "c?+", -133955249, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "obs", "obs", -664011444), cljs.core.list(new cljs.core.Symbol(null, "fn-obs", "fn-obs", 305587329, null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, 
  "new", "new", -444906321, null), new cljs.core.Keyword(null, "call-police", "call-police", -2114689981), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), new cljs.core.Keyword(null, "auto-dialing-911", "auto-dialing-911", -1790610355)), null))], null), cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "on", "on", 173873944), cljs.core.list(new cljs.core.Symbol(null, 
  "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "on-off", "on-off", 420433376))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "action", "action", 829293503, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, 
  "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "action", "action", -811238024))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, "action", "action", 829293503, null), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646), new cljs.core.Keyword(null, "call-police", "call-police", -2114689981), null))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, 
  new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_16235 = tiltontec.rube.family._STAR_par_STAR_;
    tiltontec.rube.family._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.model.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "alarm", "alarm", 2066206946), new cljs.core.Keyword(null, "on-off", "on-off", 420433376), tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), 
      function(_STAR_par_STAR_16235, me, cache) {
        return function(slot, me__$1, new$, old, c) {
          return tiltontec.rube.ut_macros.call_trc.call(null, ":telling-alarm-api", new$);
        };
      }(_STAR_par_STAR_16235, me, cache), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", 
      "location", 1815599388))), new cljs.core.Keyword(null, "off", "off", 606440789), new cljs.core.Keyword(null, "on", "on", 173873944))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_16235, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP___$1);
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.rube.model_base.md_get.call(null, tiltontec.rube.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "resident", "resident", 1053225840), me__$1), new cljs.core.Keyword(null, "location", "location", 1815599388)))) {
            return new cljs.core.Keyword(null, "off", "off", 606440789);
          } else {
            return new cljs.core.Keyword(null, "on", "on", 173873944);
          }
        };
      }(_STAR_par_STAR_16235, me, cache)), new cljs.core.Keyword(null, "activity", "activity", -1179221455), tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(_STAR_par_STAR_16235, me, cache) {
        return function(slot, me__$1, new$, old, c) {
          var G__16236 = new$ instanceof cljs.core.Keyword ? new$.fqn : null;
          switch(G__16236) {
            case "call-police":
              return tiltontec.rube.ut_macros.call_trc.call(null, ":auto-dialing-911");
              break;
            default:
              return null;
          }
        };
      }(_STAR_par_STAR_16235, me, cache), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "on", "on", 173873944), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "on-off", "on-off", 
      420433376))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "action", "action", 829293503, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "action", "action", -811238024))], null), cljs.core.list(new cljs.core.Symbol(null, 
      "case", "case", -1510733573, null), new cljs.core.Symbol(null, "action", "action", 829293503, null), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646), new cljs.core.Keyword(null, "call-police", "call-police", -2114689981), null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_16235, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP___$1);
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "on", "on", 173873944), tiltontec.rube.model_base.md_get.call(null, me__$1, new cljs.core.Keyword(null, "on-off", "on-off", 420433376)))) {
            var temp__4425__auto__ = tiltontec.rube.model_base.md_get.call(null, tiltontec.rube.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), me__$1), new cljs.core.Keyword(null, "action", "action", -811238024));
            if (cljs.core.truth_(temp__4425__auto__)) {
              var action = temp__4425__auto__;
              var G__16237 = action instanceof cljs.core.Keyword ? action.fqn : null;
              switch(G__16237) {
                case "smashing-window":
                  return new cljs.core.Keyword(null, "call-police", "call-police", -2114689981);
                  break;
                default:
                  return null;
              }
            } else {
              return null;
            }
          } else {
            return null;
          }
        };
      }(_STAR_par_STAR_16235, me, cache)))), tiltontec.rube.model.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "resident", "resident", 1053225840), new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.rube.cells.c_in.call(null, null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true), new cljs.core.Keyword(null, "location", "location", 1815599388), tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, 
      "obs", "obs", -664011444), function(_STAR_par_STAR_16235, me, cache) {
        return function(slot, me__$1, new$, old, c) {
          if (cljs.core.truth_(new$)) {
            return tiltontec.rube.ut_macros.call_trc.call(null, ":honey-im", new$);
          } else {
            return null;
          }
        };
      }(_STAR_par_STAR_16235, me, cache), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "action", "action", -811238024)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), 
      new cljs.core.Keyword(null, "return", "return", -1891502105), new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_16235, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP___$1);
          var G__16238 = tiltontec.rube.model_base.md_get.call(null, me__$1, new cljs.core.Keyword(null, "action", "action", -811238024)) instanceof cljs.core.Keyword ? tiltontec.rube.model_base.md_get.call(null, me__$1, new cljs.core.Keyword(null, "action", "action", -811238024)).fqn : null;
          switch(G__16238) {
            case "leave":
              return new cljs.core.Keyword(null, "away", "away", 1142420954);
              break;
            case "return":
              return new cljs.core.Keyword(null, "home", "home", -74557309);
              break;
            default:
              return new cljs.core.Keyword(null, "missing", "missing", 362507769);
          }
        };
      }(_STAR_par_STAR_16235, me, cache)), new cljs.core.Keyword(null, "response", "response", -1068424192), tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(_STAR_par_STAR_16235, me, cache) {
        return function(slot, me__$1, new$, old, c) {
          if (cljs.core.truth_(new$)) {
            return tiltontec.rube.ut_macros.call_trc.call(null, ":r-response", new$);
          } else {
            return null;
          }
        };
      }(_STAR_par_STAR_16235, me, cache), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
      "me", "me", 1501524834, null), new cljs.core.Keyword(null, "location", "location", 1815599388))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, 
      "action", "action", -811238024))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_16235, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP___$1);
          if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.rube.model_base.md_get.call(null, me__$1, new cljs.core.Keyword(null, "location", "location", 1815599388)))) {
            var temp__4425__auto__ = tiltontec.rube.model_base.md_get.call(null, tiltontec.rube.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), me__$1), new cljs.core.Keyword(null, "action", "action", -811238024));
            if (cljs.core.truth_(temp__4425__auto__)) {
              var act = temp__4425__auto__;
              var G__16239 = act instanceof cljs.core.Keyword ? act.fqn : null;
              switch(G__16239) {
                case "knock-knock":
                  return "hello, world";
                  break;
                default:
                  throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(act)].join(""));;
              }
            } else {
              return null;
            }
          } else {
            return null;
          }
        };
      }(_STAR_par_STAR_16235, me, cache)))), tiltontec.rube.model.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), new cljs.core.Keyword(null, "moniker", "moniker", -1330203766), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.rube.cells.c_in.call(null, null, new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "obs", "obs", -664011444), 
      function(_STAR_par_STAR_16235, me, cache) {
        return function(slot, me__$1, new$, old, c) {
          if (cljs.core.truth_(new$)) {
            return tiltontec.rube.ut_macros.call_trc.call(null, "visitor-did", new$);
          } else {
            return null;
          }
        };
      }(_STAR_par_STAR_16235, me, cache))))));
    } finally {
      tiltontec.rube.family._STAR_par_STAR_ = _STAR_par_STAR_16235;
    }
  }));
  var viz = tiltontec.rube.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "visitor", "visitor", -1026865865), uni);
  var rez = tiltontec.rube.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "resident", "resident", 1053225840), uni);
  try {
    var values__9846__auto___16250 = cljs.core._conj.call(null, cljs.core.List.EMPTY, viz == null);
    var result__9847__auto___16251 = cljs.core.apply.call(null, cljs.core.not, values__9846__auto___16250);
    if (cljs.core.truth_(result__9847__auto___16251)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "viz", "viz", -1183834940, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__9846__auto___16250), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "viz", "viz", -1183834940, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__9846__auto___16250)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16240) {
    var t__9884__auto___16252 = e16240;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "viz", "viz", -1183834940, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16252, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16253 = cljs.core._conj.call(null, cljs.core.List.EMPTY, rez == null);
    var result__9847__auto___16254 = cljs.core.apply.call(null, cljs.core.not, values__9846__auto___16253);
    if (cljs.core.truth_(result__9847__auto___16254)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "rez", "rez", 574832853, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__9846__auto___16253), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "rez", "rez", 574832853, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__9846__auto___16253)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16241) {
    var t__9884__auto___16255 = e16241;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "rez", "rez", 574832853, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__9884__auto___16255, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16256 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.model_base.md_cell.call(null, rez, new cljs.core.Keyword(null, "action", "action", -811238024)) == null);
    var result__9847__auto___16257 = cljs.core.apply.call(null, cljs.core.not, values__9846__auto___16256);
    if (cljs.core.truth_(result__9847__auto___16257)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
      "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__9846__auto___16256), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
      "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__9846__auto___16256)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16242) {
    var t__9884__auto___16258 = e16242;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
    "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16258, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16259 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.model_base.md_get.call(null, tiltontec.rube.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "resident", "resident", 1053225840), uni), new cljs.core.Keyword(null, "location", "location", 1815599388))), new cljs.core.Keyword(null, "missing", "missing", 362507769));
    var result__9847__auto___16260 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16259);
    if (cljs.core.truth_(result__9847__auto___16260)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, 
      "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16259), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, 
      "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16259)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e16243) {
    var t__9884__auto___16261 = e16243;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, 
    "resident", "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16261, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.model.md_reset_BANG_.call(null, viz, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
  tiltontec.rube.model.md_reset_BANG_.call(null, viz, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646));
  try {
    var values__9846__auto___16262 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.model_base.md_cell.call(null, rez, new cljs.core.Keyword(null, "action", "action", -811238024)) == null);
    var result__9847__auto___16263 = cljs.core.apply.call(null, cljs.core.not, values__9846__auto___16262);
    if (cljs.core.truth_(result__9847__auto___16263)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
      "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__9846__auto___16262), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
      "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__9846__auto___16262)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16244) {
    var t__9884__auto___16264 = e16244;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "md-cell", "md-cell", 1912220677, null), new cljs.core.Symbol(null, 
    "rez", "rez", 574832853, null), new cljs.core.Keyword(null, "action", "action", -811238024)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16264, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.model.md_reset_BANG_.call(null, rez, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__9846__auto___16265 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.model_base.md_get.call(null, tiltontec.rube.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "resident", "resident", 1053225840), uni), new cljs.core.Keyword(null, "location", "location", 1815599388))), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__9847__auto___16266 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16265);
    if (cljs.core.truth_(result__9847__auto___16266)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", 
      "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16265), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", 
      "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16265)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e16245) {
    var t__9884__auto___16267 = e16245;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "resident", 
    "resident", 1053225840), new cljs.core.Keyword(null, "location", "location", 1815599388), new cljs.core.Symbol(null, "uni", "uni", 445655087, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16267, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  return tiltontec.rube.model.md_reset_BANG_.call(null, viz, new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
};
tiltontec.rube.model_test.hello_model.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.model_test.hello_model;
}, new cljs.core.Symbol("tiltontec.rube.model-test", "hello-model", "tiltontec.rube.model-test/hello-model", 1569817301, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.model-test", "tiltontec.rube.model-test", 1830097362, null), new cljs.core.Symbol(null, "hello-model", "hello-model", 287487483, null), "test/tiltontec/rube/model_test.cljc", 21, 1, 115, 115, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.rube.model_test.hello_model) ? tiltontec.rube.model_test.hello_model.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env16268 = cljs.test.empty_env.call(null);
  var summary16269 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16268, summary16269) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env16268);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.model-test", "tiltontec.rube.model-test", 1830097362, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__9951__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__9951__auto__, env16268, summary16269) {
          return function() {
            if (env__9951__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__9951__auto__, env16268, summary16269)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.rube.model_test.mm_typed;
        }, new cljs.core.Symbol("tiltontec.rube.model-test", "mm-typed", "tiltontec.rube.model-test/mm-typed", 2124565881, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.model-test", "tiltontec.rube.model-test", 1830097362, null), new cljs.core.Symbol(null, "mm-typed", "mm-typed", 1121916947, null), "test/tiltontec/rube/model_test.cljc", 18, 1, 50, 50, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.rube.model_test.mm_typed) ? tiltontec.rube.model_test.mm_typed.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.model_test.mm_opti_1;
        }, new cljs.core.Symbol("tiltontec.rube.model-test", "mm-opti-1", "tiltontec.rube.model-test/mm-opti-1", -1962627333, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.model-test", "tiltontec.rube.model-test", 1830097362, null), new cljs.core.Symbol(null, "mm-opti-1", "mm-opti-1", -1060539455, null), "test/tiltontec/rube/model_test.cljc", 19, 1, 59, 59, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.model_test.mm_opti_1) ? tiltontec.rube.model_test.mm_opti_1.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.model_test.mm_install_alive;
        }, new cljs.core.Symbol("tiltontec.rube.model-test", "mm-install-alive", "tiltontec.rube.model-test/mm-install-alive", 444710762, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.model-test", "tiltontec.rube.model-test", 1830097362, null), new cljs.core.Symbol(null, "mm-install-alive", "mm-install-alive", 1190325296, null), "test/tiltontec/rube/model_test.cljc", 
        26, 1, 70, 70, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.model_test.mm_install_alive) ? tiltontec.rube.model_test.mm_install_alive.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.model_test.hello_model;
        }, new cljs.core.Symbol("tiltontec.rube.model-test", "hello-model", "tiltontec.rube.model-test/hello-model", 1569817301, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.model-test", "tiltontec.rube.model-test", 1830097362, null), new cljs.core.Symbol(null, "hello-model", "hello-model", 287487483, null), "test/tiltontec/rube/model_test.cljc", 21, 
        1, 115, 115, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.model_test.hello_model) ? tiltontec.rube.model_test.hello_model.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__9951__auto__, env16268, summary16269) {
          return function() {
            if (env__9951__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__9951__auto__, env16268, summary16269)], null));
      }());
    };
  }(env16268, summary16269), function(env16268, summary16269) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.model-test", "tiltontec.rube.model-test", 1830097362, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env16268, summary16269)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16268, summary16269) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary16269, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary16269), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env16268, summary16269)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16268, summary16269) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env16268);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary16269));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary16269), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env16268, summary16269)], null));
}());
goog.provide("tiltontec.rube.kids_test");
goog.require("cljs.core");
goog.require("tiltontec.rube.model");
goog.require("tiltontec.rube.family");
goog.require("tiltontec.rube.cell_types");
goog.require("tiltontec.rube.integrity");
goog.require("tiltontec.rube.cells");
goog.require("cljs.test");
goog.require("tiltontec.rube.model_base");
goog.require("tiltontec.rube.evaluate");
goog.require("tiltontec.rube.utility");
goog.require("tiltontec.rube.observer");
goog.require("tiltontec.rube.ut_macros");
tiltontec.rube.kids_test.k_notq2be = function tiltontec$rube$kids_test$k_notq2be() {
  return cljs.test.test_var.call(null, tiltontec$rube$kids_test$k_notq2be.cljs$lang$var);
};
tiltontec.rube.kids_test.k_notq2be.cljs$lang$test = function() {
  var f = tiltontec.rube.model.make.call(null, new cljs.core.Keyword("tiltontec.rube.family", "family", "tiltontec.rube.family/family", -303685384), new cljs.core.Keyword(null, "ee", "ee", 643317400), tiltontec.rube.cells.c_in.call(null, 2), new cljs.core.Keyword(null, "kids", "kids", 1156670771), tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "the-kids", "the-kids", 1487890778, null), 
  cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "odd?", "odd?", -1458588199, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null), new cljs.core.Keyword(null, "ee", "ee", 643317400))), cljs.core.list(new cljs.core.Symbol("md", "make", "md/make", 356485027, null), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, 
  "yep", "yep", 1342783469), new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol(null, "c?", "c?", 2035112633, null), cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "par", "par", 1578752749, null), cljs.core.list(new cljs.core.Keyword(null, "par", "par", 
  -61778778), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
  "par", "par", 1578752749, null), new cljs.core.Keyword(null, "ee", "ee", 643317400))], null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 14, new cljs.core.Symbol(null, "ee", "ee", -2011118369, null)))))))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
    var _STAR_par_STAR_16092 = tiltontec.rube.family._STAR_par_STAR_;
    tiltontec.rube.family._STAR_par_STAR_ = me;
    try {
      return cljs.core.remove.call(null, cljs.core.nil_QMARK_, cljs.core.flatten.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.odd_QMARK_.call(null, tiltontec.rube.model_base.md_get.call(null, me, new cljs.core.Keyword(null, "ee", "ee", 643317400))) ? tiltontec.rube.model.make.call(null, new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "yep", "yep", 1342783469), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cells.make_c_formula.call(null, 
      new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "do", "do", 1686842252, null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "par", "par", 1578752749, null), cljs.core.list(new cljs.core.Keyword(null, "par", "par", -61778778), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 
      188719157, null), new cljs.core.Symbol(null, "me", "me", 1501524834, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "par", "par", 1578752749, null), new cljs.core.Keyword(null, "ee", "ee", 643317400))], 
      null), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 14, new cljs.core.Symbol(null, "ee", "ee", -2011118369, null)))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(_STAR_par_STAR_16092, me, cache) {
        return function(slot_c_SHARP___$1) {
          var me__$1 = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP___$1);
          var cache__$1 = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP___$1);
          var par = (new cljs.core.Keyword(null, "par", "par", -61778778)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, me__$1));
          var ee = tiltontec.rube.model_base.md_get.call(null, par, new cljs.core.Keyword(null, "ee", "ee", 643317400));
          return 14 * ee;
        };
      }(_STAR_par_STAR_16092, me, cache))) : null)));
    } finally {
      tiltontec.rube.family._STAR_par_STAR_ = _STAR_par_STAR_16092;
    }
  }));
  try {
    var values__9846__auto___16100 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.rube.family", "family", "tiltontec.rube.family/family", -303685384)), f);
    var result__9847__auto___16101 = cljs.core.apply.call(null, tiltontec.rube.cell_types.ia_type_QMARK_, values__9846__auto___16100);
    if (cljs.core.truth_(result__9847__auto___16101)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword("tiltontec.rube.family", "family", "tiltontec.rube.family/family", -303685384)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.cell_types.ia_type_QMARK_, values__9846__auto___16100), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword("tiltontec.rube.family", "family", "tiltontec.rube.family/family", -303685384)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__9846__auto___16100)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16093) {
    var t__9884__auto___16102 = e16093;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword("tiltontec.rube.family", "family", "tiltontec.rube.family/family", -303685384)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16102, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16103 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.model_base.md_get.call(null, f, new cljs.core.Keyword(null, "kids", "kids", 1156670771)));
    var result__9847__auto___16104 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__9846__auto___16103);
    if (cljs.core.truth_(result__9847__auto___16104)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
      "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__9846__auto___16103), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
      "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__9846__auto___16103)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16094) {
    var t__9884__auto___16105 = e16094;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
    "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16105, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.model.md_reset_BANG_.call(null, f, new cljs.core.Keyword(null, "ee", "ee", 643317400), 3);
  try {
    var values__9846__auto___16106 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.empty_QMARK_.call(null, tiltontec.rube.model_base.md_get.call(null, f, new cljs.core.Keyword(null, "kids", "kids", 1156670771))));
    var result__9847__auto___16107 = cljs.core.apply.call(null, cljs.core.not, values__9846__auto___16106);
    if (cljs.core.truth_(result__9847__auto___16107)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
      "f", "f", 43394975, null), new cljs.core.Keyword(null, "kids", "kids", 1156670771)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__9846__auto___16106), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
      "f", "f", 43394975, null), new cljs.core.Keyword(null, "kids", "kids", 1156670771)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__9846__auto___16106)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16095) {
    var t__9884__auto___16108 = e16095;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, 
    "f", "f", 43394975, null), new cljs.core.Keyword(null, "kids", "kids", 1156670771)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16108, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16109 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.model_base.md_get.call(null, tiltontec.rube.family.fm_BANG_.call(null, new cljs.core.Keyword(null, "yep", "yep", 1342783469), f), new cljs.core.Keyword(null, "value", "value", 305978217))), 42);
    var result__9847__auto___16110 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16109);
    if (cljs.core.truth_(result__9847__auto___16110)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "yep", "yep", 1342783469), new cljs.core.Keyword(null, 
      "value", "value", 305978217), new cljs.core.Symbol(null, "f", "f", 43394975, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16109), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "yep", "yep", 1342783469), new cljs.core.Keyword(null, 
      "value", "value", 305978217), new cljs.core.Symbol(null, "f", "f", 43394975, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16109)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16096) {
    var t__9884__auto___16111 = e16096;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "mdv!", "mdv!", -723501572, null), new cljs.core.Keyword(null, "yep", "yep", 1342783469), new cljs.core.Keyword(null, 
    "value", "value", 305978217), new cljs.core.Symbol(null, "f", "f", 43394975, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16111, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var dmw = cljs.core.first.call(null, tiltontec.rube.model_base.md_get.call(null, f, new cljs.core.Keyword(null, "kids", "kids", 1156670771)));
  if (cljs.core.truth_(tiltontec.rube.cell_types.md_ref_QMARK_.call(null, dmw))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "md-ref?", "md-ref?", 1571167727, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null))))].join(""));
  }
  tiltontec.rube.model.md_reset_BANG_.call(null, f, new cljs.core.Keyword(null, "ee", "ee", 643317400), 0);
  try {
    var values__9846__auto___16112 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.model_base.md_get.call(null, f, new cljs.core.Keyword(null, "kids", "kids", 1156670771)));
    var result__9847__auto___16113 = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__9846__auto___16112);
    if (cljs.core.truth_(result__9847__auto___16113)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
      "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.empty_QMARK_, values__9846__auto___16112), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
      "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__9846__auto___16112)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16097) {
    var t__9884__auto___16114 = e16097;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol(null, "md-get", "md-get", -1846886512, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Keyword(null, 
    "kids", "kids", 1156670771))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16114, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16115 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, dmw));
    var result__9847__auto___16116 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto___16115);
    if (cljs.core.truth_(result__9847__auto___16116)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto___16115), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto___16115)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16098) {
    var t__9884__auto___16117 = e16098;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16117, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "state", "state", -1988618099)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, dmw))), new cljs.core.Keyword(null, "dead", "dead", -1946604091));
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "dead", "dead", -1946604091), cljs.core.list(new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.list(new cljs.core.Symbol(null, 
      "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "dead", "dead", -1946604091), cljs.core.list(new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.list(new cljs.core.Symbol(null, 
      "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16099) {
    var t__9884__auto__ = e16099;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "dead", "dead", -1946604091), cljs.core.list(new cljs.core.Keyword(null, "state", "state", -1988618099), cljs.core.list(new cljs.core.Symbol(null, 
    "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "dmw", "dmw", -626491048, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.kids_test.k_notq2be.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.kids_test.k_notq2be;
}, new cljs.core.Symbol("tiltontec.rube.kids-test", "k-notq2be", "tiltontec.rube.kids-test/k-notq2be", 672040406, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.kids-test", "tiltontec.rube.kids-test", 133296005, null), new cljs.core.Symbol(null, "k-notq2be", "k-notq2be", -2113236140, null), "test/tiltontec/rube/kids_test.cljc", 19, 1, 49, 49, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.rube.kids_test.k_notq2be) ? tiltontec.rube.kids_test.k_notq2be.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env16118 = cljs.test.empty_env.call(null);
  var summary16119 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16118, summary16119) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env16118);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.kids-test", "tiltontec.rube.kids-test", 133296005, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__9951__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__9951__auto__, env16118, summary16119) {
          return function() {
            if (env__9951__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__9951__auto__, env16118, summary16119)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.rube.kids_test.k_notq2be;
        }, new cljs.core.Symbol("tiltontec.rube.kids-test", "k-notq2be", "tiltontec.rube.kids-test/k-notq2be", 672040406, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.kids-test", "tiltontec.rube.kids-test", 133296005, null), new cljs.core.Symbol(null, "k-notq2be", "k-notq2be", -2113236140, null), "test/tiltontec/rube/kids_test.cljc", 19, 1, 49, 49, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.rube.kids_test.k_notq2be) ? tiltontec.rube.kids_test.k_notq2be.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__9951__auto__, env16118, summary16119) {
          return function() {
            if (env__9951__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__9951__auto__, env16118, summary16119)], null));
      }());
    };
  }(env16118, summary16119), function(env16118, summary16119) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.kids-test", "tiltontec.rube.kids-test", 133296005, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env16118, summary16119)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16118, summary16119) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary16119, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary16119), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env16118, summary16119)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16118, summary16119) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env16118);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary16119));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary16119), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env16118, summary16119)], null));
}());
goog.provide("tiltontec.rube.hello_world_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.rube.ut_macros");
goog.require("tiltontec.rube.utility");
goog.require("tiltontec.rube.cell_types");
goog.require("tiltontec.rube.integrity");
goog.require("tiltontec.rube.observer");
goog.require("tiltontec.rube.cells");
goog.require("tiltontec.rube.evaluate");
tiltontec.rube.hello_world_test.hw_01 = function tiltontec$rube$hello_world_test$hw_01() {
  return cljs.test.test_var.call(null, tiltontec$rube$hello_world_test$hw_01.cljs$lang$var);
};
tiltontec.rube.hello_world_test.hw_01.cljs$lang$test = function() {
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.rube.cells.make_cell.call(null, new cljs.core.Keyword(null, "value", "value", 305978217), "knocks", new cljs.core.Keyword(null, "input?", "input?", -1792843173), true)], null);
  cljs.core.println.call(null, tiltontec.rube.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(v)), tiltontec.rube.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)));
  try {
    var values__9846__auto___15977 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "World"), tiltontec.rube.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__9847__auto___15978 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15977);
    if (cljs.core.truth_(result__9847__auto___15978)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15977), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15977)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15975) {
    var t__9884__auto___15979 = e15975;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15979, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "knocks"), tiltontec.rube.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e15976) {
    var t__9884__auto__ = e15976;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.hello_world_test.hw_01.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.hello_world_test.hw_01;
}, new cljs.core.Symbol("tiltontec.rube.hello-world-test", "hw-01", "tiltontec.rube.hello-world-test/hw-01", -245151009, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.hello-world-test", "tiltontec.rube.hello-world-test", 2000231, null), new cljs.core.Symbol(null, "hw-01", "hw-01", -198427897, null), "test/tiltontec/rube/hello_world_test.cljc", 15, 1, 42, 42, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.rube.hello_world_test.hw_01) ? tiltontec.rube.hello_world_test.hw_01.cljs$lang$test : null]));
tiltontec.rube.hello_world_test.hw_02 = function tiltontec$rube$hello_world_test$hw_02() {
  return cljs.test.test_var.call(null, tiltontec$rube$hello_world_test$hw_02.cljs$lang$var);
};
tiltontec.rube.hello_world_test.hw_02.cljs$lang$test = function() {
  var obs_action = cljs.core.atom.call(null, null);
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.rube.cells.c_in.call(null, "knocks", new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action) {
    return function(slot, me, new$, old, c) {
      cljs.core.reset_BANG_.call(null, obs_action, new$);
      return cljs.core.println.call(null, new cljs.core.Keyword(null, "observing", "observing", 1065333653), slot, new$, old);
    };
  }(obs_action))], null);
  try {
    var values__9846__auto___15983 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "World"), tiltontec.rube.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__9847__auto___15984 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15983);
    if (cljs.core.truth_(result__9847__auto___15984)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15983), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15983)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15980) {
    var t__9884__auto___15985 = e15980;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "World"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15985, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15986 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "knocks"), tiltontec.rube.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__9847__auto___15987 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15986);
    if (cljs.core.truth_(result__9847__auto___15987)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15986), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15986)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15981) {
    var t__9884__auto___15988 = e15981;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "knocks"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15988, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, obs_action)), "knocks");
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knocks", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs-action", "obs-action", 
      223700248, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knocks", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs-action", "obs-action", 
      223700248, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e15982) {
    var t__9884__auto__ = e15982;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knocks", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "obs-action", "obs-action", 
    223700248, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.hello_world_test.hw_02.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.hello_world_test.hw_02;
}, new cljs.core.Symbol("tiltontec.rube.hello-world-test", "hw-02", "tiltontec.rube.hello-world-test/hw-02", -1981927492, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.hello-world-test", "tiltontec.rube.hello-world-test", 2000231, null), new cljs.core.Symbol(null, "hw-02", "hw-02", -1769431692, null), "test/tiltontec/rube/hello_world_test.cljc", 15, 1, 54, 54, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.hello_world_test.hw_02) ? tiltontec.rube.hello_world_test.hw_02.cljs$lang$test : null]));
tiltontec.rube.hello_world_test.hw_03 = function tiltontec$rube$hello_world_test$hw_03() {
  return cljs.test.test_var.call(null, tiltontec$rube$hello_world_test$hw_03.cljs$lang$var);
};
tiltontec.rube.hello_world_test.hw_03.cljs$lang$test = function() {
  var action = cljs.core.atom.call(null, null);
  var obs_action = function(action) {
    return function(slot, me, new$, old, c) {
      cljs.core.reset_BANG_.call(null, action, new$);
      return cljs.core.println.call(null, new cljs.core.Keyword(null, "observing", "observing", 1065333653), slot, new$, old);
    };
  }(action);
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.rube.cells.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "obs", "obs", -664011444), obs_action)], null);
  try {
    var values__9846__auto___15993 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__9847__auto___15994 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto___15993);
    if (cljs.core.truth_(result__9847__auto___15994)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto___15993), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto___15993)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15989) {
    var t__9884__auto___15995 = e15989;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15995, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___15996 = cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, action));
    var result__9847__auto___15997 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto___15996);
    if (cljs.core.truth_(result__9847__auto___15997)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto___15996), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto___15996)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15990) {
    var t__9884__auto___15998 = e15990;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___15998, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.cells.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), "knock-knock");
  try {
    var values__9846__auto___15999 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, action)), "knock-knock");
    var result__9847__auto___16000 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___15999);
    if (cljs.core.truth_(result__9847__auto___16000)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knock-knock", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___15999), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knock-knock", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___15999)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e15991) {
    var t__9884__auto___16001 = e15991;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "knock-knock", cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "action", "action", 829293503, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16001, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, "knock-knock"), tiltontec.rube.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)));
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knock-knock"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
      "v", "v", 1661996586, null))), "knock-knock"), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e15992) {
    var t__9884__auto__ = e15992;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, 
    "v", "v", 1661996586, null))), "knock-knock"), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.hello_world_test.hw_03.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.hello_world_test.hw_03;
}, new cljs.core.Symbol("tiltontec.rube.hello-world-test", "hw-03", "tiltontec.rube.hello-world-test/hw-03", -224483636, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.hello-world-test", "tiltontec.rube.hello-world-test", 2000231, null), new cljs.core.Symbol(null, "hw-03", "hw-03", -237693708, null), "test/tiltontec/rube/hello_world_test.cljc", 15, 1, 68, 68, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.rube.hello_world_test.hw_03) ? tiltontec.rube.hello_world_test.hw_03.cljs$lang$test : null]));
tiltontec.rube.hello_world_test.gobs = function tiltontec$rube$hello_world_test$gobs(slot, me, new$, old, c) {
  return cljs.core.println.call(null, new cljs.core.Keyword(null, "gobs\x3e", "gobs\x3e", 972099754), slot, new$, old);
};
tiltontec.rube.hello_world_test.hw_04 = function tiltontec$rube$hello_world_test$hw_04() {
  return cljs.test.test_var.call(null, tiltontec$rube$hello_world_test$hw_04.cljs$lang$var);
};
tiltontec.rube.hello_world_test.hw_04.cljs$lang$test = function() {
  var r_action = tiltontec.rube.cells.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "r-action", "r-action", -113870725), new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.rube.hello_world_test.gobs);
  var r_loc = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "r-loc", "r-loc", 1040711343), new cljs.core.Keyword(null, "obs", "obs", -664011444), tiltontec.rube.hello_world_test.gobs, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(r_action) {
    return function(c) {
      var G__16002 = tiltontec.rube.evaluate.c_get.call(null, r_action) instanceof cljs.core.Keyword ? tiltontec.rube.evaluate.c_get.call(null, r_action).fqn : null;
      switch(G__16002) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "at-home", "at-home", 1687350383);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(r_action));
  tiltontec.rube.evaluate.c_awaken.call(null, r_loc);
  try {
    var values__9846__auto___16006 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, r_loc))), new cljs.core.Keyword(null, "missing", "missing", 362507769));
    var result__9847__auto___16007 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16006);
    if (cljs.core.truth_(result__9847__auto___16007)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16006), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16006)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), 
      null], null));
    }
  } catch (e16003) {
    var t__9884__auto___16008 = e16003;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16008, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.println.call(null, new cljs.core.Keyword(null, "---about-to-leave------------------", "---about-to-leave------------------", 511366567));
  tiltontec.rube.cells.c_reset_BANG_.call(null, r_action, new cljs.core.Keyword(null, "leave", "leave", 1022579443));
  cljs.core.println.call(null, new cljs.core.Keyword(null, "---left------------------", "---left------------------", -1129059094));
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, r_loc)), new cljs.core.Keyword(null, "away", "away", 1142420954));
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "away", "away", 1142420954), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "away", "away", 1142420954), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16004) {
    var t__9884__auto__ = e16004;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "away", "away", 1142420954), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, 
    "r-loc", "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.hello_world_test.hw_04.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.hello_world_test.hw_04;
}, new cljs.core.Symbol("tiltontec.rube.hello-world-test", "hw-04", "tiltontec.rube.hello-world-test/hw-04", -7205907, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.hello-world-test", "tiltontec.rube.hello-world-test", 2000231, null), new cljs.core.Symbol(null, "hw-04", "hw-04", -86409835, null), "test/tiltontec/rube/hello_world_test.cljc", 15, 1, 88, 88, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.rube.hello_world_test.hw_04) ? tiltontec.rube.hello_world_test.hw_04.cljs$lang$test : null]));
tiltontec.rube.hello_world_test.hw_5 = function tiltontec$rube$hello_world_test$hw_5() {
  return cljs.test.test_var.call(null, tiltontec$rube$hello_world_test$hw_5.cljs$lang$var);
};
tiltontec.rube.hello_world_test.hw_5.cljs$lang$test = function() {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "--go------------------", "--go------------------", 69945111));
  var obs_action = function(slot, me, new$, old, c) {
    return cljs.core.println.call(null, slot, new$, old);
  };
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.rube.cells.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "obs", "obs", -664011444), obs_action)], null);
  var r_action = tiltontec.rube.cells.c_in.call(null, null);
  var r_loc = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action) {
    return function(slot, me, new$, old, c) {
      if (cljs.core.truth_(new$)) {
        return tiltontec.rube.ut_macros.call_trc.call(null, ":honey-im", new$);
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-action", "r-action", 1526660802, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), 
  new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      var G__16009 = tiltontec.rube.evaluate.c_get.call(null, r_action) instanceof cljs.core.Keyword ? tiltontec.rube.evaluate.c_get.call(null, r_action).fqn : null;
      switch(G__16009) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(obs_action, v, r_action));
  var r_response = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc) {
    return function(slot, me, new$, old, c) {
      return tiltontec.rube.ut_macros.call_trc.call(null, ":r-resp", new$);
    };
  }(obs_action, v, r_action, r_loc), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null))), cljs.core.list(new cljs.core.Symbol(null, 
  "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, 
  "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.rube.evaluate.c_get.call(null, r_loc))) {
        var temp__4425__auto__ = tiltontec.rube.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
        if (cljs.core.truth_(temp__4425__auto__)) {
          var act = temp__4425__auto__;
          var G__16010 = act instanceof cljs.core.Keyword ? act.fqn : null;
          switch(G__16010) {
            case "knock-knock":
              return "hello, world";
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(act)].join(""));;
          }
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc));
  try {
    var values__9846__auto___16015 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, r_response));
    var result__9847__auto___16016 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto___16015);
    if (cljs.core.truth_(result__9847__auto___16016)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto___16015), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto___16015)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16011) {
    var t__9884__auto___16017 = e16011;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16017, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.cells.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
  tiltontec.rube.cells.c_reset_BANG_.call(null, r_action, new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, r_loc)), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16012) {
    var t__9884__auto__ = e16012;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, 
    "r-loc", "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.hello_world_test.hw_5.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.hello_world_test.hw_5;
}, new cljs.core.Symbol("tiltontec.rube.hello-world-test", "hw-5", "tiltontec.rube.hello-world-test/hw-5", -2038471006, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.hello-world-test", "tiltontec.rube.hello-world-test", 2000231, null), new cljs.core.Symbol(null, "hw-5", "hw-5", -2093878022, null), "test/tiltontec/rube/hello_world_test.cljc", 14, 1, 107, 107, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.rube.hello_world_test.hw_5) ? tiltontec.rube.hello_world_test.hw_5.cljs$lang$test : null]));
tiltontec.rube.hello_world_test.hello_world = function tiltontec$rube$hello_world_test$hello_world() {
  return cljs.test.test_var.call(null, tiltontec$rube$hello_world_test$hello_world.cljs$lang$var);
};
tiltontec.rube.hello_world_test.hello_world.cljs$lang$test = function() {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "--go------------------", "--go------------------", 69945111));
  var obs_action = function(slot, me, new$, old, c) {
    return cljs.core.println.call(null, slot, new$, old);
  };
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.rube.cells.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "obs", "obs", -664011444), obs_action)], null);
  var r_action = tiltontec.rube.cells.c_in.call(null, null);
  var r_loc = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action) {
    return function(slot, me, new$, old, c) {
      if (cljs.core.truth_(new$)) {
        return tiltontec.rube.ut_macros.call_trc.call(null, ":honey-im", new$);
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-action", "r-action", 1526660802, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), 
  new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      var G__16018 = tiltontec.rube.evaluate.c_get.call(null, r_action) instanceof cljs.core.Keyword ? tiltontec.rube.evaluate.c_get.call(null, r_action).fqn : null;
      switch(G__16018) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(obs_action, v, r_action));
  var r_response = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc) {
    return function(slot, me, new$, old, c) {
      return tiltontec.rube.ut_macros.call_trc.call(null, ":r-response", new$);
    };
  }(obs_action, v, r_action, r_loc), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
  "r-loc", -1613724426, null))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))], null), cljs.core.list(new cljs.core.Symbol(null, 
  "case", "case", -1510733573, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.rube.evaluate.c_get.call(null, r_loc))) {
        var temp__4425__auto__ = tiltontec.rube.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
        if (cljs.core.truth_(temp__4425__auto__)) {
          var act = temp__4425__auto__;
          var G__16019 = act instanceof cljs.core.Keyword ? act.fqn : null;
          switch(G__16019) {
            case "knock-knock":
              return "hello, world";
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(act)].join(""));;
          }
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc));
  try {
    var values__9846__auto___16024 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, r_response));
    var result__9847__auto___16025 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto___16024);
    if (cljs.core.truth_(result__9847__auto___16025)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto___16024), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto___16024)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16020) {
    var t__9884__auto___16026 = e16020;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-response", "r-response", -1443018310, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16026, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.cells.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
  tiltontec.rube.cells.c_reset_BANG_.call(null, r_action, new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__9846__auto___16027 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, r_loc)), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__9847__auto___16028 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16027);
    if (cljs.core.truth_(result__9847__auto___16028)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16027), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16027)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16021) {
    var t__9884__auto___16029 = e16021;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
    "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16029, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  return tiltontec.rube.cells.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
};
tiltontec.rube.hello_world_test.hello_world.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.hello_world_test.hello_world;
}, new cljs.core.Symbol("tiltontec.rube.hello-world-test", "hello-world", "tiltontec.rube.hello-world-test/hello-world", 907063720, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.hello-world-test", "tiltontec.rube.hello-world-test", 2000231, null), new cljs.core.Symbol(null, "hello-world", "hello-world", 852100064, null), "test/tiltontec/rube/hello_world_test.cljc", 
21, 1, 130, 130, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.hello_world_test.hello_world) ? tiltontec.rube.hello_world_test.hello_world.cljs$lang$test : null]));
tiltontec.rube.hello_world_test.hello_world_2 = function tiltontec$rube$hello_world_test$hello_world_2() {
  return cljs.test.test_var.call(null, tiltontec$rube$hello_world_test$hello_world_2.cljs$lang$var);
};
tiltontec.rube.hello_world_test.hello_world_2.cljs$lang$test = function() {
  cljs.core.println.call(null, new cljs.core.Keyword(null, "--go------------------", "--go------------------", 69945111));
  var obs_action = function(slot, me, new$, old, c) {
    if (cljs.core.truth_(new$)) {
      return tiltontec.rube.ut_macros.call_trc.call(null, "visitor-did", new$);
    } else {
      return null;
    }
  };
  var v = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "name", "name", 1843675177), "World", new cljs.core.Keyword(null, "action", "action", -811238024), tiltontec.rube.cells.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "v-action", "v-action", -1243651586), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "obs", "obs", -664011444), obs_action)], null);
  var r_action = tiltontec.rube.cells.c_in.call(null, null);
  var r_loc = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action) {
    return function(slot, me, new$, old, c) {
      if (cljs.core.truth_(new$)) {
        return tiltontec.rube.ut_macros.call_trc.call(null, ":honey-im", new$);
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-action", "r-action", 1526660802, null)), new cljs.core.Keyword(null, "leave", "leave", 1022579443), new cljs.core.Keyword(null, "away", "away", 1142420954), new cljs.core.Keyword(null, "return", "return", -1891502105), 
  new cljs.core.Keyword(null, "home", "home", -74557309), new cljs.core.Keyword(null, "missing", "missing", 362507769))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      var G__16030 = tiltontec.rube.evaluate.c_get.call(null, r_action) instanceof cljs.core.Keyword ? tiltontec.rube.evaluate.c_get.call(null, r_action).fqn : null;
      switch(G__16030) {
        case "leave":
          return new cljs.core.Keyword(null, "away", "away", 1142420954);
          break;
        case "return":
          return new cljs.core.Keyword(null, "home", "home", -74557309);
          break;
        default:
          return new cljs.core.Keyword(null, "missing", "missing", 362507769);
      }
    };
  }(obs_action, v, r_action));
  var r_response = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc) {
    return function(slot, me, new$, old, c) {
      if (cljs.core.truth_(new$)) {
        return tiltontec.rube.ut_macros.call_trc.call(null, ":r-response", new$);
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
  "r-loc", -1613724426, null))), cljs.core.list(new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "act", "act", 1830763413, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))], null), cljs.core.list(new cljs.core.Symbol(null, 
  "case", "case", -1510733573, null), new cljs.core.Symbol(null, "act", "act", 1830763413, null), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313), "hello, world")))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.rube.evaluate.c_get.call(null, r_loc))) {
        var temp__4425__auto__ = tiltontec.rube.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
        if (cljs.core.truth_(temp__4425__auto__)) {
          var act = temp__4425__auto__;
          var G__16031 = act instanceof cljs.core.Keyword ? act.fqn : null;
          switch(G__16031) {
            case "knock-knock":
              return "hello, world";
              break;
            default:
              throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(act)].join(""));;
          }
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc));
  var alarm = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc, r_response) {
    return function(slot, me, new$, old, c) {
      return tiltontec.rube.ut_macros.call_trc.call(null, ":telling-alarm-api", new$);
    };
  }(obs_action, v, r_action, r_loc, r_response), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null))), new cljs.core.Keyword(null, 
  "off", "off", 606440789), new cljs.core.Keyword(null, "on", "on", 173873944))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc, r_response) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "home", "home", -74557309), tiltontec.rube.evaluate.c_get.call(null, r_loc))) {
        return new cljs.core.Keyword(null, "off", "off", 606440789);
      } else {
        return new cljs.core.Keyword(null, "on", "on", 173873944);
      }
    };
  }(obs_action, v, r_action, r_loc, r_response));
  var alarm_do = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "obs", "obs", -664011444), function(obs_action, v, r_action, r_loc, r_response, alarm) {
    return function(slot, me, new$, old, c) {
      var G__16032 = new$ instanceof cljs.core.Keyword ? new$.fqn : null;
      switch(G__16032) {
        case "call-police":
          return tiltontec.rube.ut_macros.call_trc.call(null, ":auto-dialing-911");
          break;
        default:
          return null;
      }
    };
  }(obs_action, v, r_action, r_loc, r_response, alarm), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "when", "when", 1064114221, null), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "on", "on", 173873944), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "alarm", "alarm", -588228823, null))), cljs.core.list(new cljs.core.Symbol(null, 
  "when-let", "when-let", -1383043480, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "action", "action", 829293503, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), cljs.core.list(new cljs.core.Keyword(null, "action", "action", -811238024), new cljs.core.Symbol(null, "v", "v", 1661996586, null)))], null), cljs.core.list(new cljs.core.Symbol(null, "case", "case", -1510733573, null), new cljs.core.Symbol(null, 
  "action", "action", 829293503, null), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646), new cljs.core.Keyword(null, "call-police", "call-police", -2114689981), null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(obs_action, v, r_action, r_loc, r_response, alarm) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "on", "on", 173873944), tiltontec.rube.evaluate.c_get.call(null, alarm))) {
        var temp__4425__auto__ = tiltontec.rube.evaluate.c_get.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v));
        if (cljs.core.truth_(temp__4425__auto__)) {
          var action = temp__4425__auto__;
          var G__16033 = action instanceof cljs.core.Keyword ? action.fqn : null;
          switch(G__16033) {
            case "smashing-window":
              return new cljs.core.Keyword(null, "call-police", "call-police", -2114689981);
              break;
            default:
              return null;
          }
        } else {
          return null;
        }
      } else {
        return null;
      }
    };
  }(obs_action, v, r_action, r_loc, r_response, alarm));
  tiltontec.rube.evaluate.c_awaken.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [alarm_do, r_response, r_loc, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v)], null));
  try {
    var values__9846__auto___16040 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, r_loc))), new cljs.core.Keyword(null, "missing", "missing", 362507769));
    var result__9847__auto___16041 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16040);
    if (cljs.core.truth_(result__9847__auto___16041)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16040), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
      "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16040)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), 
      null], null));
    }
  } catch (e16034) {
    var t__9884__auto___16042 = e16034;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "missing", "missing", 362507769), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", 
    "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "r-loc", "r-loc", -1613724426, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16042, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.cells.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
  tiltontec.rube.cells.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "smashing-window", "smashing-window", -1128121646));
  tiltontec.rube.cells.c_reset_BANG_.call(null, r_action, new cljs.core.Keyword(null, "return", "return", -1891502105));
  try {
    var values__9846__auto___16043 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, r_loc)), new cljs.core.Keyword(null, "home", "home", -74557309));
    var result__9847__auto___16044 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16043);
    if (cljs.core.truth_(result__9847__auto___16044)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16043), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
      "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16043)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16035) {
    var t__9884__auto___16045 = e16035;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "home", "home", -74557309), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "r-loc", 
    "r-loc", -1613724426, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16045, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  return tiltontec.rube.cells.c_reset_BANG_.call(null, (new cljs.core.Keyword(null, "action", "action", -811238024)).cljs$core$IFn$_invoke$arity$1(v), new cljs.core.Keyword(null, "knock-knock", "knock-knock", 882119313));
};
tiltontec.rube.hello_world_test.hello_world_2.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.hello_world_test.hello_world_2;
}, new cljs.core.Symbol("tiltontec.rube.hello-world-test", "hello-world-2", "tiltontec.rube.hello-world-test/hello-world-2", 1493994846, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.hello-world-test", "tiltontec.rube.hello-world-test", 2000231, null), new cljs.core.Symbol(null, "hello-world-2", "hello-world-2", 1439841158, null), "test/tiltontec/rube/hello_world_test.cljc", 
23, 1, 157, 157, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.hello_world_test.hello_world_2) ? tiltontec.rube.hello_world_test.hello_world_2.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env16046 = cljs.test.empty_env.call(null);
  var summary16047 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16046, summary16047) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env16046);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.hello-world-test", "tiltontec.rube.hello-world-test", 2000231, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__9951__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__9951__auto__, env16046, summary16047) {
          return function() {
            if (env__9951__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__9951__auto__, env16046, summary16047)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.rube.hello_world_test.hw_01;
        }, new cljs.core.Symbol("tiltontec.rube.hello-world-test", "hw-01", "tiltontec.rube.hello-world-test/hw-01", -245151009, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.hello-world-test", "tiltontec.rube.hello-world-test", 2000231, null), new cljs.core.Symbol(null, "hw-01", "hw-01", -198427897, null), "test/tiltontec/rube/hello_world_test.cljc", 
        15, 1, 42, 42, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.hello_world_test.hw_01) ? tiltontec.rube.hello_world_test.hw_01.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.hello_world_test.hw_02;
        }, new cljs.core.Symbol("tiltontec.rube.hello-world-test", "hw-02", "tiltontec.rube.hello-world-test/hw-02", -1981927492, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.hello-world-test", "tiltontec.rube.hello-world-test", 2000231, null), new cljs.core.Symbol(null, "hw-02", "hw-02", -1769431692, null), "test/tiltontec/rube/hello_world_test.cljc", 
        15, 1, 54, 54, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.hello_world_test.hw_02) ? tiltontec.rube.hello_world_test.hw_02.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.hello_world_test.hw_03;
        }, new cljs.core.Symbol("tiltontec.rube.hello-world-test", "hw-03", "tiltontec.rube.hello-world-test/hw-03", -224483636, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.hello-world-test", "tiltontec.rube.hello-world-test", 2000231, null), new cljs.core.Symbol(null, "hw-03", "hw-03", -237693708, null), "test/tiltontec/rube/hello_world_test.cljc", 
        15, 1, 68, 68, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.hello_world_test.hw_03) ? tiltontec.rube.hello_world_test.hw_03.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.hello_world_test.hw_04;
        }, new cljs.core.Symbol("tiltontec.rube.hello-world-test", "hw-04", "tiltontec.rube.hello-world-test/hw-04", -7205907, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.hello-world-test", "tiltontec.rube.hello-world-test", 2000231, null), new cljs.core.Symbol(null, "hw-04", "hw-04", -86409835, null), "test/tiltontec/rube/hello_world_test.cljc", 15, 1, 88, 
        88, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.hello_world_test.hw_04) ? tiltontec.rube.hello_world_test.hw_04.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.hello_world_test.hw_5;
        }, new cljs.core.Symbol("tiltontec.rube.hello-world-test", "hw-5", "tiltontec.rube.hello-world-test/hw-5", -2038471006, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.hello-world-test", "tiltontec.rube.hello-world-test", 2000231, null), new cljs.core.Symbol(null, "hw-5", "hw-5", -2093878022, null), "test/tiltontec/rube/hello_world_test.cljc", 14, 1, 107, 
        107, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.hello_world_test.hw_5) ? tiltontec.rube.hello_world_test.hw_5.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.hello_world_test.hello_world;
        }, new cljs.core.Symbol("tiltontec.rube.hello-world-test", "hello-world", "tiltontec.rube.hello-world-test/hello-world", 907063720, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.hello-world-test", "tiltontec.rube.hello-world-test", 2000231, null), new cljs.core.Symbol(null, "hello-world", "hello-world", 852100064, null), "test/tiltontec/rube/hello_world_test.cljc", 
        21, 1, 130, 130, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.hello_world_test.hello_world) ? tiltontec.rube.hello_world_test.hello_world.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.hello_world_test.hello_world_2;
        }, new cljs.core.Symbol("tiltontec.rube.hello-world-test", "hello-world-2", "tiltontec.rube.hello-world-test/hello-world-2", 1493994846, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.hello-world-test", "tiltontec.rube.hello-world-test", 2000231, null), new cljs.core.Symbol(null, "hello-world-2", "hello-world-2", 1439841158, null), "test/tiltontec/rube/hello_world_test.cljc", 
        23, 1, 157, 157, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.hello_world_test.hello_world_2) ? tiltontec.rube.hello_world_test.hello_world_2.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__9951__auto__, env16046, summary16047) {
          return function() {
            if (env__9951__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__9951__auto__, env16046, summary16047)], null));
      }());
    };
  }(env16046, summary16047), function(env16046, summary16047) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.hello-world-test", "tiltontec.rube.hello-world-test", 2000231, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env16046, summary16047)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16046, summary16047) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary16047, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary16047), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env16046, summary16047)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16046, summary16047) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env16046);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary16047));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary16047), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env16046, summary16047)], null));
}());
goog.provide("tiltontec.rube.evaluate_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.rube.ut_macros");
goog.require("tiltontec.rube.utility");
goog.require("tiltontec.rube.cell_types");
goog.require("tiltontec.rube.integrity");
goog.require("tiltontec.rube.observer");
goog.require("tiltontec.rube.cells");
goog.require("tiltontec.rube.evaluate");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.rube.evaluate_test.test_input = function tiltontec$rube$evaluate_test$test_input() {
  return cljs.test.test_var.call(null, tiltontec$rube$evaluate_test$test_input.cljs$lang$var);
};
tiltontec.rube.evaluate_test.test_input.cljs$lang$test = function() {
  var c = tiltontec.rube.cells.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
  try {
    var values__9846__auto___16239 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), c);
    var result__9847__auto___16240 = cljs.core.apply.call(null, tiltontec.rube.cell_types.ia_type_QMARK_, values__9846__auto___16239);
    if (cljs.core.truth_(result__9847__auto___16240)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.cell_types.ia_type_QMARK_, values__9846__auto___16239), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__9846__auto___16239)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16231) {
    var t__9884__auto___16241 = e16231;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16241, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16242 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), tiltontec.rube.cell_types.c_value_state.call(null, c));
    var result__9847__auto___16243 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16242);
    if (cljs.core.truth_(result__9847__auto___16243)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16242), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16242)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16232) {
    var t__9884__auto___16244 = e16232;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16244, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16245 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__9847__auto___16246 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16245);
    if (cljs.core.truth_(result__9847__auto___16246)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16245), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16245)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16233) {
    var t__9884__auto___16247 = e16233;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16247, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16248 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__9847__auto___16249 = cljs.core.apply.call(null, tiltontec.rube.cell_types.c_input_QMARK_, values__9846__auto___16248);
    if (cljs.core.truth_(result__9847__auto___16249)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.cell_types.c_input_QMARK_, 
      values__9846__auto___16248), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__9846__auto___16248)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16234) {
    var t__9884__auto___16250 = e16234;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16250, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16251 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__9847__auto___16252 = cljs.core.apply.call(null, tiltontec.rube.cell_types.c_valid_QMARK_, values__9846__auto___16251);
    if (cljs.core.truth_(result__9847__auto___16252)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.cell_types.c_valid_QMARK_, 
      values__9846__auto___16251), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__9846__auto___16251)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16235) {
    var t__9884__auto___16253 = e16235;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16253, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16254 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_model.call(null, c));
    var result__9847__auto___16255 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto___16254);
    if (cljs.core.truth_(result__9847__auto___16255)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto___16254), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto___16254)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16236) {
    var t__9884__auto___16256 = e16236;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16256, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16257 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_slot_name.call(null, c)), tiltontec.rube.cell_types.c_slot.call(null, c)), new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
    var result__9847__auto___16258 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16257);
    if (cljs.core.truth_(result__9847__auto___16258)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16257), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16257)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), 
      new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16237) {
    var t__9884__auto___16259 = e16237;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16259, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.rube.evaluate.c_get.call(null, c));
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16238) {
    var t__9884__auto__ = e16238;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.evaluate_test.test_input.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.evaluate_test.test_input;
}, new cljs.core.Symbol("tiltontec.rube.evaluate-test", "test-input", "tiltontec.rube.evaluate-test/test-input", -1187251275, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.evaluate-test", "tiltontec.rube.evaluate-test", 1308727991, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/rube/evaluate_test.cljc", 20, 1, 45, 45, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.evaluate_test.test_input) ? tiltontec.rube.evaluate_test.test_input.cljs$lang$test : null]));
tiltontec.rube.evaluate_test.t_formula = function tiltontec$rube$evaluate_test$t_formula() {
  return cljs.test.test_var.call(null, tiltontec$rube$evaluate_test$t_formula.cljs$lang$var);
};
tiltontec.rube.evaluate_test.t_formula.cljs$lang$test = function() {
  var c = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 40, 2)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
    return 40 + 2;
  });
  try {
    var values__9846__auto___16270 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", -1677011786)), tiltontec.rube.cell_types.ia_types);
    var result__9847__auto___16271 = cljs.core.apply.call(null, cljs.core.isa_QMARK_, values__9846__auto___16270);
    if (cljs.core.truth_(result__9847__auto___16271)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", 
      -1677011786), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.isa_QMARK_, values__9846__auto___16270), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", 
      -1677011786), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), values__9846__auto___16270)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), 
      null], null));
    }
  } catch (e16260) {
    var t__9884__auto___16272 = e16260;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "isa?", "isa?", 1358492324, null), new cljs.core.Symbol(null, "ia-types", "ia-types", 322849110, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", 
    -1677011786), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16272, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16273 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), c);
    var result__9847__auto___16274 = cljs.core.apply.call(null, tiltontec.rube.cell_types.ia_type_QMARK_, values__9846__auto___16273);
    if (cljs.core.truth_(result__9847__auto___16274)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.cell_types.ia_type_QMARK_, values__9846__auto___16273), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__9846__auto___16273)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16261) {
    var t__9884__auto___16275 = e16261;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16275, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16276 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", -1677011786)), c);
    var result__9847__auto___16277 = cljs.core.apply.call(null, tiltontec.rube.cell_types.ia_type_QMARK_, values__9846__auto___16276);
    if (cljs.core.truth_(result__9847__auto___16277)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", 
      -1677011786)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.cell_types.ia_type_QMARK_, values__9846__auto___16276), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", 
      -1677011786)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__9846__auto___16276)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16262) {
    var t__9884__auto___16278 = e16262;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", 
    -1677011786)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16278, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16279 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654)), tiltontec.rube.cell_types.c_value_state.call(null, c));
    var result__9847__auto___16280 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16279);
    if (cljs.core.truth_(result__9847__auto___16280)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16279), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16279)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16263) {
    var t__9884__auto___16281 = e16263;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16281, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16282 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__9847__auto___16283 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16282);
    if (cljs.core.truth_(result__9847__auto___16283)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16282), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16282)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16264) {
    var t__9884__auto___16284 = e16264;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16284, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16285 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_useds.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__9847__auto___16286 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16285);
    if (cljs.core.truth_(result__9847__auto___16286)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16285), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16285)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16265) {
    var t__9884__auto___16287 = e16265;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16287, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16288 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_input_QMARK_.call(null, c));
    var result__9847__auto___16289 = cljs.core.apply.call(null, cljs.core.not, values__9846__auto___16288);
    if (cljs.core.truth_(result__9847__auto___16289)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__9846__auto___16288), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__9846__auto___16288)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16266) {
    var t__9884__auto___16290 = e16266;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16290, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16291 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_valid_QMARK_.call(null, c));
    var result__9847__auto___16292 = cljs.core.apply.call(null, cljs.core.not, values__9846__auto___16291);
    if (cljs.core.truth_(result__9847__auto___16292)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__9846__auto___16291), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__9846__auto___16291)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16267) {
    var t__9884__auto___16293 = e16267;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16293, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16294 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_model.call(null, c));
    var result__9847__auto___16295 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto___16294);
    if (cljs.core.truth_(result__9847__auto___16295)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto___16294), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto___16294)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16268) {
    var t__9884__auto___16296 = e16268;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16296, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "readddd", "readddd", 455623157), tiltontec.rube.evaluate.c_get.call(null, c));
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.rube.evaluate.c_get.call(null, c));
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16269) {
    var t__9884__auto__ = e16269;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.evaluate_test.t_formula.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.evaluate_test.t_formula;
}, new cljs.core.Symbol("tiltontec.rube.evaluate-test", "t-formula", "tiltontec.rube.evaluate-test/t-formula", 524219764, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.evaluate-test", "tiltontec.rube.evaluate-test", 1308727991, null), new cljs.core.Symbol(null, "t-formula", "t-formula", -178019426, null), "test/tiltontec/rube/evaluate_test.cljc", 19, 1, 57, 57, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.evaluate_test.t_formula) ? tiltontec.rube.evaluate_test.t_formula.cljs$lang$test : null]));
tiltontec.rube.evaluate_test.t_formula_2 = function tiltontec$rube$evaluate_test$t_formula_2() {
  return cljs.test.test_var.call(null, tiltontec$rube$evaluate_test$t_formula_2.cljs$lang$var);
};
tiltontec.rube.evaluate_test.t_formula_2.cljs$lang$test = function() {
  var b = tiltontec.rube.cells.c_in.call(null, 2);
  var cct = cljs.core.atom.call(null, 0);
  var dct = cljs.core.atom.call(null, 0);
  var c = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, 
  "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(b, cct, dct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, cct, cljs.core.inc);
      return 40 + tiltontec.rube.evaluate.c_get.call(null, b);
    };
  }(b, cct, dct));
  var d = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, 
  "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(b, cct, dct, c) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, dct, cljs.core.inc);
      return tiltontec.rube.evaluate.c_get.call(null, c) + tiltontec.rube.evaluate.c_get.call(null, b);
    };
  }(b, cct, dct, c));
  try {
    var values__9846__auto___16308 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 44), tiltontec.rube.evaluate.c_get.call(null, d));
    var result__9847__auto___16309 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16308);
    if (cljs.core.truth_(result__9847__auto___16309)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16308), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16308)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16297) {
    var t__9884__auto___16310 = e16297;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16310, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16311 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.rube.evaluate.c_get.call(null, c));
    var result__9847__auto___16312 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16311);
    if (cljs.core.truth_(result__9847__auto___16312)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16311), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16311)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16298) {
    var t__9884__auto___16313 = e16298;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16313, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16314 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), tiltontec.rube.evaluate.c_get.call(null, b));
    var result__9847__auto___16315 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16314);
    if (cljs.core.truth_(result__9847__auto___16315)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16314), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16314)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16299) {
    var t__9884__auto___16316 = e16299;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16316, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16317 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, dct)), 1);
    var result__9847__auto___16318 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16317);
    if (cljs.core.truth_(result__9847__auto___16318)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16317), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16317)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16300) {
    var t__9884__auto___16319 = e16300;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16319, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16320 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 1);
    var result__9847__auto___16321 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16320);
    if (cljs.core.truth_(result__9847__auto___16321)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16320), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16320)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16301) {
    var t__9884__auto___16322 = e16301;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16322, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16323 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.rube.cell_types.c_useds.call(null, b))), 0);
    var result__9847__auto___16324 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16323);
    if (cljs.core.truth_(result__9847__auto___16324)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16323), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16323)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16302) {
    var t__9884__auto___16325 = e16302;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
    new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16325, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16326 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.rube.cell_types.c_callers.call(null, b))), 2);
    var result__9847__auto___16327 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16326);
    if (cljs.core.truth_(result__9847__auto___16327)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16326), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16326)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16303) {
    var t__9884__auto___16328 = e16303;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
    new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16328, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16329 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.rube.cell_types.c_useds.call(null, c))), 1);
    var result__9847__auto___16330 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16329);
    if (cljs.core.truth_(result__9847__auto___16330)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16329), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16329)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16304) {
    var t__9884__auto___16331 = e16304;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
    new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16331, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16332 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.rube.cell_types.c_callers.call(null, c))), 1);
    var result__9847__auto___16333 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16332);
    if (cljs.core.truth_(result__9847__auto___16333)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16332), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16332)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16305) {
    var t__9884__auto___16334 = e16305;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
    new cljs.core.Symbol(null, "c", "c", -122660552, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16334, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16335 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.rube.cell_types.c_useds.call(null, d))), 2);
    var result__9847__auto___16336 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16335);
    if (cljs.core.truth_(result__9847__auto___16336)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16335), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
      new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16335)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16306) {
    var t__9884__auto___16337 = e16306;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), 
    new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16337, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.count.call(null, tiltontec.rube.cell_types.c_callers.call(null, d))), 0);
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), 
      new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16307) {
    var t__9884__auto__ = e16307;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, 
    null), new cljs.core.Symbol(null, "d", "d", -682293345, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.evaluate_test.t_formula_2.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.evaluate_test.t_formula_2;
}, new cljs.core.Symbol("tiltontec.rube.evaluate-test", "t-formula-2", "tiltontec.rube.evaluate-test/t-formula-2", -1408508520, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.evaluate-test", "tiltontec.rube.evaluate-test", 1308727991, null), new cljs.core.Symbol(null, "t-formula-2", "t-formula-2", 844540770, null), "test/tiltontec/rube/evaluate_test.cljc", 21, 1, 74, 
74, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.evaluate_test.t_formula_2) ? tiltontec.rube.evaluate_test.t_formula_2.cljs$lang$test : null]));
tiltontec.rube.evaluate_test.yowza = cljs.core.atom.call(null, 0);
tiltontec.rube.evaluate_test.t_in_reset = function tiltontec$rube$evaluate_test$t_in_reset() {
  return cljs.test.test_var.call(null, tiltontec$rube$evaluate_test$t_in_reset.cljs$lang$var);
};
tiltontec.rube.evaluate_test.t_in_reset.cljs$lang$test = function() {
  cljs.core.reset_BANG_.call(null, tiltontec.rube.evaluate_test.yowza, 0);
  try {
    var values__9846__auto___16343 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 0), cljs.core.deref.call(null, tiltontec.rube.evaluate_test.yowza));
    var result__9847__auto___16344 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16343);
    if (cljs.core.truth_(result__9847__auto___16344)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null)), 
      0), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16343), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null)), 
      0), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16343)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16338) {
    var t__9884__auto___16345 = e16338;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null)), 
    0), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16345, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var b = tiltontec.rube.cells.c_in.call(null, 2, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "yowza", "yowza", 561311574), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(slot, me, new$, old, c) {
    return cljs.core.reset_BANG_.call(null, tiltontec.rube.evaluate_test.yowza, new$);
  });
  try {
    var values__9846__auto___16346 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, b)), 2);
    var result__9847__auto___16347 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16346);
    if (cljs.core.truth_(result__9847__auto___16347)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16346), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16346)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16339) {
    var t__9884__auto___16348 = e16339;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16348, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16349 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.rube.evaluate_test.yowza)), 2);
    var result__9847__auto___16350 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16349);
    if (cljs.core.truth_(result__9847__auto___16350)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16349), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16349)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16340) {
    var t__9884__auto___16351 = e16340;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16351, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.cells.c_reset_BANG_.call(null, b, 42);
  try {
    var values__9846__auto___16352 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, b)), 42);
    var result__9847__auto___16353 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16352);
    if (cljs.core.truth_(result__9847__auto___16353)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16352), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16352)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16341) {
    var t__9884__auto___16354 = e16341;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16354, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, tiltontec.rube.evaluate_test.yowza)), 42);
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16342) {
    var t__9884__auto__ = e16342;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "yowza", "yowza", -2093124195, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.evaluate_test.t_in_reset.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.evaluate_test.t_in_reset;
}, new cljs.core.Symbol("tiltontec.rube.evaluate-test", "t-in-reset", "tiltontec.rube.evaluate-test/t-in-reset", -1229942508, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.evaluate-test", "tiltontec.rube.evaluate-test", 1308727991, null), new cljs.core.Symbol(null, "t-in-reset", "t-in-reset", 285694538, null), "test/tiltontec/rube/evaluate_test.cljc", 20, 1, 100, 100, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.evaluate_test.t_in_reset) ? tiltontec.rube.evaluate_test.t_in_reset.cljs$lang$test : null]));
tiltontec.rube.evaluate_test.t_formula_22 = function tiltontec$rube$evaluate_test$t_formula_22() {
  return cljs.test.test_var.call(null, tiltontec$rube$evaluate_test$t_formula_22.cljs$lang$var);
};
tiltontec.rube.evaluate_test.t_formula_22.cljs$lang$test = function() {
  tiltontec.rube.cell_types.cells_init.call(null);
  var b = tiltontec.rube.cells.c_in.call(null, 2, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837));
  var cct = cljs.core.atom.call(null, 0);
  var dct = cljs.core.atom.call(null, 0);
  var c = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "cc", "cc", 301258124), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 
  40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(b, cct, dct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, cct, cljs.core.inc);
      return 40 + tiltontec.rube.evaluate.c_get.call(null, b);
    };
  }(b, cct, dct));
  var d = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, 
  null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(b, cct, dct, c) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, dct, cljs.core.inc);
      return tiltontec.rube.evaluate.c_get.call(null, c) + tiltontec.rube.evaluate.c_get.call(null, b);
    };
  }(b, cct, dct, c));
  try {
    var values__9846__auto___16365 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 44), tiltontec.rube.evaluate.c_get.call(null, d));
    var result__9847__auto___16366 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16365);
    if (cljs.core.truth_(result__9847__auto___16366)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16365), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16365)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16355) {
    var t__9884__auto___16367 = e16355;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 44), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16367, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16368 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.rube.evaluate.c_get.call(null, c));
    var result__9847__auto___16369 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16368);
    if (cljs.core.truth_(result__9847__auto___16369)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16368), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16368)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16356) {
    var t__9884__auto___16370 = e16356;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16370, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16371 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), tiltontec.rube.evaluate.c_get.call(null, b));
    var result__9847__auto___16372 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16371);
    if (cljs.core.truth_(result__9847__auto___16372)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16371), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16371)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16357) {
    var t__9884__auto___16373 = e16357;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16373, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16374 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, dct)), 1);
    var result__9847__auto___16375 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16374);
    if (cljs.core.truth_(result__9847__auto___16375)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16374), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16374)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16358) {
    var t__9884__auto___16376 = e16358;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16376, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16377 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 1);
    var result__9847__auto___16378 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16377);
    if (cljs.core.truth_(result__9847__auto___16378)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16377), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16377)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16359) {
    var t__9884__auto___16379 = e16359;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16379, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.cells.c_reset_BANG_.call(null, b, 3);
  try {
    var values__9846__auto___16380 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 46), tiltontec.rube.evaluate.c_get.call(null, d));
    var result__9847__auto___16381 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16380);
    if (cljs.core.truth_(result__9847__auto___16381)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 46), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16380), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 46), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16380)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16360) {
    var t__9884__auto___16382 = e16360;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "d", "d", -682293345, null)), 46), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16382, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16383 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 43), tiltontec.rube.evaluate.c_get.call(null, c));
    var result__9847__auto___16384 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16383);
    if (cljs.core.truth_(result__9847__auto___16384)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 43), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16383), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 43), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16383)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16361) {
    var t__9884__auto___16385 = e16361;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 43), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16385, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16386 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 3), tiltontec.rube.evaluate.c_get.call(null, b));
    var result__9847__auto___16387 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16386);
    if (cljs.core.truth_(result__9847__auto___16387)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 3), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16386), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 3), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16386)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16362) {
    var t__9884__auto___16388 = e16362;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 3), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16388, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16389 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, dct)), 2);
    var result__9847__auto___16390 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16389);
    if (cljs.core.truth_(result__9847__auto___16390)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16389), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16389)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16363) {
    var t__9884__auto___16391 = e16363;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "dct", "dct", -2080259105, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16391, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 2);
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16364) {
    var t__9884__auto__ = e16364;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.evaluate_test.t_formula_22.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.evaluate_test.t_formula_22;
}, new cljs.core.Symbol("tiltontec.rube.evaluate-test", "t-formula-22", "tiltontec.rube.evaluate-test/t-formula-22", -1830839779, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.evaluate-test", "tiltontec.rube.evaluate-test", 1308727991, null), new cljs.core.Symbol(null, "t-formula-22", "t-formula-22", -194457801, null), "test/tiltontec/rube/evaluate_test.cljc", 
22, 1, 111, 111, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.evaluate_test.t_formula_22) ? tiltontec.rube.evaluate_test.t_formula_22.cljs$lang$test : null]));
tiltontec.rube.evaluate_test.pentagram_of_death = function tiltontec$rube$evaluate_test$pentagram_of_death() {
  return cljs.test.test_var.call(null, tiltontec$rube$evaluate_test$pentagram_of_death.cljs$lang$var);
};
tiltontec.rube.evaluate_test.pentagram_of_death.cljs$lang$test = function() {
  tiltontec.rube.cell_types.cells_init.call(null);
  var run = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var obs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var rset = function(run, obs) {
    return function() {
      cljs.core.swap_BANG_.call(null, run, cljs.core.empty);
      return cljs.core.swap_BANG_.call(null, obs, cljs.core.empty);
    };
  }(run, obs);
  var logit = function(run, obs, rset) {
    return function(log, key) {
      return cljs.core.swap_BANG_.call(null, run, cljs.core.assoc, key, key.call(null, cljs.core.deref.call(null, run), 0) + 1);
    };
  }(run, obs, rset);
  var logrun = function(run, obs, rset, logit) {
    return function(p1__16392_SHARP_) {
      return logit.call(null, run, p1__16392_SHARP_);
    };
  }(run, obs, rset, logit);
  var cr = function(run, obs, rset, logit, logrun) {
    return function(c) {
      return tiltontec.rube.evaluate.c_get.call(null, c);
    };
  }(run, obs, rset, logit, logrun);
  var podobs = function(run, obs, rset, logit, logrun, cr) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, obs, cljs.core.assoc, slot, slot.call(null, cljs.core.deref.call(null, obs), 0) + 1);
    };
  }(run, obs, rset, logit, logrun, cr);
  var aa = tiltontec.rube.cells.c_in.call(null, 1, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "aa", "aa", 1986357152), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs);
  var a7 = tiltontec.rube.cells.c_in.call(null, 7, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "a7", "a7", 1513050971), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs);
  var a70 = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "a70", "a70", 798099193), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "a70", "a70", 798099193)), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, 
  null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "a7", "a7", -1141384798, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "a70", "a70", 798099193));
      return 10 * cr.call(null, a7);
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7));
  var bb = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "bb", "bb", 75940837)), cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), 
  new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "bb", "bb", 75940837));
      return cr.call(null, aa);
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70));
  var cc = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "cc", "cc", 301258124), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "cc", "cc", 301258124)), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 
  10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "cc", "cc", 301258124));
      return 10 * cr.call(null, aa);
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb));
  var dd = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "dd", "dd", -1340437629), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "dd", "dd", -1340437629)), cljs.core.list(new cljs.core.Symbol(null, "if", "if", 1181717262, 
  null), cljs.core.list(new cljs.core.Symbol(null, "even?", "even?", -1827825394, null), cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), 42)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, 
  new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "dd", "dd", -1340437629));
      if (cljs.core.even_QMARK_.call(null, cr.call(null, bb))) {
        return 10 * cr.call(null, cc);
      } else {
        return 42;
      }
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc));
  var ee = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "ee", "ee", 643317400), new cljs.core.Keyword(null, "obs", "obs", -664011444), podobs, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "logrun", "logrun", -137388668, null), new cljs.core.Keyword(null, "ee", "ee", 643317400)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 
  cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "a70", "a70", -1856336576, null)), cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null)), cljs.core.list(new cljs.core.Symbol(null, "*", "*", 345799209, null), 1E4, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))))), new cljs.core.Keyword(null, 
  "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc, dd) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      logrun.call(null, new cljs.core.Keyword(null, "ee", "ee", 643317400));
      return cr.call(null, a70) + cr.call(null, bb) + 1E4 * cr.call(null, dd);
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc, dd));
  var verify_p_current = function(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc, dd, ee) {
    return function() {
      try {
        var values__9846__auto___16441 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, aa)), 2);
        var result__9847__auto___16442 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16441);
        if (cljs.core.truth_(result__9847__auto___16442)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16441), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16441)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e16393) {
        var t__9884__auto___16443 = e16393;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__9884__auto___16443, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__9846__auto___16444 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, bb)), 2);
        var result__9847__auto___16445 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16444);
        if (cljs.core.truth_(result__9847__auto___16445)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16444), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16444)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e16394) {
        var t__9884__auto___16446 = e16394;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__9884__auto___16446, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__9846__auto___16447 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, cc)), 20);
        var result__9847__auto___16448 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16447);
        if (cljs.core.truth_(result__9847__auto___16448)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 20, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16447), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 20, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16447)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e16395) {
        var t__9884__auto___16449 = e16395;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 20, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__9884__auto___16449, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__9846__auto___16450 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, dd)), 200);
        var result__9847__auto___16451 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16450);
        if (cljs.core.truth_(result__9847__auto___16451)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 200, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16450), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 200, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16450)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
      } catch (e16396) {
        var t__9884__auto___16452 = e16396;
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 200, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__9884__auto___16452, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
      try {
        var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, ee)), 2000072);
        var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
        if (cljs.core.truth_(result__9847__auto__)) {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2000072, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        } else {
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2000072, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
          "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        return result__9847__auto__;
      } catch (e16397) {
        var t__9884__auto__ = e16397;
        return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2000072, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    };
  }(run, obs, rset, logit, logrun, cr, podobs, aa, a7, a70, bb, cc, dd, ee);
  try {
    var values__9846__auto___16453 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, aa)), 1);
    var result__9847__auto___16454 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16453);
    if (cljs.core.truth_(result__9847__auto___16454)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16453), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16453)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16398) {
    var t__9884__auto___16455 = e16398;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__9884__auto___16455, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16456 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, bb)), 1);
    var result__9847__auto___16457 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16456);
    if (cljs.core.truth_(result__9847__auto___16457)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16456), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16456)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16399) {
    var t__9884__auto___16458 = e16399;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__9884__auto___16458, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16459 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, cc)), 10);
    var result__9847__auto___16460 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16459);
    if (cljs.core.truth_(result__9847__auto___16460)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16459), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16459)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16400) {
    var t__9884__auto___16461 = e16400;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 10, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16461, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16462 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, dd)), 42);
    var result__9847__auto___16463 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16462);
    if (cljs.core.truth_(result__9847__auto___16463)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16462), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, "actual", 
      "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16462)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16401) {
    var t__9884__auto___16464 = e16401;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, "actual", 
    "actual", 107306363), t__9884__auto___16464, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16465 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, ee)), 420071);
    var result__9847__auto___16466 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16465);
    if (cljs.core.truth_(result__9847__auto___16466)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 420071, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16465), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 420071, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16465)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16402) {
    var t__9884__auto___16467 = e16402;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 420071, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16467, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16468 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_useds.call(null, aa)), null);
    var result__9847__auto___16469 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16468);
    if (cljs.core.truth_(result__9847__auto___16469)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16468), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16468)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16403) {
    var t__9884__auto___16470 = e16403;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), null, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16470, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16471 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_slots.call(null, aa, new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "cc", "cc", 301258124), null], null), null));
    var result__9847__auto___16472 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16471);
    if (cljs.core.truth_(result__9847__auto___16472)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
      "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16471), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
      "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16471)), 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16404) {
    var t__9884__auto___16473 = e16404;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
    "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16473, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16474 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_slots.call(null, bb, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null));
    var result__9847__auto___16475 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16474);
    if (cljs.core.truth_(result__9847__auto___16475)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16474), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16474)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e16405) {
    var t__9884__auto___16476 = e16405;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16476, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16477 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_slots.call(null, bb, new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null));
    var result__9847__auto___16478 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16477);
    if (cljs.core.truth_(result__9847__auto___16478)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
      "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16477), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
      "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16477)), 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16406) {
    var t__9884__auto___16479 = e16406;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
    "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "bb", "bb", 1716472364, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16479, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16480 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_slots.call(null, cc, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null));
    var result__9847__auto___16481 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16480);
    if (cljs.core.truth_(result__9847__auto___16481)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16480), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16480)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e16407) {
    var t__9884__auto___16482 = e16407;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16482, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16483 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_slots.call(null, cc, new cljs.core.Keyword(null, "callers", "callers", -1991542784))), cljs.core.PersistentHashSet.EMPTY);
    var result__9847__auto___16484 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16483);
    if (cljs.core.truth_(result__9847__auto___16484)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, 
      null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16483), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, 
      null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16483)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16408) {
    var t__9884__auto___16485 = e16408;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "cc", "cc", 1941789651, 
    null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16485, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16486 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_slots.call(null, dd, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null));
    var result__9847__auto___16487 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16486);
    if (cljs.core.truth_(result__9847__auto___16487)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16486), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16486)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e16409) {
    var t__9884__auto___16488 = e16409;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16488, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16489 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_slots.call(null, dd, new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null));
    var result__9847__auto___16490 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16489);
    if (cljs.core.truth_(result__9847__auto___16490)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16489), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16489)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e16410) {
    var t__9884__auto___16491 = e16410;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
    "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16491, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16492 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_slots.call(null, ee, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "a70", "a70", 798099193), null], null), null));
    var result__9847__auto___16493 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16492);
    if (cljs.core.truth_(result__9847__auto___16493)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
      "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "a70", "a70", 798099193), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16492), new cljs.core.Keyword(null, "message", "message", -406056002), 
      null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
      "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "a70", "a70", 798099193), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, 
      "\x3d", "\x3d", -1501502141, null), values__9846__auto___16492)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16411) {
    var t__9884__auto___16494 = e16411;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, 
    "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "a70", "a70", 798099193), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16494, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16495 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_slots.call(null, ee, new cljs.core.Keyword(null, "callers", "callers", -1991542784))), cljs.core.PersistentHashSet.EMPTY);
    var result__9847__auto___16496 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16495);
    if (cljs.core.truth_(result__9847__auto___16496)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, 
      null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16495), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, 
      null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16495)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16412) {
    var t__9884__auto___16497 = e16412;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "ee", "ee", -2011118369, 
    null), new cljs.core.Keyword(null, "callers", "callers", -1991542784))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16497, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  var _STAR_trx_QMARK__STAR_16413 = tiltontec.rube.ut_macros._STAR_trx_QMARK__STAR_;
  tiltontec.rube.ut_macros._STAR_trx_QMARK__STAR_ = true;
  try {
    rset.call(null);
    var seq__16414_16498 = cljs.core.seq.call(null, cljs.core.seq.call(null, cljs.core.deref.call(null, obs)));
    var chunk__16415_16499 = null;
    var count__16416_16500 = 0;
    var i__16417_16501 = 0;
    while (true) {
      if (i__16417_16501 < count__16416_16500) {
        var vec__16418_16502 = cljs.core._nth.call(null, chunk__16415_16499, i__16417_16501);
        var k_16503 = cljs.core.nth.call(null, vec__16418_16502, 0, null);
        var v_16504 = cljs.core.nth.call(null, vec__16418_16502, 1, null);
        tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "obschk", "obschk", -637525555), k_16503, v_16504);
        try {
          var value__9849__auto___16505 = k_16503 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 0, v_16504);
          if (value__9849__auto___16505) {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__9849__auto___16505, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          } else {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__9849__auto___16505, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          }
        } catch (e16419) {
          var t__9884__auto___16506 = e16419;
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16506, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        var G__16507 = seq__16414_16498;
        var G__16508 = chunk__16415_16499;
        var G__16509 = count__16416_16500;
        var G__16510 = i__16417_16501 + 1;
        seq__16414_16498 = G__16507;
        chunk__16415_16499 = G__16508;
        count__16416_16500 = G__16509;
        i__16417_16501 = G__16510;
        continue;
      } else {
        var temp__4425__auto___16511 = cljs.core.seq.call(null, seq__16414_16498);
        if (temp__4425__auto___16511) {
          var seq__16414_16512__$1 = temp__4425__auto___16511;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__16414_16512__$1)) {
            var c__6682__auto___16513 = cljs.core.chunk_first.call(null, seq__16414_16512__$1);
            var G__16514 = cljs.core.chunk_rest.call(null, seq__16414_16512__$1);
            var G__16515 = c__6682__auto___16513;
            var G__16516 = cljs.core.count.call(null, c__6682__auto___16513);
            var G__16517 = 0;
            seq__16414_16498 = G__16514;
            chunk__16415_16499 = G__16515;
            count__16416_16500 = G__16516;
            i__16417_16501 = G__16517;
            continue;
          } else {
            var vec__16420_16518 = cljs.core.first.call(null, seq__16414_16512__$1);
            var k_16519 = cljs.core.nth.call(null, vec__16420_16518, 0, null);
            var v_16520 = cljs.core.nth.call(null, vec__16420_16518, 1, null);
            tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "obschk", "obschk", -637525555), k_16519, v_16520);
            try {
              var value__9849__auto___16521 = k_16519 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 0, v_16520);
              if (value__9849__auto___16521) {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__9849__auto___16521, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              } else {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__9849__auto___16521, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              }
            } catch (e16421) {
              var t__9884__auto___16522 = e16421;
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
              "\x3d", "\x3d", -1501502141, null), 0, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16522, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
            var G__16523 = cljs.core.next.call(null, seq__16414_16512__$1);
            var G__16524 = null;
            var G__16525 = 0;
            var G__16526 = 0;
            seq__16414_16498 = G__16523;
            chunk__16415_16499 = G__16524;
            count__16416_16500 = G__16525;
            i__16417_16501 = G__16526;
            continue;
          }
        } else {
        }
      }
      break;
    }
    tiltontec.rube.cells.c_reset_BANG_.call(null, aa, cr.call(null, aa) + 1);
    cljs.core._EQ_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "cc", "cc", 301258124), null, new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, run))));
    var seq__16422_16527 = cljs.core.seq.call(null, cljs.core.seq.call(null, cljs.core.deref.call(null, run)));
    var chunk__16423_16528 = null;
    var count__16424_16529 = 0;
    var i__16425_16530 = 0;
    while (true) {
      if (i__16425_16530 < count__16424_16529) {
        var vec__16426_16531 = cljs.core._nth.call(null, chunk__16423_16528, i__16425_16530);
        var k_16532 = cljs.core.nth.call(null, vec__16426_16531, 0, null);
        var v_16533 = cljs.core.nth.call(null, vec__16426_16531, 1, null);
        tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "runchk", "runchk", -886583070), k_16532, v_16533);
        try {
          var value__9849__auto___16534 = k_16532 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 1, v_16533);
          if (value__9849__auto___16534) {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__9849__auto___16534, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          } else {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__9849__auto___16534, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          }
        } catch (e16427) {
          var t__9884__auto___16535 = e16427;
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16535, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        var G__16536 = seq__16422_16527;
        var G__16537 = chunk__16423_16528;
        var G__16538 = count__16424_16529;
        var G__16539 = i__16425_16530 + 1;
        seq__16422_16527 = G__16536;
        chunk__16423_16528 = G__16537;
        count__16424_16529 = G__16538;
        i__16425_16530 = G__16539;
        continue;
      } else {
        var temp__4425__auto___16540 = cljs.core.seq.call(null, seq__16422_16527);
        if (temp__4425__auto___16540) {
          var seq__16422_16541__$1 = temp__4425__auto___16540;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__16422_16541__$1)) {
            var c__6682__auto___16542 = cljs.core.chunk_first.call(null, seq__16422_16541__$1);
            var G__16543 = cljs.core.chunk_rest.call(null, seq__16422_16541__$1);
            var G__16544 = c__6682__auto___16542;
            var G__16545 = cljs.core.count.call(null, c__6682__auto___16542);
            var G__16546 = 0;
            seq__16422_16527 = G__16543;
            chunk__16423_16528 = G__16544;
            count__16424_16529 = G__16545;
            i__16425_16530 = G__16546;
            continue;
          } else {
            var vec__16428_16547 = cljs.core.first.call(null, seq__16422_16541__$1);
            var k_16548 = cljs.core.nth.call(null, vec__16428_16547, 0, null);
            var v_16549 = cljs.core.nth.call(null, vec__16428_16547, 1, null);
            tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "runchk", "runchk", -886583070), k_16548, v_16549);
            try {
              var value__9849__auto___16550 = k_16548 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 1, v_16549);
              if (value__9849__auto___16550) {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__9849__auto___16550, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              } else {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__9849__auto___16550, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              }
            } catch (e16429) {
              var t__9884__auto___16551 = e16429;
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
              "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16551, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
            var G__16552 = cljs.core.next.call(null, seq__16422_16541__$1);
            var G__16553 = null;
            var G__16554 = 0;
            var G__16555 = 0;
            seq__16422_16527 = G__16552;
            chunk__16423_16528 = G__16553;
            count__16424_16529 = G__16554;
            i__16425_16530 = G__16555;
            continue;
          }
        } else {
        }
      }
      break;
    }
    cljs.core._EQ_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "aa", "aa", 1986357152), null, new cljs.core.Keyword(null, "dd", "dd", -1340437629), null, new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "cc", "cc", 301258124), null, new cljs.core.Keyword(null, "ee", "ee", 643317400), null], null), null), cljs.core.set.call(null, cljs.core.keys.call(null, cljs.core.deref.call(null, obs))));
    var seq__16430_16556 = cljs.core.seq.call(null, cljs.core.seq.call(null, cljs.core.deref.call(null, obs)));
    var chunk__16431_16557 = null;
    var count__16432_16558 = 0;
    var i__16433_16559 = 0;
    while (true) {
      if (i__16433_16559 < count__16432_16558) {
        var vec__16434_16560 = cljs.core._nth.call(null, chunk__16431_16557, i__16433_16559);
        var k_16561 = cljs.core.nth.call(null, vec__16434_16560, 0, null);
        var v_16562 = cljs.core.nth.call(null, vec__16434_16560, 1, null);
        tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "obschk", "obschk", -637525555), k_16561, v_16562);
        try {
          var value__9849__auto___16563 = k_16561 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 1, v_16562);
          if (value__9849__auto___16563) {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__9849__auto___16563, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          } else {
            cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
            "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__9849__auto___16563, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
          }
        } catch (e16435) {
          var t__9884__auto___16564 = e16435;
          cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
          "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16564, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
        }
        var G__16565 = seq__16430_16556;
        var G__16566 = chunk__16431_16557;
        var G__16567 = count__16432_16558;
        var G__16568 = i__16433_16559 + 1;
        seq__16430_16556 = G__16565;
        chunk__16431_16557 = G__16566;
        count__16432_16558 = G__16567;
        i__16433_16559 = G__16568;
        continue;
      } else {
        var temp__4425__auto___16569 = cljs.core.seq.call(null, seq__16430_16556);
        if (temp__4425__auto___16569) {
          var seq__16430_16570__$1 = temp__4425__auto___16569;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__16430_16570__$1)) {
            var c__6682__auto___16571 = cljs.core.chunk_first.call(null, seq__16430_16570__$1);
            var G__16572 = cljs.core.chunk_rest.call(null, seq__16430_16570__$1);
            var G__16573 = c__6682__auto___16571;
            var G__16574 = cljs.core.count.call(null, c__6682__auto___16571);
            var G__16575 = 0;
            seq__16430_16556 = G__16572;
            chunk__16431_16557 = G__16573;
            count__16432_16558 = G__16574;
            i__16433_16559 = G__16575;
            continue;
          } else {
            var vec__16436_16576 = cljs.core.first.call(null, seq__16430_16570__$1);
            var k_16577 = cljs.core.nth.call(null, vec__16436_16576, 0, null);
            var v_16578 = cljs.core.nth.call(null, vec__16436_16576, 1, null);
            tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "obschk", "obschk", -637525555), k_16577, v_16578);
            try {
              var value__9849__auto___16579 = k_16577 instanceof cljs.core.Keyword && cljs.core._EQ_.call(null, 1, v_16578);
              if (value__9849__auto___16579) {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__9849__auto___16579, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              } else {
                cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
                "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), value__9849__auto___16579, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
              }
            } catch (e16437) {
              var t__9884__auto___16580 = e16437;
              cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "and", "and", 668631710, null), cljs.core.list(new cljs.core.Symbol(null, "keyword?", "keyword?", 1917797069, null), new cljs.core.Symbol(null, "k", "k", -505765866, null)), cljs.core.list(new cljs.core.Symbol(null, 
              "\x3d", "\x3d", -1501502141, null), 1, new cljs.core.Symbol(null, "v", "v", 1661996586, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16580, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
            }
            var G__16581 = cljs.core.next.call(null, seq__16430_16570__$1);
            var G__16582 = null;
            var G__16583 = 0;
            var G__16584 = 0;
            seq__16430_16556 = G__16581;
            chunk__16431_16557 = G__16582;
            count__16432_16558 = G__16583;
            i__16433_16559 = G__16584;
            continue;
          }
        } else {
        }
      }
      break;
    }
    try {
      var values__9846__auto___16585 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_slots.call(null, dd, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, "cc", "cc", 301258124), null], null), null));
      var result__9847__auto___16586 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16585);
      if (cljs.core.truth_(result__9847__auto___16586)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
        "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16585), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
        "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16585)), 
        new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e16438) {
      var t__9884__auto___16587 = e16438;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null, new cljs.core.Keyword(null, 
      "cc", "cc", 301258124), null], null), null), cljs.core.list(new cljs.core.Symbol(null, "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16587, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    verify_p_current.call(null);
    tiltontec.rube.cells.c_reset_BANG_.call(null, aa, cr.call(null, aa) + 1);
    try {
      var values__9846__auto___16588 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cr.call(null, dd)), 42);
      var result__9847__auto___16589 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16588);
      if (cljs.core.truth_(result__9847__auto___16589)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16588), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
        "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16588)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      }
    } catch (e16439) {
      var t__9884__auto___16590 = e16439;
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "cr", "cr", 621502674, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), t__9884__auto___16590, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    try {
      var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_slots.call(null, dd, new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null));
      var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
      if (cljs.core.truth_(result__9847__auto__)) {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
        "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
      } else {
        cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
        "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
        "message", "message", -406056002), null], null));
      }
      return result__9847__auto__;
    } catch (e16440) {
      var t__9884__auto__ = e16440;
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "bb", "bb", 75940837), null], null), null), cljs.core.list(new cljs.core.Symbol(null, 
      "c-slots", "c-slots", -1985106995, null), new cljs.core.Symbol(null, "dd", "dd", 300093898, null), new cljs.core.Keyword(null, "useds", "useds", 621350967))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } finally {
    tiltontec.rube.ut_macros._STAR_trx_QMARK__STAR_ = _STAR_trx_QMARK__STAR_16413;
  }
};
tiltontec.rube.evaluate_test.pentagram_of_death.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.evaluate_test.pentagram_of_death;
}, new cljs.core.Symbol("tiltontec.rube.evaluate-test", "pentagram-of-death", "tiltontec.rube.evaluate-test/pentagram-of-death", -1370700691, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.evaluate-test", "tiltontec.rube.evaluate-test", 1308727991, null), new cljs.core.Symbol(null, "pentagram-of-death", "pentagram-of-death", 874385051, null), "test/tiltontec/rube/evaluate_test.cljc", 
28, 1, 147, 147, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.evaluate_test.pentagram_of_death) ? tiltontec.rube.evaluate_test.pentagram_of_death.cljs$lang$test : null]));
tiltontec.rube.evaluate_test.t_cell_unchanged_test = function tiltontec$rube$evaluate_test$t_cell_unchanged_test() {
  return cljs.test.test_var.call(null, tiltontec$rube$evaluate_test$t_cell_unchanged_test.cljs$lang$var);
};
tiltontec.rube.evaluate_test.t_cell_unchanged_test.cljs$lang$test = function() {
  tiltontec.rube.cell_types.cells_init.call(null);
  var ob = cljs.core.atom.call(null, 0);
  var b = tiltontec.rube.cells.c_in.call(null, 2, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(ob) {
    return function(slot, me, new$, old, c) {
      tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "obs-bb!!", "obs-bb!!", -1369030842), new$, old);
      return cljs.core.swap_BANG_.call(null, ob, cljs.core.inc);
    };
  }(ob), new cljs.core.Keyword(null, "unchanged-if", "unchanged-if", -923210106), function(ob) {
    return function(n, p) {
      tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "ucif-sees", "ucif-sees", -1878078109), n, p);
      return typeof n === "number" && typeof p === "number" && (cljs.core.even_QMARK_.call(null, n) && cljs.core.even_QMARK_.call(null, p) || cljs.core.odd_QMARK_.call(null, n) && cljs.core.odd_QMARK_.call(null, p));
    };
  }(ob));
  var cct = cljs.core.atom.call(null, 0);
  var c = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "cc", "cc", 301258124), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 
  40, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(ob, b, cct) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      cljs.core.swap_BANG_.call(null, cct, cljs.core.inc);
      return 40 + tiltontec.rube.evaluate.c_get.call(null, b);
    };
  }(ob, b, cct));
  try {
    var values__9846__auto___16603 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.rube.evaluate.c_get.call(null, c));
    var result__9847__auto___16604 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16603);
    if (cljs.core.truth_(result__9847__auto___16604)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16603), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16603)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16591) {
    var t__9884__auto___16605 = e16591;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16605, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16606 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 2), tiltontec.rube.evaluate.c_get.call(null, b));
    var result__9847__auto___16607 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16606);
    if (cljs.core.truth_(result__9847__auto___16607)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16606), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16606)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16592) {
    var t__9884__auto___16608 = e16592;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 2), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16608, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16609 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, ob)), 1);
    var result__9847__auto___16610 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16609);
    if (cljs.core.truth_(result__9847__auto___16610)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16609), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16609)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16593) {
    var t__9884__auto___16611 = e16593;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16611, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16612 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 1);
    var result__9847__auto___16613 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16612);
    if (cljs.core.truth_(result__9847__auto___16613)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16612), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16612)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16594) {
    var t__9884__auto___16614 = e16594;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16614, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.cells.c_reset_BANG_.call(null, b, 4);
  try {
    var values__9846__auto___16615 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.rube.evaluate.c_get.call(null, c));
    var result__9847__auto___16616 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16615);
    if (cljs.core.truth_(result__9847__auto___16616)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16615), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16615)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16595) {
    var t__9884__auto___16617 = e16595;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16617, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16618 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 4), tiltontec.rube.evaluate.c_get.call(null, b));
    var result__9847__auto___16619 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16618);
    if (cljs.core.truth_(result__9847__auto___16619)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 4), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16618), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 4), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16618)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16596) {
    var t__9884__auto___16620 = e16596;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 4), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16620, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16621 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, ob)), 1);
    var result__9847__auto___16622 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16621);
    if (cljs.core.truth_(result__9847__auto___16622)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16621), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16621)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16597) {
    var t__9884__auto___16623 = e16597;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16623, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16624 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 1);
    var result__9847__auto___16625 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16624);
    if (cljs.core.truth_(result__9847__auto___16625)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16624), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16624)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16598) {
    var t__9884__auto___16626 = e16598;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16626, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.cells.c_reset_BANG_.call(null, b, 5);
  try {
    var values__9846__auto___16627 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 45), tiltontec.rube.evaluate.c_get.call(null, c));
    var result__9847__auto___16628 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16627);
    if (cljs.core.truth_(result__9847__auto___16628)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 45), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16627), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 45), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16627)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16599) {
    var t__9884__auto___16629 = e16599;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 45), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16629, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16630 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 5), tiltontec.rube.evaluate.c_get.call(null, b));
    var result__9847__auto___16631 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16630);
    if (cljs.core.truth_(result__9847__auto___16631)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 5), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16630), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 5), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16630)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16600) {
    var t__9884__auto___16632 = e16600;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), 5), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16632, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16633 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, ob)), 2);
    var result__9847__auto___16634 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16633);
    if (cljs.core.truth_(result__9847__auto___16634)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16633), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16633)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16601) {
    var t__9884__auto___16635 = e16601;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "ob", "ob", 1225806795, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16635, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cct)), 2);
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16602) {
    var t__9884__auto__ = e16602;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cct", "cct", -840228750, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.evaluate_test.t_cell_unchanged_test.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.evaluate_test.t_cell_unchanged_test;
}, new cljs.core.Symbol("tiltontec.rube.evaluate-test", "t-cell-unchanged-test", "tiltontec.rube.evaluate-test/t-cell-unchanged-test", 384566684, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.evaluate-test", "tiltontec.rube.evaluate-test", 1308727991, null), new cljs.core.Symbol(null, "t-cell-unchanged-test", "t-cell-unchanged-test", -257732942, null), "test/tiltontec/rube/evaluate_test.cljc", 
31, 1, 294, 294, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.evaluate_test.t_cell_unchanged_test) ? tiltontec.rube.evaluate_test.t_cell_unchanged_test.cljs$lang$test : null]));
tiltontec.rube.evaluate_test.opti_away = function tiltontec$rube$evaluate_test$opti_away() {
  return cljs.test.test_var.call(null, tiltontec$rube$evaluate_test$opti_away.cljs$lang$var);
};
tiltontec.rube.evaluate_test.opti_away.cljs$lang$test = function() {
  var aa = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(42), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
    return 42;
  });
  try {
    var values__9846__auto___16639 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, aa)), 42);
    var result__9847__auto___16640 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16639);
    if (cljs.core.truth_(result__9847__auto___16640)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16639), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16639)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16636) {
    var t__9884__auto___16641 = e16636;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16641, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  cljs.core.println.call(null, new cljs.core.Keyword(null, "aa", "aa", 1986357152), cljs.core.deref.call(null, aa));
  try {
    var values__9846__auto___16642 = cljs.core._conj.call(null, cljs.core.List.EMPTY, aa);
    var result__9847__auto___16643 = cljs.core.apply.call(null, tiltontec.rube.cell_types.c_optimized_away_QMARK_, values__9846__auto___16642);
    if (cljs.core.truth_(result__9847__auto___16643)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-optimized-away?", "c-optimized-away?", 285032327, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, 
      tiltontec.rube.cell_types.c_optimized_away_QMARK_, values__9846__auto___16642), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-optimized-away?", "c-optimized-away?", 285032327, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, 
      cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-optimized-away?", "c-optimized-away?", 285032327, null), values__9846__auto___16642)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16637) {
    var t__9884__auto___16644 = e16637;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-optimized-away?", "c-optimized-away?", 285032327, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16644, 
    new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, aa)), 42);
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16638) {
    var t__9884__auto__ = e16638;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "aa", "aa", -668078617, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.evaluate_test.opti_away.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.evaluate_test.opti_away;
}, new cljs.core.Symbol("tiltontec.rube.evaluate-test", "opti-away", "tiltontec.rube.evaluate-test/opti-away", 74409972, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.evaluate-test", "tiltontec.rube.evaluate-test", 1308727991, null), new cljs.core.Symbol(null, "opti-away", "opti-away", -1363650270, null), "test/tiltontec/rube/evaluate_test.cljc", 19, 1, 329, 329, 
cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.evaluate_test.opti_away) ? tiltontec.rube.evaluate_test.opti_away.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env16645 = cljs.test.empty_env.call(null);
  var summary16646 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16645, summary16646) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env16645);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.evaluate-test", "tiltontec.rube.evaluate-test", 1308727991, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__9951__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__9951__auto__, env16645, summary16646) {
          return function() {
            if (env__9951__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__9951__auto__, env16645, summary16646)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.rube.evaluate_test.test_input;
        }, new cljs.core.Symbol("tiltontec.rube.evaluate-test", "test-input", "tiltontec.rube.evaluate-test/test-input", -1187251275, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.evaluate-test", "tiltontec.rube.evaluate-test", 1308727991, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/rube/evaluate_test.cljc", 
        20, 1, 45, 45, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.evaluate_test.test_input) ? tiltontec.rube.evaluate_test.test_input.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.evaluate_test.t_formula;
        }, new cljs.core.Symbol("tiltontec.rube.evaluate-test", "t-formula", "tiltontec.rube.evaluate-test/t-formula", 524219764, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.evaluate-test", "tiltontec.rube.evaluate-test", 1308727991, null), new cljs.core.Symbol(null, "t-formula", "t-formula", -178019426, null), "test/tiltontec/rube/evaluate_test.cljc", 
        19, 1, 57, 57, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.evaluate_test.t_formula) ? tiltontec.rube.evaluate_test.t_formula.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.evaluate_test.t_formula_2;
        }, new cljs.core.Symbol("tiltontec.rube.evaluate-test", "t-formula-2", "tiltontec.rube.evaluate-test/t-formula-2", -1408508520, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.evaluate-test", "tiltontec.rube.evaluate-test", 1308727991, null), new cljs.core.Symbol(null, "t-formula-2", "t-formula-2", 844540770, null), "test/tiltontec/rube/evaluate_test.cljc", 
        21, 1, 74, 74, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.evaluate_test.t_formula_2) ? tiltontec.rube.evaluate_test.t_formula_2.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.evaluate_test.t_in_reset;
        }, new cljs.core.Symbol("tiltontec.rube.evaluate-test", "t-in-reset", "tiltontec.rube.evaluate-test/t-in-reset", -1229942508, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.evaluate-test", "tiltontec.rube.evaluate-test", 1308727991, null), new cljs.core.Symbol(null, "t-in-reset", "t-in-reset", 285694538, null), "test/tiltontec/rube/evaluate_test.cljc", 
        20, 1, 100, 100, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.evaluate_test.t_in_reset) ? tiltontec.rube.evaluate_test.t_in_reset.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.evaluate_test.t_formula_22;
        }, new cljs.core.Symbol("tiltontec.rube.evaluate-test", "t-formula-22", "tiltontec.rube.evaluate-test/t-formula-22", -1830839779, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.evaluate-test", "tiltontec.rube.evaluate-test", 1308727991, null), new cljs.core.Symbol(null, "t-formula-22", "t-formula-22", -194457801, null), "test/tiltontec/rube/evaluate_test.cljc", 
        22, 1, 111, 111, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.evaluate_test.t_formula_22) ? tiltontec.rube.evaluate_test.t_formula_22.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.evaluate_test.pentagram_of_death;
        }, new cljs.core.Symbol("tiltontec.rube.evaluate-test", "pentagram-of-death", "tiltontec.rube.evaluate-test/pentagram-of-death", -1370700691, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.evaluate-test", "tiltontec.rube.evaluate-test", 1308727991, null), new cljs.core.Symbol(null, "pentagram-of-death", "pentagram-of-death", 874385051, null), "test/tiltontec/rube/evaluate_test.cljc", 
        28, 1, 147, 147, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.evaluate_test.pentagram_of_death) ? tiltontec.rube.evaluate_test.pentagram_of_death.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.evaluate_test.t_cell_unchanged_test;
        }, new cljs.core.Symbol("tiltontec.rube.evaluate-test", "t-cell-unchanged-test", "tiltontec.rube.evaluate-test/t-cell-unchanged-test", 384566684, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.evaluate-test", "tiltontec.rube.evaluate-test", 1308727991, null), new cljs.core.Symbol(null, "t-cell-unchanged-test", "t-cell-unchanged-test", -257732942, null), "test/tiltontec/rube/evaluate_test.cljc", 
        31, 1, 294, 294, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.evaluate_test.t_cell_unchanged_test) ? tiltontec.rube.evaluate_test.t_cell_unchanged_test.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.evaluate_test.opti_away;
        }, new cljs.core.Symbol("tiltontec.rube.evaluate-test", "opti-away", "tiltontec.rube.evaluate-test/opti-away", 74409972, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.evaluate-test", "tiltontec.rube.evaluate-test", 1308727991, null), new cljs.core.Symbol(null, "opti-away", "opti-away", -1363650270, null), "test/tiltontec/rube/evaluate_test.cljc", 
        19, 1, 329, 329, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.evaluate_test.opti_away) ? tiltontec.rube.evaluate_test.opti_away.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__9951__auto__, env16645, summary16646) {
          return function() {
            if (env__9951__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__9951__auto__, env16645, summary16646)], null));
      }());
    };
  }(env16645, summary16646), function(env16645, summary16646) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.evaluate-test", "tiltontec.rube.evaluate-test", 1308727991, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env16645, summary16646)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16645, summary16646) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary16646, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary16646), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env16645, summary16646)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16645, summary16646) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env16645);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary16646));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary16646), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env16645, summary16646)], null));
}());
goog.provide("tiltontec.rube.cells_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("tiltontec.rube.ut_macros");
goog.require("tiltontec.rube.utility");
goog.require("tiltontec.rube.cell_types");
goog.require("tiltontec.rube.integrity");
goog.require("tiltontec.rube.observer");
goog.require("tiltontec.rube.cells");
goog.require("tiltontec.rube.evaluate");
cljs.core._STAR_print_level_STAR_ = 3;
tiltontec.rube.cells_test.test_input = function tiltontec$rube$cells_test$test_input() {
  return cljs.test.test_var.call(null, tiltontec$rube$cells_test$test_input.cljs$lang$var);
};
tiltontec.rube.cells_test.test_input.cljs$lang$test = function() {
  var c = tiltontec.rube.cells.make_cell.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "mol", "mol", -2087943467), new cljs.core.Keyword(null, "value", "value", 305978217), 42);
  try {
    var values__9846__auto___16740 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), c);
    var result__9847__auto___16741 = cljs.core.apply.call(null, tiltontec.rube.cell_types.ia_type_QMARK_, values__9846__auto___16740);
    if (cljs.core.truth_(result__9847__auto___16741)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.cell_types.ia_type_QMARK_, values__9846__auto___16740), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__9846__auto___16740)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16733) {
    var t__9884__auto___16742 = e16733;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16742, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16743 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.rube.cell_types.c_value.call(null, c));
    var result__9847__auto___16744 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16743);
    if (cljs.core.truth_(result__9847__auto___16744)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16743), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16743)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16734) {
    var t__9884__auto___16745 = e16734;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16745, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16746 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), tiltontec.rube.cell_types.c_value_state.call(null, c));
    var result__9847__auto___16747 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16746);
    if (cljs.core.truth_(result__9847__auto___16747)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16746), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16746)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16735) {
    var t__9884__auto___16748 = e16735;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16748, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16749 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__9847__auto___16750 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16749);
    if (cljs.core.truth_(result__9847__auto___16750)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16749), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16749)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16736) {
    var t__9884__auto___16751 = e16736;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16751, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16752 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__9847__auto___16753 = cljs.core.apply.call(null, tiltontec.rube.cell_types.c_input_QMARK_, values__9846__auto___16752);
    if (cljs.core.truth_(result__9847__auto___16753)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.cell_types.c_input_QMARK_, 
      values__9846__auto___16752), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__9846__auto___16752)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16737) {
    var t__9884__auto___16754 = e16737;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16754, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16755 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_model.call(null, c));
    var result__9847__auto___16756 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto___16755);
    if (cljs.core.truth_(result__9847__auto___16756)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto___16755), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto___16755)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16738) {
    var t__9884__auto___16757 = e16738;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16757, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_slot.call(null, c)), new cljs.core.Keyword(null, "mol", "mol", -2087943467));
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "mol", "mol", -2087943467), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "mol", "mol", -2087943467), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16739) {
    var t__9884__auto__ = e16739;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "mol", "mol", -2087943467), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.cells_test.test_input.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.cells_test.test_input;
}, new cljs.core.Symbol("tiltontec.rube.cells-test", "test-input", "tiltontec.rube.cells-test/test-input", -545313555, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.cells-test", "tiltontec.rube.cells-test", -1570122946, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/rube/cells_test.cljc", 20, 1, 44, 44, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.rube.cells_test.test_input) ? tiltontec.rube.cells_test.test_input.cljs$lang$test : null]));
tiltontec.rube.cells_test.test_c_in = function tiltontec$rube$cells_test$test_c_in() {
  return cljs.test.test_var.call(null, tiltontec$rube$cells_test$test_c_in.cljs$lang$var);
};
tiltontec.rube.cells_test.test_c_in.cljs$lang$test = function() {
  var c = tiltontec.rube.cells.c_in.call(null, 42);
  try {
    var values__9846__auto___16765 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), c);
    var result__9847__auto___16766 = cljs.core.apply.call(null, tiltontec.rube.cell_types.ia_type_QMARK_, values__9846__auto___16765);
    if (cljs.core.truth_(result__9847__auto___16766)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.cell_types.ia_type_QMARK_, values__9846__auto___16765), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__9846__auto___16765)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16758) {
    var t__9884__auto___16767 = e16758;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "cell", "tiltontec.rube.cell-types/cell", -309952610)), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16767, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16768 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.rube.cell_types.c_value.call(null, c));
    var result__9847__auto___16769 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16768);
    if (cljs.core.truth_(result__9847__auto___16769)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16768), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16768)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16759) {
    var t__9884__auto___16770 = e16759;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16770, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16771 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), tiltontec.rube.cell_types.c_value_state.call(null, c));
    var result__9847__auto___16772 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16771);
    if (cljs.core.truth_(result__9847__auto___16772)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16771), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16771)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16760) {
    var t__9884__auto___16773 = e16760;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16773, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16774 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__9847__auto___16775 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16774);
    if (cljs.core.truth_(result__9847__auto___16775)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16774), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16774)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16761) {
    var t__9884__auto___16776 = e16761;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16776, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16777 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__9847__auto___16778 = cljs.core.apply.call(null, tiltontec.rube.cell_types.c_input_QMARK_, values__9846__auto___16777);
    if (cljs.core.truth_(result__9847__auto___16778)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.cell_types.c_input_QMARK_, 
      values__9846__auto___16777), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__9846__auto___16777)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16762) {
    var t__9884__auto___16779 = e16762;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16779, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16780 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__9847__auto___16781 = cljs.core.apply.call(null, tiltontec.rube.cell_types.c_valid_QMARK_, values__9846__auto___16780);
    if (cljs.core.truth_(result__9847__auto___16781)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.cell_types.c_valid_QMARK_, 
      values__9846__auto___16780), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__9846__auto___16780)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16763) {
    var t__9884__auto___16782 = e16763;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16782, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_model.call(null, c));
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16764) {
    var t__9884__auto__ = e16764;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.cells_test.test_c_in.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.cells_test.test_c_in;
}, new cljs.core.Symbol("tiltontec.rube.cells-test", "test-c-in", "tiltontec.rube.cells-test/test-c-in", 128434976, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.cells-test", "tiltontec.rube.cells-test", -1570122946, null), new cljs.core.Symbol(null, "test-c-in", "test-c-in", -885735134, null), "test/tiltontec/rube/cells_test.cljc", 19, 1, 57, 57, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.rube.cells_test.test_c_in) ? tiltontec.rube.cells_test.test_c_in.cljs$lang$test : null]));
tiltontec.rube.cells_test.test_c_in_PLUS_ = function tiltontec$rube$cells_test$test_c_in_PLUS_() {
  return cljs.test.test_var.call(null, tiltontec$rube$cells_test$test_c_in_PLUS_.cljs$lang$var);
};
tiltontec.rube.cells_test.test_c_in_PLUS_.cljs$lang$test = function() {
  var c = tiltontec.rube.cells.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "cool", "cool", -10453819));
  try {
    var values__9846__auto___16790 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__9847__auto___16791 = cljs.core.apply.call(null, tiltontec.rube.cell_types.c_ref_QMARK_, values__9846__auto___16790);
    if (cljs.core.truth_(result__9847__auto___16791)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.cell_types.c_ref_QMARK_, 
      values__9846__auto___16790), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), values__9846__auto___16790)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16783) {
    var t__9884__auto___16792 = e16783;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16792, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16793 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, 42), tiltontec.rube.cell_types.c_value.call(null, c));
    var result__9847__auto___16794 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16793);
    if (cljs.core.truth_(result__9847__auto___16794)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16793), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16793)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16784) {
    var t__9884__auto___16795 = e16784;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), 42), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16795, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16796 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "valid", "valid", 155614240)), tiltontec.rube.cell_types.c_value_state.call(null, c));
    var result__9847__auto___16797 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16796);
    if (cljs.core.truth_(result__9847__auto___16797)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16796), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16796)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16785) {
    var t__9884__auto___16798 = e16785;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "valid", "valid", 155614240)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16798, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16799 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__9847__auto___16800 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16799);
    if (cljs.core.truth_(result__9847__auto___16800)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16799), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16799)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16786) {
    var t__9884__auto___16801 = e16786;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16801, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16802 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__9847__auto___16803 = cljs.core.apply.call(null, tiltontec.rube.cell_types.c_input_QMARK_, values__9846__auto___16802);
    if (cljs.core.truth_(result__9847__auto___16803)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.cell_types.c_input_QMARK_, 
      values__9846__auto___16802), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), values__9846__auto___16802)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16787) {
    var t__9884__auto___16804 = e16787;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16804, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16805 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_model.call(null, c));
    var result__9847__auto___16806 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto___16805);
    if (cljs.core.truth_(result__9847__auto___16806)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto___16805), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto___16805)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16788) {
    var t__9884__auto___16807 = e16788;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16807, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_slot_name.call(null, c)), tiltontec.rube.cell_types.c_slot.call(null, c)), new cljs.core.Keyword(null, "cool", "cool", -10453819));
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "cool", "cool", -10453819), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "cool", "cool", -10453819), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16789) {
    var t__9884__auto__ = e16789;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "cool", "cool", -10453819), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.cells_test.test_c_in_PLUS_.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.cells_test.test_c_in_PLUS_;
}, new cljs.core.Symbol("tiltontec.rube.cells-test", "test-c-in+", "tiltontec.rube.cells-test/test-c-in+", 933729239, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.cells-test", "tiltontec.rube.cells-test", -1570122946, null), new cljs.core.Symbol(null, "test-c-in+", "test-c-in+", -1036603951, null), "test/tiltontec/rube/cells_test.cljc", 20, 1, 68, 68, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.rube.cells_test.test_c_in_PLUS_) ? tiltontec.rube.cells_test.test_c_in_PLUS_.cljs$lang$test : null]));
tiltontec.rube.cells_test.test_c_formula = function tiltontec$rube$cells_test$test_c_formula() {
  return cljs.test.test_var.call(null, tiltontec$rube$cells_test$test_c_formula.cljs$lang$var);
};
tiltontec.rube.cells_test.test_c_formula.cljs$lang$test = function() {
  var c = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 40, 2)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
    return 40 + 2;
  });
  try {
    var values__9846__auto___16816 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", -1677011786)), c);
    var result__9847__auto___16817 = cljs.core.apply.call(null, tiltontec.rube.cell_types.ia_type_QMARK_, values__9846__auto___16816);
    if (cljs.core.truth_(result__9847__auto___16817)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", 
      -1677011786)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.cell_types.ia_type_QMARK_, values__9846__auto___16816), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", 
      -1677011786)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), values__9846__auto___16816)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16808) {
    var t__9884__auto___16818 = e16808;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "ia-type?", "ia-type?", -1884212814, null), new cljs.core.Symbol(null, "c", "c", -122660552, null), new cljs.core.Keyword("tiltontec.rube.cell-types", "c-formula", "tiltontec.rube.cell-types/c-formula", 
    -1677011786)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16818, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16819 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_rule.call(null, c));
    var result__9847__auto___16820 = cljs.core.apply.call(null, cljs.core.fn_QMARK_, values__9846__auto___16819);
    if (cljs.core.truth_(result__9847__auto___16820)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.fn_QMARK_, values__9846__auto___16819), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), values__9846__auto___16819)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16809) {
    var t__9884__auto___16821 = e16809;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16821, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16822 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.unbound), tiltontec.rube.cell_types.c_value.call(null, c));
    var result__9847__auto___16823 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16822);
    if (cljs.core.truth_(result__9847__auto___16823)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
      "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16822), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
      "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16822)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16810) {
    var t__9884__auto___16824 = e16810;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
    "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16824, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16825 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654)), tiltontec.rube.cell_types.c_value_state.call(null, c));
    var result__9847__auto___16826 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16825);
    if (cljs.core.truth_(result__9847__auto___16826)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16825), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16825)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16811) {
    var t__9884__auto___16827 = e16811;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16827, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16828 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__9847__auto___16829 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16828);
    if (cljs.core.truth_(result__9847__auto___16829)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16828), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16828)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16812) {
    var t__9884__auto___16830 = e16812;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16830, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16831 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_useds.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__9847__auto___16832 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16831);
    if (cljs.core.truth_(result__9847__auto___16832)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16831), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16831)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16813) {
    var t__9884__auto___16833 = e16813;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16833, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16834 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_input_QMARK_.call(null, c));
    var result__9847__auto___16835 = cljs.core.apply.call(null, cljs.core.not, values__9846__auto___16834);
    if (cljs.core.truth_(result__9847__auto___16835)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__9846__auto___16834), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__9846__auto___16834)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16814) {
    var t__9884__auto___16836 = e16814;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16836, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_model.call(null, c));
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16815) {
    var t__9884__auto__ = e16815;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.cells_test.test_c_formula.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.cells_test.test_c_formula;
}, new cljs.core.Symbol("tiltontec.rube.cells-test", "test-c-formula", "tiltontec.rube.cells-test/test-c-formula", -202278631, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.cells-test", "tiltontec.rube.cells-test", -1570122946, null), new cljs.core.Symbol(null, "test-c-formula", "test-c-formula", -2076148965, null), "test/tiltontec/rube/cells_test.cljc", 24, 1, 79, 
79, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.cells_test.test_c_formula) ? tiltontec.rube.cells_test.test_c_formula.cljs$lang$test : null]));
tiltontec.rube.cells_test.t_c_QMARK__PLUS_ = function tiltontec$rube$cells_test$t_c_QMARK__PLUS_() {
  return cljs.test.test_var.call(null, tiltontec$rube$cells_test$t_c_QMARK__PLUS_.cljs$lang$var);
};
tiltontec.rube.cells_test.t_c_QMARK__PLUS_.cljs$lang$test = function() {
  var c = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "optimize", "optimize", -1912349448), false, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), null, new cljs.core.Keyword(null, "cool", "cool", -10453819)), cljs.core.list(new cljs.core.Symbol(null, "+", "+", 
  -740910886, null), 40, 2)), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(slot_c_SHARP_) {
    var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
    var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
    tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "cool", "cool", -10453819));
    return 40 + 2;
  });
  try {
    var values__9846__auto___16847 = cljs.core._conj.call(null, cljs.core.List.EMPTY, c);
    var result__9847__auto___16848 = cljs.core.apply.call(null, tiltontec.rube.cell_types.c_ref_QMARK_, values__9846__auto___16847);
    if (cljs.core.truth_(result__9847__auto___16848)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.cell_types.c_ref_QMARK_, 
      values__9846__auto___16847), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), values__9846__auto___16847)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16837) {
    var t__9884__auto___16849 = e16837;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-ref?", "c-ref?", 794690162, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16849, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16850 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_rule.call(null, c));
    var result__9847__auto___16851 = cljs.core.apply.call(null, cljs.core.fn_QMARK_, values__9846__auto___16850);
    if (cljs.core.truth_(result__9847__auto___16851)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.fn_QMARK_, values__9846__auto___16850), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), values__9846__auto___16850)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16838) {
    var t__9884__auto___16852 = e16838;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "fn?", "fn?", 1820990818, null), cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16852, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16853 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.unbound), tiltontec.rube.cell_types.c_value.call(null, c));
    var result__9847__auto___16854 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16853);
    if (cljs.core.truth_(result__9847__auto___16854)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
      "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16853), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
      "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16853)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16839) {
    var t__9884__auto___16855 = e16839;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Symbol(null, 
    "unbound", "unbound", 274204873, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16855, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16856 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, new cljs.core.Keyword(null, "unbound", "unbound", -1366326654)), tiltontec.rube.cell_types.c_value_state.call(null, c));
    var result__9847__auto___16857 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16856);
    if (cljs.core.truth_(result__9847__auto___16857)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16856), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
      "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16856)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16840) {
    var t__9884__auto___16858 = e16840;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, "c", "c", -122660552, null)), new cljs.core.Keyword(null, 
    "unbound", "unbound", -1366326654)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16858, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16859 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_callers.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__9847__auto___16860 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16859);
    if (cljs.core.truth_(result__9847__auto___16860)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16859), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16859)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16841) {
    var t__9884__auto___16861 = e16841;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-callers", "c-callers", 1157254450, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16861, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16862 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_useds.call(null, c)), cljs.core.PersistentHashSet.EMPTY);
    var result__9847__auto___16863 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16862);
    if (cljs.core.truth_(result__9847__auto___16863)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16862), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
      null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16862)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16842) {
    var t__9884__auto___16864 = e16842;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), cljs.core.PersistentHashSet.EMPTY, cljs.core.list(new cljs.core.Symbol(null, "c-useds", "c-useds", -765863044, null), new cljs.core.Symbol(null, "c", "c", -122660552, 
    null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16864, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16865 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_input_QMARK_.call(null, c));
    var result__9847__auto___16866 = cljs.core.apply.call(null, cljs.core.not, values__9846__auto___16865);
    if (cljs.core.truth_(result__9847__auto___16866)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__9846__auto___16865), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__9846__auto___16865)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16843) {
    var t__9884__auto___16867 = e16843;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-input?", "c-input?", 1285120932, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16867, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16868 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_model.call(null, c));
    var result__9847__auto___16869 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto___16868);
    if (cljs.core.truth_(result__9847__auto___16869)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto___16868), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto___16868)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16844) {
    var t__9884__auto___16870 = e16844;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-model", "c-model", 721132307, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16870, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16871 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_optimize.call(null, c));
    var result__9847__auto___16872 = cljs.core.apply.call(null, cljs.core.not, values__9846__auto___16871);
    if (cljs.core.truth_(result__9847__auto___16872)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-optimize", "c-optimize", 1870981226, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.not, values__9846__auto___16871), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-optimize", "c-optimize", 1870981226, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__9846__auto___16871)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16845) {
    var t__9884__auto___16873 = e16845;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "c-optimize", "c-optimize", 1870981226, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16873, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_slot_name.call(null, c)), tiltontec.rube.cell_types.c_slot.call(null, c)), new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
      "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16846) {
    var t__9884__auto__ = e16846;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "bingo", "bingo", 719685022), cljs.core.list(new cljs.core.Symbol(null, "c-slot", "c-slot", 1506152790, null), new cljs.core.Symbol(null, 
    "c", "c", -122660552, null)), cljs.core.list(new cljs.core.Symbol(null, "c-slot-name", "c-slot-name", 1313470299, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.cells_test.t_c_QMARK__PLUS_.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.cells_test.t_c_QMARK__PLUS_;
}, new cljs.core.Symbol("tiltontec.rube.cells-test", "t-c?+", "tiltontec.rube.cells-test/t-c?+", -1248347351, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.cells-test", "tiltontec.rube.cells-test", -1570122946, null), new cljs.core.Symbol(null, "t-c?+", "t-c?+", 1747367215, null), "test/tiltontec/rube/cells_test.cljc", 15, 1, 91, 91, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.cells_test.t_c_QMARK__PLUS_) ? 
tiltontec.rube.cells_test.t_c_QMARK__PLUS_.cljs$lang$test : null]));
tiltontec.rube.cells_test.t_eph_1 = function tiltontec$rube$cells_test$t_eph_1() {
  return cljs.test.test_var.call(null, tiltontec$rube$cells_test$t_eph_1.cljs$lang$var);
};
tiltontec.rube.cells_test.t_eph_1.cljs$lang$test = function() {
  tiltontec.rube.cell_types.cells_init.call(null);
  var boct = cljs.core.atom.call(null, 0);
  var b = tiltontec.rube.cells.c_in.call(null, null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "b", "b", 1482224470), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(boct) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, boct, cljs.core.inc);
    };
  }(boct), new cljs.core.Keyword(null, "ephemeral?", "ephemeral?", -311673012), true);
  var crun = cljs.core.atom.call(null, 0);
  var cobs = cljs.core.atom.call(null, 0);
  var c = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "c", "c", -1763192079), new cljs.core.Keyword(null, "obs", "obs", -664011444), function(boct, b, crun, cobs) {
    return function(slot, me, new$, old, c) {
      return cljs.core.swap_BANG_.call(null, cobs, cljs.core.inc);
    };
  }(boct, b, crun, cobs), new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), null, new cljs.core.Keyword(null, "bingo", "bingo", 719685022)), cljs.core.list(new cljs.core.Symbol(null, "swap!", "swap!", -655677516, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null), new cljs.core.Symbol(null, "inc", "inc", 324505433, null)), cljs.core.list(new cljs.core.Symbol(null, "prog1", "prog1", -359901378, 
  null), cljs.core.list(new cljs.core.Symbol(null, "str", "str", -1564826950, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), cljs.core.list(new cljs.core.Symbol(null, "trx", "trx", 316690363, null), null, new cljs.core.Keyword(null, "cellread!!", "cellread!!", -2142314459), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, 
  "b", "b", -1172211299, null))))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(boct, b, crun, cobs) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "bingo", "bingo", 719685022));
      cljs.core.swap_BANG_.call(null, crun, cljs.core.inc);
      var result__11392__auto__ = [cljs.core.str("Hi "), cljs.core.str(tiltontec.rube.evaluate.c_get.call(null, b))].join("");
      tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "cellread!!", "cellread!!", -2142314459), cljs.core.deref.call(null, b));
      return result__11392__auto__;
    };
  }(boct, b, crun, cobs));
  if (cljs.core.truth_(tiltontec.rube.cell_types.c_rule.call(null, c))) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Early no rule"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "c-rule", "c-rule", -450877289, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))))].join(""));
  }
  try {
    var values__9846__auto___16893 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_value.call(null, b));
    var result__9847__auto___16894 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto___16893);
    if (cljs.core.truth_(result__9847__auto___16894)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto___16893), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto___16893)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16874) {
    var t__9884__auto___16895 = e16874;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16895, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.ut_macros.call_trc.call(null, null, new cljs.core.Keyword(null, "valstate", "valstate", 283440834), tiltontec.rube.cell_types.c_value_state.call(null, b));
  try {
    var values__9846__auto___16896 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_value_state.call(null, b)), new cljs.core.Keyword(null, "valid", "valid", 155614240));
    var result__9847__auto___16897 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16896);
    if (cljs.core.truth_(result__9847__auto___16897)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "valid", "valid", 155614240), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, 
      "b", "b", -1172211299, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16896), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "valid", "valid", 155614240), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, 
      "b", "b", -1172211299, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16896)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16875) {
    var t__9884__auto___16898 = e16875;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.Keyword(null, "valid", "valid", 155614240), cljs.core.list(new cljs.core.Symbol(null, "c-value-state", "c-value-state", 687966886, null), new cljs.core.Symbol(null, 
    "b", "b", -1172211299, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16898, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16899 = cljs.core._conj.call(null, cljs.core.List.EMPTY, b);
    var result__9847__auto___16900 = cljs.core.apply.call(null, tiltontec.rube.cell_types.c_valid_QMARK_, values__9846__auto___16899);
    if (cljs.core.truth_(result__9847__auto___16900)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.cell_types.c_valid_QMARK_, 
      values__9846__auto___16899), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__9846__auto___16899)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16876) {
    var t__9884__auto___16901 = e16876;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16901, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  tiltontec.rube.ut_macros.call_trc.call(null, null, b);
  tiltontec.rube.ut_macros.call_trc.call(null, null, cljs.core.deref.call(null, b));
  try {
    var values__9846__auto___16902 = cljs.core._conj.call(null, cljs.core.List.EMPTY, b);
    var result__9847__auto___16903 = cljs.core.apply.call(null, tiltontec.rube.cell_types.c_valid_QMARK_, values__9846__auto___16902);
    if (cljs.core.truth_(result__9847__auto___16903)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, tiltontec.rube.cell_types.c_valid_QMARK_, 
      values__9846__auto___16902), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, 
      cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), values__9846__auto___16902)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16877) {
    var t__9884__auto___16904 = e16877;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "c-valid?", "c-valid?", -913836470, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16904, new cljs.core.Keyword(null, 
    "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16905 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, c)), "Hi ");
    var result__9847__auto___16906 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16905);
    if (cljs.core.truth_(result__9847__auto___16906)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16905), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16905)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16878) {
    var t__9884__auto___16907 = e16878;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi ", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16907, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16908 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, boct)), 1);
    var result__9847__auto___16909 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16908);
    if (cljs.core.truth_(result__9847__auto___16909)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16908), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16908)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16879) {
    var t__9884__auto___16910 = e16879;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16910, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16911 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cobs)), cljs.core.deref.call(null, crun)), 1);
    var result__9847__auto___16912 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16911);
    if (cljs.core.truth_(result__9847__auto___16912)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
      cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16911), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
      cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16911)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e16880) {
    var t__9884__auto___16913 = e16880;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
    cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16913, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16914 = cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, b)));
    var result__9847__auto___16915 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto___16914);
    if (cljs.core.truth_(result__9847__auto___16915)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto___16914), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto___16914)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16881) {
    var t__9884__auto___16916 = e16881;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16916, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.cells.c_reset_BANG_.call(null, b, "Mom");
  try {
    var values__9846__auto___16917 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, c)), "Hi Mom");
    var result__9847__auto___16918 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16917);
    if (cljs.core.truth_(result__9847__auto___16918)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16917), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16917)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16882) {
    var t__9884__auto___16919 = e16882;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16919, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16920 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, boct)), 2);
    var result__9847__auto___16921 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16920);
    if (cljs.core.truth_(result__9847__auto___16921)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16920), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16920)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16883) {
    var t__9884__auto___16922 = e16883;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16922, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16923 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cobs)), cljs.core.deref.call(null, crun)), 2);
    var result__9847__auto___16924 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16923);
    if (cljs.core.truth_(result__9847__auto___16924)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
      cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16923), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
      cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16923)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, 
      "message", "message", -406056002), null], null));
    }
  } catch (e16884) {
    var t__9884__auto___16925 = e16884;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null)), 
    cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16925, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16926 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_value.call(null, b));
    var result__9847__auto___16927 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto___16926);
    if (cljs.core.truth_(result__9847__auto___16927)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto___16926), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto___16926)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16885) {
    var t__9884__auto___16928 = e16885;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16928, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16929 = cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, b)));
    var result__9847__auto___16930 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto___16929);
    if (cljs.core.truth_(result__9847__auto___16930)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto___16929), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto___16929)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16886) {
    var t__9884__auto___16931 = e16886;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16931, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.cells.c_reset_BANG_.call(null, b, "Mom");
  try {
    var values__9846__auto___16932 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, c)), "Hi Mom");
    var result__9847__auto___16933 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16932);
    if (cljs.core.truth_(result__9847__auto___16933)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16932), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16932)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16887) {
    var t__9884__auto___16934 = e16887;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Hi Mom", cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16934, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16935 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, boct)), 3);
    var result__9847__auto___16936 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16935);
    if (cljs.core.truth_(result__9847__auto___16936)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16935), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16935)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16888) {
    var t__9884__auto___16937 = e16888;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "boct", "boct", -100920902, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16937, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16938 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, crun)), 3);
    var result__9847__auto___16939 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16938);
    if (cljs.core.truth_(result__9847__auto___16939)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16938), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16938)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16889) {
    var t__9884__auto___16940 = e16889;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "crun", "crun", 2082590367, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16940, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16941 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.deref.call(null, cobs)), 2);
    var result__9847__auto___16942 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16941);
    if (cljs.core.truth_(result__9847__auto___16942)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16941), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16941)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16890) {
    var t__9884__auto___16943 = e16890;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), new cljs.core.Symbol(null, "cobs", "cobs", -1297441638, null))), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto___16943, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16944 = cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.cell_types.c_value.call(null, b));
    var result__9847__auto___16945 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto___16944);
    if (cljs.core.truth_(result__9847__auto___16945)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto___16944), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto___16944)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16891) {
    var t__9884__auto___16946 = e16891;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol(null, "c-value", "c-value", -997556496, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16946, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core.List.EMPTY, (new cljs.core.Keyword(null, "value", "value", 305978217)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, b)));
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core.nil_QMARK_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
      null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16892) {
    var t__9884__auto__ = e16892;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Keyword(null, "value", "value", 305978217), cljs.core.list(new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, 
    null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.cells_test.t_eph_1.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.cells_test.t_eph_1;
}, new cljs.core.Symbol("tiltontec.rube.cells-test", "t-eph-1", "tiltontec.rube.cells-test/t-eph-1", 1811683794, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.cells-test", "tiltontec.rube.cells-test", -1570122946, null), new cljs.core.Symbol(null, "t-eph-1", "t-eph-1", 655169488, null), "test/tiltontec/rube/cells_test.cljc", 17, 1, 107, 107, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.rube.cells_test.t_eph_1) ? tiltontec.rube.cells_test.t_eph_1.cljs$lang$test : null]));
tiltontec.rube.cells_test.t_c_QMARK_n = function tiltontec$rube$cells_test$t_c_QMARK_n() {
  return cljs.test.test_var.call(null, tiltontec$rube$cells_test$t_c_QMARK_n.cljs$lang$var);
};
tiltontec.rube.cells_test.t_c_QMARK_n.cljs$lang$test = function() {
  var a = tiltontec.rube.cells.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "aa", "aa", 1986357152));
  var b = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(new cljs.core.Symbol("tiltontec.rube.cell-types", "without-c-dependency", "tiltontec.rube.cell-types/without-c-dependency", 2001689308, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837)], null), cljs.core.list(new cljs.core.Symbol(null, 
  "/", "/", -1371932971, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null)), 2)), new cljs.core.Keyword(null, "input?", "input?", -1792843173), true, new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      var _STAR_depender_STAR_16947 = tiltontec.rube.cell_types._STAR_depender_STAR_;
      tiltontec.rube.cell_types._STAR_depender_STAR_ = null;
      try {
        new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837)], null);
        return tiltontec.rube.evaluate.c_get.call(null, a) / 2;
      } finally {
        tiltontec.rube.cell_types._STAR_depender_STAR_ = _STAR_depender_STAR_16947;
      }
    };
  }(a));
  var c = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(cljs.core.list(new cljs.core.Symbol(null, "+", "+", -740910886, null), 1, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null)))), new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(a, 
  b) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      return 1 + tiltontec.rube.evaluate.c_get.call(null, b);
    };
  }(a, b));
  try {
    var values__9846__auto___16952 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, b)), 21);
    var result__9847__auto___16953 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16952);
    if (cljs.core.truth_(result__9847__auto___16953)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16952), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16952)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16948) {
    var t__9884__auto___16954 = e16948;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16954, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto___16955 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, c)), 22);
    var result__9847__auto___16956 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16955);
    if (cljs.core.truth_(result__9847__auto___16956)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 22, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16955), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 22, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16955)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16949) {
    var t__9884__auto___16957 = e16949;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 22, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16957, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  tiltontec.rube.cells.c_reset_BANG_.call(null, b, 42);
  try {
    var values__9846__auto___16958 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, b)), 42);
    var result__9847__auto___16959 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16958);
    if (cljs.core.truth_(result__9847__auto___16959)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16958), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16958)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16950) {
    var t__9884__auto___16960 = e16950;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 42, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16960, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  try {
    var values__9846__auto__ = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, c)), 43);
    var result__9847__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto__);
    if (cljs.core.truth_(result__9847__auto__)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto__), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto__)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
    return result__9847__auto__;
  } catch (e16951) {
    var t__9884__auto__ = e16951;
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 43, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "c", "c", -122660552, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto__, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
};
tiltontec.rube.cells_test.t_c_QMARK_n.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.cells_test.t_c_QMARK_n;
}, new cljs.core.Symbol("tiltontec.rube.cells-test", "t-c?n", "tiltontec.rube.cells-test/t-c?n", 202698120, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.cells-test", "tiltontec.rube.cells-test", -1570122946, null), new cljs.core.Symbol(null, "t-c?n", "t-c?n", 1065739150, null), "test/tiltontec/rube/cells_test.cljc", 15, 1, 155, 155, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.cells_test.t_c_QMARK_n) ? 
tiltontec.rube.cells_test.t_c_QMARK_n.cljs$lang$test : null]));
tiltontec.rube.cells_test.t_c_QMARK_once = function tiltontec$rube$cells_test$t_c_QMARK_once() {
  return cljs.test.test_var.call(null, tiltontec$rube$cells_test$t_c_QMARK_once.cljs$lang$var);
};
tiltontec.rube.cells_test.t_c_QMARK_once.cljs$lang$test = function() {
  var a = tiltontec.rube.cells.c_in.call(null, 42, new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "aa", "aa", 1986357152));
  var b = tiltontec.rube.cells.make_c_formula.call(null, new cljs.core.Keyword(null, "code", "code", 1586293142), cljs.core.list(new cljs.core.Symbol("tiltontec.rube.cell-types", "without-c-dependency", "tiltontec.rube.cell-types/without-c-dependency", 2001689308, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837)], null), cljs.core.list(new cljs.core.Symbol(null, 
  "/", "/", -1371932971, null), cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "a", "a", -482876059, null)), 2)), new cljs.core.Keyword(null, "input?", "input?", -1792843173), null, new cljs.core.Keyword(null, "value", "value", 305978217), tiltontec.rube.cell_types.unbound, new cljs.core.Keyword(null, "rule", "rule", 729973257), function(a) {
    return function(slot_c_SHARP_) {
      var me = tiltontec.rube.cell_types.c_model.call(null, slot_c_SHARP_);
      var cache = tiltontec.rube.cell_types.c_value.call(null, slot_c_SHARP_);
      var _STAR_depender_STAR_16961 = tiltontec.rube.cell_types._STAR_depender_STAR_;
      tiltontec.rube.cell_types._STAR_depender_STAR_ = null;
      try {
        new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "slot", "slot", 240229571), new cljs.core.Keyword(null, "bb", "bb", 75940837)], null);
        return tiltontec.rube.evaluate.c_get.call(null, a) / 2;
      } finally {
        tiltontec.rube.cell_types._STAR_depender_STAR_ = _STAR_depender_STAR_16961;
      }
    };
  }(a));
  try {
    var values__9846__auto___16963 = cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, tiltontec.rube.evaluate.c_get.call(null, b)), 21);
    var result__9847__auto___16964 = cljs.core.apply.call(null, cljs.core._EQ_, values__9846__auto___16963);
    if (cljs.core.truth_(result__9847__auto___16964)) {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "pass", "pass", 1574159993), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core.cons.call(null, cljs.core._EQ_, values__9846__auto___16963), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    } else {
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "fail", "fail", 1706214930), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
      "actual", "actual", 107306363), cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__9846__auto___16963)), new cljs.core.Symbol(null, "not", "not", 1044554643, null)), new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
    }
  } catch (e16962) {
    var t__9884__auto___16965 = e16962;
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "expected", "expected", 1583670997), cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 21, cljs.core.list(new cljs.core.Symbol(null, "c-get", "c-get", 183713010, null), new cljs.core.Symbol(null, "b", "b", -1172211299, null))), new cljs.core.Keyword(null, 
    "actual", "actual", 107306363), t__9884__auto___16965, new cljs.core.Keyword(null, "message", "message", -406056002), null], null));
  }
  return null;
};
tiltontec.rube.cells_test.t_c_QMARK_once.cljs$lang$var = new cljs.core.Var(function() {
  return tiltontec.rube.cells_test.t_c_QMARK_once;
}, new cljs.core.Symbol("tiltontec.rube.cells-test", "t-c?once", "tiltontec.rube.cells-test/t-c?once", 1342095674, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.cells-test", "tiltontec.rube.cells-test", -1570122946, null), new cljs.core.Symbol(null, "t-c?once", "t-c?once", 1934477112, null), "test/tiltontec/rube/cells_test.cljc", 18, 1, 166, 166, cljs.core.List.EMPTY, 
null, cljs.core.truth_(tiltontec.rube.cells_test.t_c_QMARK_once) ? tiltontec.rube.cells_test.t_c_QMARK_once.cljs$lang$test : null]));
cljs.test.run_block.call(null, function() {
  var env16966 = cljs.test.empty_env.call(null);
  var summary16967 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16966, summary16967) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env16966);
      cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.cells-test", "tiltontec.rube.cells-test", -1570122946, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
      return cljs.test.block.call(null, function() {
        var env__9951__auto__ = cljs.test.get_current_env.call(null);
        return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__9951__auto__, env16966, summary16967) {
          return function() {
            if (env__9951__auto__ == null) {
              cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
            } else {
            }
            return null;
          };
        }(env__9951__auto__, env16966, summary16967)], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
          return tiltontec.rube.cells_test.test_input;
        }, new cljs.core.Symbol("tiltontec.rube.cells-test", "test-input", "tiltontec.rube.cells-test/test-input", -545313555, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.cells-test", "tiltontec.rube.cells-test", -1570122946, null), new cljs.core.Symbol(null, "test-input", "test-input", 334376683, null), "test/tiltontec/rube/cells_test.cljc", 20, 1, 44, 44, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.cells_test.test_input) ? tiltontec.rube.cells_test.test_input.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.cells_test.test_c_in;
        }, new cljs.core.Symbol("tiltontec.rube.cells-test", "test-c-in", "tiltontec.rube.cells-test/test-c-in", 128434976, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.cells-test", "tiltontec.rube.cells-test", -1570122946, null), new cljs.core.Symbol(null, "test-c-in", "test-c-in", -885735134, null), "test/tiltontec/rube/cells_test.cljc", 19, 1, 57, 57, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.cells_test.test_c_in) ? tiltontec.rube.cells_test.test_c_in.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.cells_test.test_c_in_PLUS_;
        }, new cljs.core.Symbol("tiltontec.rube.cells-test", "test-c-in+", "tiltontec.rube.cells-test/test-c-in+", 933729239, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.cells-test", "tiltontec.rube.cells-test", -1570122946, null), new cljs.core.Symbol(null, "test-c-in+", "test-c-in+", -1036603951, null), "test/tiltontec/rube/cells_test.cljc", 20, 1, 68, 
        68, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.cells_test.test_c_in_PLUS_) ? tiltontec.rube.cells_test.test_c_in_PLUS_.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.cells_test.test_c_formula;
        }, new cljs.core.Symbol("tiltontec.rube.cells-test", "test-c-formula", "tiltontec.rube.cells-test/test-c-formula", -202278631, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
        "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.cells-test", "tiltontec.rube.cells-test", -1570122946, null), new cljs.core.Symbol(null, "test-c-formula", "test-c-formula", -2076148965, null), "test/tiltontec/rube/cells_test.cljc", 
        24, 1, 79, 79, cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.cells_test.test_c_formula) ? tiltontec.rube.cells_test.test_c_formula.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.cells_test.t_c_QMARK__PLUS_;
        }, new cljs.core.Symbol("tiltontec.rube.cells-test", "t-c?+", "tiltontec.rube.cells-test/t-c?+", -1248347351, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.cells-test", "tiltontec.rube.cells-test", -1570122946, null), new cljs.core.Symbol(null, "t-c?+", "t-c?+", 1747367215, null), "test/tiltontec/rube/cells_test.cljc", 15, 1, 91, 91, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.rube.cells_test.t_c_QMARK__PLUS_) ? tiltontec.rube.cells_test.t_c_QMARK__PLUS_.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.cells_test.t_eph_1;
        }, new cljs.core.Symbol("tiltontec.rube.cells-test", "t-eph-1", "tiltontec.rube.cells-test/t-eph-1", 1811683794, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.cells-test", "tiltontec.rube.cells-test", -1570122946, null), new cljs.core.Symbol(null, "t-eph-1", "t-eph-1", 655169488, null), "test/tiltontec/rube/cells_test.cljc", 17, 1, 107, 107, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.rube.cells_test.t_eph_1) ? tiltontec.rube.cells_test.t_eph_1.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.cells_test.t_c_QMARK_n;
        }, new cljs.core.Symbol("tiltontec.rube.cells-test", "t-c?n", "tiltontec.rube.cells-test/t-c?n", 202698120, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
        212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.cells-test", "tiltontec.rube.cells-test", -1570122946, null), new cljs.core.Symbol(null, "t-c?n", "t-c?n", 1065739150, null), "test/tiltontec/rube/cells_test.cljc", 15, 1, 155, 155, cljs.core.List.EMPTY, 
        null, cljs.core.truth_(tiltontec.rube.cells_test.t_c_QMARK_n) ? tiltontec.rube.cells_test.t_c_QMARK_n.cljs$lang$test : null])), new cljs.core.Var(function() {
          return tiltontec.rube.cells_test.t_c_QMARK_once;
        }, new cljs.core.Symbol("tiltontec.rube.cells-test", "t-c?once", "tiltontec.rube.cells-test/t-c?once", 1342095674, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
        "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "tiltontec.rube.cells-test", "tiltontec.rube.cells-test", -1570122946, null), new cljs.core.Symbol(null, "t-c?once", "t-c?once", 1934477112, null), "test/tiltontec/rube/cells_test.cljc", 18, 1, 166, 166, 
        cljs.core.List.EMPTY, null, cljs.core.truth_(tiltontec.rube.cells_test.t_c_QMARK_once) ? tiltontec.rube.cells_test.t_c_QMARK_once.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env__9951__auto__, env16966, summary16967) {
          return function() {
            if (env__9951__auto__ == null) {
              return cljs.test.clear_env_BANG_.call(null);
            } else {
              return null;
            }
          };
        }(env__9951__auto__, env16966, summary16967)], null));
      }());
    };
  }(env16966, summary16967), function(env16966, summary16967) {
    return function() {
      return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "tiltontec.rube.cells-test", "tiltontec.rube.cells-test", -1570122946, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
    };
  }(env16966, summary16967)], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16966, summary16967) {
    return function() {
      return cljs.core._vreset_BANG_.call(null, summary16967, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary16967), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
    };
  }(env16966, summary16967)], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function(env16966, summary16967) {
    return function() {
      cljs.test.set_env_BANG_.call(null, env16966);
      cljs.test.do_report.call(null, cljs.core.deref.call(null, summary16967));
      cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary16967), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
      return cljs.test.clear_env_BANG_.call(null);
    };
  }(env16966, summary16967)], null));
}());
